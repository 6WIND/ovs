## ------------------------------ ##
## openvswitch 2.5.90 test suite. ##
## ------------------------------ ##

testsuite: command line was:
  $ ../tests/testsuite -C tests AUTOTEST_PATH=utilities:vswitchd:ovsdb:vtep:tests::ovn/controller-vtep:ovn/northd:ovn/utilities:ovn/controller

## --------- ##
## Platform. ##
## --------- ##

hostname = mininet-vm
uname -m = x86_64
uname -r = 3.13.0-76-generic
uname -s = Linux
uname -v = #120-Ubuntu SMP Mon Jan 18 15:59:10 UTC 2016

/usr/bin/uname -p = unknown
/bin/uname -X     = unknown

/bin/arch              = unknown
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = unknown
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /home/mininet/ovs/_clang/utilities
PATH: /home/mininet/ovs/utilities
PATH: /home/mininet/ovs/_clang/vswitchd
PATH: /home/mininet/ovs/vswitchd
PATH: /home/mininet/ovs/_clang/ovsdb
PATH: /home/mininet/ovs/ovsdb
PATH: /home/mininet/ovs/_clang/vtep
PATH: /home/mininet/ovs/vtep
PATH: /home/mininet/ovs/_clang/tests
PATH: /home/mininet/ovs/tests
PATH: /home/mininet/ovs/_clang
PATH: /home/mininet/ovs
PATH: /home/mininet/ovs/_clang/ovn/controller-vtep
PATH: /home/mininet/ovs/ovn/controller-vtep
PATH: /home/mininet/ovs/_clang/ovn/northd
PATH: /home/mininet/ovs/ovn/northd
PATH: /home/mininet/ovs/_clang/ovn/utilities
PATH: /home/mininet/ovs/ovn/utilities
PATH: /home/mininet/ovs/_clang/ovn/controller
PATH: /home/mininet/ovs/ovn/controller
PATH: /usr/local/sbin
PATH: /usr/local/bin
PATH: /usr/sbin
PATH: /usr/bin
PATH: /sbin
PATH: /bin
PATH: /usr/games
PATH: /usr/local/games

testsuite: atconfig:
| # Configurable variable values for building test suites.
| # Generated by ./config.status.
| # Copyright (C) 2012 Free Software Foundation, Inc.
| 
| # The test suite will define top_srcdir=/../.. etc.
| at_testdir='tests'
| abs_builddir='/home/mininet/ovs/_clang/tests'
| at_srcdir='../../tests'
| abs_srcdir='/home/mininet/ovs/_clang/../tests'
| at_top_srcdir='../..'
| abs_top_srcdir='/home/mininet/ovs/_clang/..'
| at_top_build_prefix='../'
| abs_top_builddir='/home/mininet/ovs/_clang'
| 
| # Backward compatibility with Autotest <= 2.59b:
| at_top_builddir=$at_top_build_prefix
| 
| AUTOTEST_PATH='tests'
| 
| SHELL=${CONFIG_SHELL-'/bin/bash'}

testsuite: atlocal:
| # -*- shell-script -*-
| HAVE_OPENSSL='yes'
| HAVE_PYTHON='yes'
| HAVE_PYTHON3='no'
| EGREP='/bin/grep -E'
| PERL='/usr/bin/perl'
| 
| if test x"$PYTHON" = x; then
|     PYTHON='/usr/bin/python'
| fi
| 
| if test x"$PYTHON3" = x; then
|     PYTHON3='${SHELL} /home/mininet/ovs/build-aux/missing python3'
| fi
| 
| PYTHONPATH=$abs_top_srcdir/python:$abs_top_builddir/tests:$PYTHONPATH
| export PYTHONPATH
| 
| PYTHONIOENCODING=utf_8
| export PYTHONIOENCODING
| 
| # PYTHONDONTWRITEBYTECODE=yes keeps Python from creating .pyc and .pyo
| # files.  Creating .py[co] works OK for any given version of Open
| # vSwitch, but it causes trouble if you switch from a version with
| # foo/__init__.py into an (older) version with plain foo.py, since
| # foo/__init__.pyc will cause Python to ignore foo.py.
| PYTHONDONTWRITEBYTECODE=yes
| export PYTHONDONTWRITEBYTECODE
| 
| # Test whether the current working directory name is all ASCII
| # characters.  Some Python code doesn't tolerate non-ASCII characters
| # in filenames very well, so if the current working directory is
| # non-ASCII then we skip the tests that run those programs.
| #
| # This would be just papering over a real problem, except that the
| # tests that we skip are launched from initscripts and thus normally
| # run in system directories with ASCII names.  (This problem only came
| # up at all because the Debian autobuilders do build in a top-level
| # directory named /«BUILDDIR».)
| case `pwd | tr -d ' -~'` in
|     '') non_ascii_cwd=false ;;
|     *) non_ascii_cwd=true
| esac
| 
| # Enable malloc debugging features.
| case `uname` in
| Linux)
|     MALLOC_PERTURB_=165; export MALLOC_PERTURB_
| 
|     # Before glibc 2.11, the feature enabled by MALLOC_CHECK_ was not
|     # thread-safe.  See https://bugzilla.redhat.com/show_bug.cgi?id=585674 and
|     # in particular the patch attached there, which was applied to glibc CVS as
|     # "Restore locking in free_check." between 1.11 and 1.11.1.
|     vswitchd=$abs_top_builddir/vswitchd/ovs-vswitchd
|     glibc=`ldd $vswitchd | sed -n 's/^	libc\.[^ ]* => \([^ ]*\) .*/\1/p'`
|     glibc_version=`$glibc | sed -n '1s/.*version \([0-9]\{1,\}\.[0-9]\{1,\}\).*/\1/p'`
|     case $glibc_version in
|         2.[0-9] | 2.1[01]) mcheck=disabled ;;
|         *) mcheck=enabled ;;
|     esac
|     if test $mcheck = enabled; then
|         MALLOC_CHECK_=2; export MALLOC_CHECK_
|     else
|         echo >&2 "glibc $glibc_version detected, disabling memory checking"
|     fi
|     ;;
| FreeBSD)
|     case `uname -r` in
|     [789].*)
|         MALLOC_CONF=AJ
|         ;;
|     *)
|         MALLOC_CONF=abort:true,junk:true,redzone:true
|         ;;
|     esac
|     export MALLOC_CONF
| esac
| 
| # The name of loopback interface 
| case `uname` in
| Linux)
|     LOOPBACK_INTERFACE=lo
|     ;;
| FreeBSD|NetBSD)
|     LOOPBACK_INTERFACE=lo0
|     ;;
| esac
| 
| # Check for platform.
| case `uname` in
| MINGW*)
|     IS_WIN32="yes"
|     IS_BSD="no"
|     ;;
| FreeBSD|NetBSD)
|     IS_WIN32="no"
|     IS_BSD="yes"
|     ;;
| *)
|     IS_WIN32="no"
|     IS_BSD="no"
|     ;;
| esac
| 
| # Check whether to run IPv6 tests.
| if perl -e 'use Socket; socket(FH, PF_INET6, SOCK_STREAM, 0) || exit 1;'; then
|     HAVE_IPV6=yes
| else
|     HAVE_IPV6=no
| fi
| 
| # XXX: Disable Python related tests on Windows because Open vSwitch code
| # written in Python has not been ported to the Windows platform. We will
| # need to remove the next block after porting is complete.
| if test "$IS_WIN32" = "yes"; then
|     HAVE_PYTHON="no"
| fi
| 
| if test "$HAVE_PYTHON" = "yes" \
|    && test "x`$PYTHON $abs_top_srcdir/tests/test-l7.py --help | grep 'ftp'`" != x; then
|     HAVE_PYFTPDLIB="yes"
| else
|     HAVE_PYFTPDLIB="no"
| fi
| 
| # Determine correct netcat option to quit on stdin EOF
| if nc --version 2>&1 | grep -q nmap.org; then
|     NC_EOF_OPT="--send-only"
| else
|     NC_EOF_OPT="-q 1"
| fi

## ---------------- ##
## Tested programs. ##
## ---------------- ##

../../tests/testsuite.at:1: /home/mininet/ovs/_clang/vswitchd/ovs-vswitchd --version
ovs-vswitchd (Open vSwitch) 2.5.90
Compiled Mar  2 2016 14:59:10

../../tests/testsuite.at:1: /home/mininet/ovs/_clang/utilities/ovs-vsctl --version
ovs-vsctl (Open vSwitch) 2.5.90
Compiled Mar  2 2016 14:59:01
DB Schema 7.12.1

../../tests/testsuite.at:1: /usr/bin/perl --version

This is perl 5, version 18, subversion 2 (v5.18.2) built for x86_64-linux-gnu-thread-multi
(with 41 registered patches, see perl -V for more detail)

Copyright 1987-2013, Larry Wall

Perl may be copied only under the terms of either the Artistic License or the
GNU General Public License, which may be found in the Perl 5 source kit.

Complete documentation for Perl, including FAQ lists, should be found on
this system using "man perl" or "perldoc perl".  If you have access to the
Internet, point your browser at http://www.perl.org/, the Perl Home Page.


## ------------------ ##
## Running the tests. ##
## ------------------ ##
testsuite: starting at: Wed Mar  2 15:08:53 CET 2016
1. appctl-bashcomp - basic verification (completion.at:21): ok     (0m0.096s 0m0.459s)
2. appctl-bashcomp - complex completion check 1 (completion.at:88): ok     (0m0.051s 0m0.333s)
3. appctl-bashcomp - complex completion check 2 (completion.at:142): ok     (0m0.032s 0m0.177s)
4. appctl-bashcomp - complex completion check 3 (completion.at:176): ok     (0m0.074s 0m0.548s)
5. appctl-bashcomp - complex completion check 4 (completion.at:263): ok     (0m0.017s 0m0.169s)
6. appctl-bashcomp - negative test (completion.at:289): ok     (0m0.068s 0m0.363s)
7. vsctl-bashcomp - basic verification (completion.at:343): ok     (0m0.312s 0m1.732s)
8. vsctl-bashcomp - argument completion (completion.at:425): ok     (0m0.993s 0m5.687s)
9. vsctl-bashcomp - negative test (completion.at:752): ok     (0m0.086s 0m0.452s)
10. bfd - basic config on different bridges (bfd.at:45): ok     (0m0.042s 0m0.143s)
11. bfd - Verify tunnel down detection (bfd.at:87): ok     (0m0.073s 0m0.235s)
12. bfd - concatenated path down (bfd.at:168): ok     (0m0.070s 0m0.126s)
13. bfd - Edit the Min Tx/Rx values (bfd.at:195): ok     (0m0.072s 0m0.135s)
14. bfd - check_tnl_key (bfd.at:226): ok     (0m0.010s 0m0.069s)
15. bfd - bfd decay (bfd.at:261): ok     (0m0.328s 0m2.014s)
16. bfd - bfd forwarding_if_rx - bfd on one side (bfd.at:408): ok     (0m0.058s 0m0.241s)
17. bfd - bfd forwarding_if_rx - bfd on both sides (bfd.at:453): ok     (0m0.087s 0m0.317s)
18. bfd - bfd forwarding_if_rx - with bfd decay (bfd.at:519): ok     (0m0.115s 0m0.611s)
19. bfd - bfd forwarding_if_rx - demand_rx_bfd (bfd.at:607): ok     (0m0.481s 0m2.129s)
20. bfd - flap_count (bfd.at:678): ok     (0m0.307s 0m0.999s)
21. cfm - check update ovsdb 1 (cfm.at:49): ok     (0m0.144s 0m0.313s)
22. cfm - check update ovsdb 2 (cfm.at:78): ok     (0m0.111s 0m0.260s)
23. cfm - demand mode (cfm.at:112): ok     (0m0.470s 0m3.783s)
24. cfm - demand_rx_ccm (cfm.at:154): ok     (0m1.378s 0m6.369s)
25. cfm - flap_count (cfm.at:216): ok     (0m0.060s 0m0.117s)
26. cfm - fault_override (cfm.at:249): ok     (0m0.021s 0m0.148s)
27. lacp - config (lacp.at:13): ok     (0m0.008s 0m0.059s)
28. lacp - multi port config (lacp.at:53): ok     (0m0.013s 0m0.055s)
29. lacp - negotiation (lacp.at:139): ok     (0m0.067s 0m0.255s)
30. test flow extractor (library.at:3): ok     (0m0.040s 0m0.016s)
31. test TCP/IP checksumming (library.at:9): ok     (0m0.001s 0m0.005s)
32. test hash functions (library.at:14): ok     (0m0.142s 0m0.006s)
33. test hash map (library.at:18): ok     (0m0.035s 0m0.011s)
34. test hash index (library.at:24): ok     (0m0.088s 0m0.007s)
35. test cuckoo hash (library.at:30): ok     (0m6.288s 0m0.008s)
36. test atomic operations (library.at:36): ok     (0m3.882s 0m0.004s)
37. test linked lists (library.at:40): ok     (0m0.003s 0m0.003s)
38. test packet library (library.at:45): ok     (0m0.001s 0m0.005s)
39. test SHA-1 (library.at:49): ok     (0m0.081s 0m0.007s)
40. test type properties (library.at:54): ok     (0m0.000s 0m0.005s)
41. test strtok_r bug fix (library.at:58): ok     (0m0.000s 0m0.004s)
42. test byte order conversion (library.at:63): ok     (0m0.000s 0m0.003s)
43. test random number generator (library.at:68): ok     (0m0.004s 0m0.003s)
44. ctz() function (library.at:120): ok     (0m0.000s 0m0.004s)
45. clz() function (library.at:120): ok     (0m0.002s 0m0.002s)
46. round_up_pow2() function (library.at:120): ok     (0m0.000s 0m0.004s)
47. round_down_pow2() function (library.at:120): ok     (0m0.000s 0m0.003s)
48. count_1bits() function (library.at:120): ok     (0m0.003s 0m0.001s)
49. log_2_floor() function (library.at:120): ok     (0m0.000s 0m0.003s)
50. bitwise_copy() function (library.at:120): ok     (0m0.007s 0m0.002s)
51. bitwise_zero() function (library.at:120): ok     (0m0.000s 0m0.003s)
52. bitwise_one() function (library.at:120): ok     (0m0.002s 0m0.002s)
53. bitwise_is_all_zeros() function (library.at:120): ok     (0m0.094s 0m0.000s)
54. ovs_scan() function (library.at:120): ok     (0m0.000s 0m0.004s)
55. test unix socket, short pathname - C (library.at:138): ok     (0m0.001s 0m0.003s)
56. test unix socket, long pathname - C (library.at:148): ok     (0m0.000s 0m0.006s)
57. test unix socket, short pathname - Python2 (library.at:168): ok     (0m0.055s 0m0.061s)
58. test unix socket, short pathname - Python3 (library.at:169): skipped (library.at:169)
59. test unix socket, long pathname - Python2 (library.at:190): ok     (0m0.053s 0m0.013s)
60. test unix socket, long pathname - Python3 (library.at:191): skipped (library.at:191)
61. ovs_assert (library.at:193): ok     (0m0.003s 0m0.010s)
62. snprintf (library.at:216): ok     (0m0.000s 0m0.003s)
63. test bitmap functions (library.at:220): ok     (0m0.000s 0m0.005s)
64. use of public headers (library.at:225): ok     (0m0.000s 0m0.005s)
65. test ofpbuf module (library.at:229): ok     (0m0.000s 0m0.004s)
66. heap library -- insert delete same order (heap.at:8): ok     (0m0.023s 0m0.006s)
67. heap library -- insert delete reverse order (heap.at:9): ok     (0m0.018s 0m0.009s)
68. heap library -- insert delete every order (heap.at:10): ok     (0m0.032s 0m0.011s)
69. heap library -- insert delete same order with dups (heap.at:11): ok     (0m0.200s 0m0.012s)
70. heap library -- raw insert (heap.at:12): ok     (0m0.017s 0m0.002s)
71. heap library -- raw delete (heap.at:13): ok     (0m0.004s 0m0.002s)
72. hrw bundle link selection (bundle.at:10): ok     (0m0.172s 0m0.012s)
73. active_backup bundle link selection (bundle.at:80): ok     (0m0.076s 0m0.008s)
74. hrw bundle single link selection (bundle.at:151): ok     (0m0.020s 0m0.006s)
75. hrw bundle no link selection (bundle.at:159): ok     (0m0.013s 0m0.016s)
76. bundle action missing argument (bundle.at:166): ok     (0m0.000s 0m0.006s)
77. bundle action bad fields (bundle.at:172): ok     (0m0.000s 0m0.005s)
78. bundle action bad algorithm (bundle.at:178): ok     (0m0.002s 0m0.003s)
79. bundle action bad slave type (bundle.at:184): ok     (0m0.002s 0m0.003s)
80. bundle action bad slave delimiter (bundle.at:190): ok     (0m0.001s 0m0.003s)
81. flow classifier - empty (classifier.at:2): ok     (0m0.000s 0m0.003s)
82. flow classifier - destroy null (classifier.at:2): ok     (0m0.000s 0m0.003s)
83. flow classifier - single rule (classifier.at:2): ok     (0m1.286s 0m0.017s)
84. flow classifier - rule replacement (classifier.at:2): ok     (0m2.152s 0m0.016s)
85. flow classifier - many rules in one list (classifier.at:2): ok     (0m0.194s 0m0.011s)
86. flow classifier - versioned many rules in one list (classifier.at:2): ok     (0m0.247s 0m0.014s)
87. flow classifier - many rules in one table (classifier.at:2): ok     (0m1.193s 0m0.013s)
88. flow classifier - versioned many rules in one table (classifier.at:2): ok     (0m1.278s 0m0.008s)
89. flow classifier - many rules in two tables (classifier.at:2): ok     (0m4.116s 0m0.017s)
90. flow classifier - versioned many rules in two tables (classifier.at:2): ok     (0m6.229s 0m0.012s)
91. flow classifier - many rules in five tables (classifier.at:2): ok     (0m4.149s 0m0.024s)
92. flow classifier - versioned many rules in five tables (classifier.at:2): ok     (0m6.343s 0m0.002s)
93. miniflow - miniflow (classifier.at:21): ok     (0m0.052s 0m0.002s)
94. miniflow - minimask_has_extra (classifier.at:21): ok     (0m0.053s 0m0.002s)
95. miniflow - minimask_combine (classifier.at:21): ok     (0m0.129s 0m0.016s)
96. flow classifier - lookup segmentation (classifier.at:31): ok     (0m0.014s 0m0.070s)
97. flow classifier - prefix lookup (classifier.at:69): ok     (0m0.043s 0m0.102s)
98. single conjunctive match (classifier.at:134): ok     (0m0.073s 0m0.479s)
99. multiple conjunctive match (classifier.at:171): ok     (0m0.356s 0m2.994s)
100. conjunctive match priority fallback (classifier.at:247): ok     (0m0.040s 0m0.184s)
101. conjunctive match and other actions (classifier.at:293): ok     (0m0.019s 0m0.045s)
102. check struct tail padding (check-structs.at:11): ok     (0m0.019s 0m0.006s)
103. check struct internal alignment (check-structs.at:21): ok     (0m0.012s 0m0.008s)
104. check struct declared size (check-structs.at:32): ok     (0m0.004s 0m0.016s)
105. check wrong struct's declared size (check-structs.at:44): ok     (0m0.008s 0m0.012s)
106. daemon (daemon.at:3): ok     (0m0.009s 0m0.028s)
107. daemon --monitor (daemon.at:22): ok     (0m0.028s 0m0.087s)
108. daemon --detach (daemon.at:71): ok     (0m0.004s 0m0.025s)
109. daemon --detach --monitor (daemon.at:94): ok     (0m0.010s 0m0.071s)
110. daemon --detach startup errors (daemon.at:144): ok     (0m0.006s 0m0.018s)
111. daemon --detach --monitor startup errors (daemon.at:153): ok     (0m0.008s 0m0.016s)
112. daemon --service (daemon.at:163): skipped (daemon.at:165)
113. daemon - Python2 (daemon-py.at:23): ok     (0m0.005s 0m0.028s)
114. daemon - Python3 (daemon-py.at:24): skipped (daemon-py.at:24)
115. daemon --monitor - Python2 (daemon-py.at:70): ok     (0m0.002s 0m0.074s)
116. daemon --monitor - Python3 (daemon-py.at:71): skipped (daemon-py.at:71)
117. daemon --monitor restart exit code - Python2 (daemon-py.at:117): ok     (0m0.023s 0m0.106s)
118. daemon --monitor restart exit code - Python3 (daemon-py.at:118): skipped (daemon-py.at:118)
119. daemon --detach - Python2 (daemon-py.at:137): ok     (0m0.062s 0m0.030s)
120. daemon --detach - Python3 (daemon-py.at:138): skipped (daemon-py.at:138)
121. daemon --detach --monitor - Python2 (daemon-py.at:189): ok     (0m0.039s 0m0.098s)
122. daemon --detach --monitor - Python3 (daemon-py.at:190): skipped (daemon-py.at:190)
123. daemon --detach startup errors - Python2 (daemon-py.at:203): ok     (0m0.065s 0m0.022s)
124. daemon --detach startup errors - Python3 (daemon-py.at:204): skipped (daemon-py.at:204)
125. daemon --detach --monitor startup errors - Python2 (daemon-py.at:216): ok     (0m0.036s 0m0.058s)
126. daemon --detach --monitor startup errors - Python3 (daemon-py.at:217): skipped (daemon-py.at:217)
127. daemon --detach closes standard fds - Python2 (daemon-py.at:240): ok     (0m0.028s 0m0.043s)
128. daemon --detach closes standard fds - Python3 (daemon-py.at:241): skipped (daemon-py.at:241)
129. daemon --detach --monitor closes standard fds - Python2 (daemon-py.at:265): ok     (0m0.052s 0m0.027s)
130. daemon --detach --monitor closes standard fds - Python3 (daemon-py.at:266): skipped (daemon-py.at:266)
131. OpenFlow 1.0 action translation (ofp-actions.at:3): ok     (0m0.004s 0m0.008s)
132. OpenFlow 1.0 "instruction" translations (ofp-actions.at:263): ok     (0m0.002s 0m0.008s)
133. OpenFlow 1.1 action translation (ofp-actions.at:293): ok     (0m0.004s 0m0.007s)
134. OpenFlow 1.1 instruction translation (ofp-actions.at:430): ok     (0m0.002s 0m0.007s)
135. OpenFlow 1.2 action translation (ofp-actions.at:641): ok     (0m0.000s 0m0.009s)
136. OpenFlow 1.3 action translation (ofp-actions.at:667): ok     (0m0.000s 0m0.009s)
137. OpenFlow 1.5 action translation (ofp-actions.at:695): ok     (0m0.000s 0m0.009s)
138. ofp-actions - inconsistent MPLS actions (ofp-actions.at:719): ok     (0m0.012s 0m0.041s)
139. reg_load <-> set_field translation corner case (ofp-actions.at:731): ok     (0m0.010s 0m0.045s)
140. empty (ofp-print.at:3): ok     (0m0.000s 0m0.005s)
141. too short (ofp-print.at:9): ok     (0m0.000s 0m0.005s)
142. wrong OpenFlow version (ofp-print.at:17): ok     (0m0.001s 0m0.006s)
143. truncated message (ofp-print.at:27): ok     (0m0.001s 0m0.004s)
144. message only uses part of buffer (ofp-print.at:35): ok     (0m0.000s 0m0.005s)
145. OFPT_HELLO - ordinary (ofp-print.at:44): ok     (0m0.001s 0m0.004s)
146. OFPT_HELLO with extra data (ofp-print.at:52): ok     (0m0.001s 0m0.004s)
147. OFPT_HELLO with version bitmap (ofp-print.at:64): ok     (0m0.001s 0m0.004s)
148. OFPT_HELLO with version bitmap and extra data (ofp-print.at:73): ok     (0m0.000s 0m0.005s)
149. OFPT_HELLO with higher than supported version (ofp-print.at:87): ok     (0m0.000s 0m0.013s)
150. OFPT_HELLO with contradictory version bitmaps (ofp-print.at:106): ok     (0m0.001s 0m0.023s)
151. OFPT_ECHO_REQUEST, empty payload (ofp-print.at:148): ok     (0m0.000s 0m0.005s)
152. OFPT_ECHO_REQUEST, 5-byte payload (ofp-print.at:155): ok     (0m0.002s 0m0.004s)
153. OFPT_ECHO_REPLY, empty payload (ofp-print.at:163): ok     (0m0.001s 0m0.005s)
154. OFPT_ECHO_REPLY, 5-byte payload (ofp-print.at:170): ok     (0m0.002s 0m0.004s)
155. OFPT_FEATURES_REQUEST (ofp-print.at:178): ok     (0m0.000s 0m0.005s)
156. OFPT_FEATURES_REPLY - OF1.0 (ofp-print.at:185): ok     (0m0.000s 0m0.005s)
157. OFPT_FEATURES_REPLY cut off mid-port - OF1.0 (ofp-print.at:235): ok     (0m0.001s 0m0.008s)
158. OFPT_FEATURES_REPLY - OF1.1 (ofp-print.at:274): ok     (0m0.002s 0m0.004s)
159. OFPT_FEATURES_REPLY cut off mid-port - OF1.1 (ofp-print.at:305): ok     (0m0.003s 0m0.007s)
160. OFPT_FEATURES_REPLY - OF1.2 (ofp-print.at:334): ok     (0m0.000s 0m0.004s)
161. OFPT_FEATURES_REPLY cut off mid-port - OF1.2 (ofp-print.at:365): ok     (0m0.001s 0m0.007s)
162. OFPT_FEATURES_REPLY - OF1.3 (ofp-print.at:394): ok     (0m0.002s 0m0.004s)
163. OFPT_FEATURES_REPLY - with auxiliary_id - OF1.3 (ofp-print.at:406): ok     (0m0.001s 0m0.004s)
164. OFPT_GET_CONFIG_REQUEST (ofp-print.at:418): ok     (0m0.000s 0m0.005s)
165. OFPT_GET_CONFIG_REPLY, most common form (ofp-print.at:425): ok     (0m0.000s 0m0.005s)
166. OFPT_GET_CONFIG_REPLY, frags and miss_send_len (ofp-print.at:433): ok     (0m0.000s 0m0.005s)
167. OFPT_PACKET_IN - OF1.0 (ofp-print.at:440): ok     (0m0.002s 0m0.004s)
168. OFPT_PACKET_IN - OF1.0, with hex output of packet data (ofp-print.at:454): ok     (0m0.000s 0m0.005s)
169. OFPT_PACKET_IN - OF1.1 (ofp-print.at:472): ok     (0m0.000s 0m0.005s)
170. OFPT_PACKET_IN - OF1.2 (ofp-print.at:487): ok     (0m0.000s 0m0.006s)
171. OFPT_PACKET_IN - OF1.2, with hex output of packet data (ofp-print.at:501): ok     (0m0.000s 0m0.005s)
172. OFPT_PACKET_IN - OF1.3 (ofp-print.at:518): ok     (0m0.000s 0m0.005s)
173. OFPT_PACKET_IN - OF1.4 (ofp-print.at:533): ok     (0m0.002s 0m0.005s)
174. OFPT_PACKET_IN - OF1.5 (ofp-print.at:548): ok     (0m0.000s 0m0.006s)
175. OFPT_PACKET_IN - OF1.3, with hex output of packet data (ofp-print.at:563): ok     (0m0.001s 0m0.004s)
176. OFPT_FLOW_REMOVED - OF1.0 (ofp-print.at:581): ok     (0m0.000s 0m0.005s)
177. OFPT_FLOW_REMOVED - OF1.2 (ofp-print.at:595): ok     (0m0.001s 0m0.004s)
178. OFPT_FLOW_REMOVED - OF1.3 (ofp-print.at:606): ok     (0m0.000s 0m0.005s)
179. OFPT_PORT_STATUS - OF1.0 (ofp-print.at:617): ok     (0m0.000s 0m0.006s)
180. OFPT_PORT_STATUS - OF1.1 (ofp-print.at:635): ok     (0m0.000s 0m0.005s)
181. OFPT_PORT_STATUS - OF1.4 (ofp-print.at:654): ok     (0m0.000s 0m0.006s)
182. OFPT_PACKET_OUT - OF1.0 (ofp-print.at:674): ok     (0m0.000s 0m0.005s)
183. OFPT_PACKET_OUT - OF1.0, with packet (ofp-print.at:688): ok     (0m0.000s 0m0.006s)
184. OFPT_PACKET_OUT - OF1.0, with hex output of packet data (ofp-print.at:703): ok     (0m0.000s 0m0.004s)
185. OFPT_PACKET_OUT - OF1.1 (ofp-print.at:722): ok     (0m0.001s 0m0.005s)
186. OFPT_PACKET_OUT - OF1.1, with packet (ofp-print.at:733): ok     (0m0.002s 0m0.003s)
187. OFPT_FLOW_MOD - OF1.0 - low verbosity (ofp-print.at:750): ok     (0m0.003s 0m0.005s)
188. OFPT_FLOW_MOD - OF1.1 - low verbosity (ofp-print.at:768): ok     (0m0.002s 0m0.003s)
189. OFPT_FLOW_MOD - OF1.2 - low verbosity (ofp-print.at:788): ok     (0m0.000s 0m0.006s)
190. OFPT_FLOW_MOD - OF1.0 - high verbosity (ofp-print.at:808): ok     (0m0.000s 0m0.007s)
191. OFPT_FLOW_MOD - OF1.2 - low verbosity (ofp-print.at:826): ok     (0m0.000s 0m0.005s)
192. OFPT_FLOW_MOD - OF1.3 - flags - low verbosity (ofp-print.at:845): ok     (0m0.000s 0m0.005s)
193. OFPT_FLOW_MOD - OF1.2 - set-field ip_src (ofp-print.at:863): ok     (0m0.000s 0m0.005s)
194. OFPT_FLOW_MOD - OF1.2 - set-field ip_dst (ofp-print.at:878): ok     (0m0.000s 0m0.005s)
195. OFPT_FLOW_MOD - OF1.2 - set-field sctp_src (ofp-print.at:893): ok     (0m0.003s 0m0.004s)
196. OFPT_FLOW_MOD - OF1.2 - set-field sctp_dst (ofp-print.at:908): ok     (0m0.001s 0m0.004s)
197. OFPT_FLOW_MOD - OF1.2 - experimenter OXM (ofp-print.at:923): ok     (0m0.000s 0m0.005s)
198. OFPT_FLOW_MOD - OF1.2 - set-field nd_target, nd_sll (ofp-print.at:937): ok     (0m0.001s 0m0.004s)
199. OFPT_FLOW_MOD - OF1.3 - meter (ofp-print.at:955): ok     (0m0.000s 0m0.005s)
200. OFPT_FLOW reply - OF1.2 - set-field ip_src (ofp-print.at:966): ok     (0m0.002s 0m0.003s)
201. OFPT_FLOW reply - OF1.2 - set-field ip_dst (ofp-print.at:983): ok     (0m0.000s 0m0.005s)
202. OFPT_FLOW reply - OF1.2 - set-field sctp_src (ofp-print.at:1000): ok     (0m0.001s 0m0.004s)
203. OFPT_FLOW reply - OF1.2 - set-field sctp_dst (ofp-print.at:1017): ok     (0m0.000s 0m0.005s)
204. OFPT_PORT_MOD - OF1.0 (ofp-print.at:1034): ok     (0m0.000s 0m0.005s)
205. OFPT_PORT_MOD - OF1.1 (ofp-print.at:1047): ok     (0m0.000s 0m0.005s)
206. OFPT_PORT_MOD - OF1.2 (ofp-print.at:1061): ok     (0m0.000s 0m0.004s)
207. OFPT_PORT_MOD - OF1.3 (ofp-print.at:1075): ok     (0m0.000s 0m0.005s)
208. OFPT_PORT_MOD - OF1.4 (ofp-print.at:1089): ok     (0m0.000s 0m0.004s)
209. OFPT_TABLE_MOD - OF1.1 (ofp-print.at:1103): ok     (0m0.001s 0m0.004s)
210. OFPT_TABLE_MOD - OF1.2 (ofp-print.at:1112): ok     (0m0.000s 0m0.005s)
211. OFPT_TABLE_MOD - OF1.3 (ofp-print.at:1121): ok     (0m0.002s 0m0.004s)
212. OFPT_TABLE_MOD - OF1.4 (ofp-print.at:1130): ok     (0m0.000s 0m0.005s)
213. OFPST_DESC request (ofp-print.at:1139): ok     (0m0.000s 0m0.006s)
214. OFPST_DESC reply (ofp-print.at:1146): ok     (0m0.000s 0m0.005s)
215. OFPST_FLOW request - OF1.0 (ofp-print.at:1226): ok     (0m0.002s 0m0.004s)
216. OFPST_FLOW request - OF1.2 (ofp-print.at:1238): ok     (0m0.001s 0m0.004s)
217. OFPST_FLOW request - OF1.3 (ofp-print.at:1250): ok     (0m0.001s 0m0.007s)
218. OFPST_FLOW reply - OF1.0 (ofp-print.at:1262): ok     (0m0.001s 0m0.004s)
219. OFPST_FLOW reply - OF1.2 (ofp-print.at:1306): ok     (0m0.000s 0m0.004s)
220. OFPST_AGGREGATE request - OF1.0 (ofp-print.at:1341): ok     (0m0.000s 0m0.005s)
221. OFPST_AGGREGATE request - OF1.2 (ofp-print.at:1353): ok     (0m0.003s 0m0.003s)
222. OFPST_AGGREGATE request - OF1.3 (ofp-print.at:1365): ok     (0m0.002s 0m0.003s)
223. OFPST_AGGREGATE reply - OF1.0 (ofp-print.at:1377): ok     (0m0.000s 0m0.005s)
224. OFPST_AGGREGATE reply - OF1.2 (ofp-print.at:1388): ok     (0m0.000s 0m0.005s)
225. OFPST_AGGREGATE reply - OF1.3 (ofp-print.at:1399): ok     (0m0.000s 0m0.005s)
226. OFPST_TABLE request - OF1.0 (ofp-print.at:1410): ok     (0m0.000s 0m0.005s)
227. OFPST_TABLE request - OF1.1 (ofp-print.at:1417): ok     (0m0.002s 0m0.004s)
228. OFPST_TABLE request - OF1.2 (ofp-print.at:1424): ok     (0m0.000s 0m0.006s)
229. OFPST_TABLE request - OF1.3 (ofp-print.at:1431): ok     (0m0.000s 0m0.006s)
230. OFPST_TABLE reply - OF1.0 (ofp-print.at:1438): ok     (0m0.001s 0m0.006s)
231. OFPST_TABLE reply - OF1.2 (ofp-print.at:1467): ok     (0m0.146s 0m1.704s)
232. OFPST_TABLE reply - OF1.3 (ofp-print.at:1558): ok     (0m0.002s 0m0.003s)
233. OFPST_PORT request - 1.0 (ofp-print.at:1575): ok     (0m0.000s 0m0.008s)
234. OFPST_PORT request - 1.1 (ofp-print.at:1585): ok     (0m0.000s 0m0.005s)
235. OFPST_PORT request - 1.2 (ofp-print.at:1595): ok     (0m0.000s 0m0.005s)
236. OFPST_PORT request - 1.3 (ofp-print.at:1605): ok     (0m0.002s 0m0.003s)
237. OFPST_PORT reply - OF1.0 (ofp-print.at:1615): ok     (0m0.000s 0m0.005s)
238. OFPST_PORT reply - OF1.2 (ofp-print.at:1658): ok     (0m0.001s 0m0.006s)
239. OFPST_PORT reply - OF1.3 (ofp-print.at:1693): ok     (0m0.000s 0m0.005s)
240. OFPST_PORT reply - OF1.4 (ofp-print.at:1732): ok     (0m0.000s 0m0.005s)
241. OFPST_QUEUE request - OF1.0 (ofp-print.at:1752): ok     (0m0.000s 0m0.005s)
242. OFPST_QUEUE request - OF1.1 (ofp-print.at:1762): ok     (0m0.000s 0m0.005s)
243. OFPST_QUEUE request - OF1.2 (ofp-print.at:1772): ok     (0m0.000s 0m0.006s)
244. OFPST_QUEUE request - OF1.3 (ofp-print.at:1782): ok     (0m0.001s 0m0.006s)
245. OFPST_QUEUE reply - OF1.0 (ofp-print.at:1792): ok     (0m0.000s 0m0.005s)
246. OFPST_QUEUE reply - OF1.1 (ofp-print.at:1819): ok     (0m0.000s 0m0.005s)
247. OFPST_QUEUE reply - OF1.2 (ofp-print.at:1846): ok     (0m0.000s 0m0.005s)
248. OFPST_QUEUE reply - OF1.3 (ofp-print.at:1873): ok     (0m0.000s 0m0.005s)
249. OFPST_QUEUE reply - OF1.4 (ofp-print.at:1906): ok     (0m0.000s 0m0.005s)
250. OFPST_GROUP request (ofp-print.at:1940): ok     (0m0.002s 0m0.004s)
251. OFPST_GROUP reply - OF1.1 (ofp-print.at:1949): ok     (0m0.001s 0m0.004s)
252. OFPST_GROUP reply - OF1.3 (ofp-print.at:1969): ok     (0m0.000s 0m0.004s)
253. OFPST_GROUP_DESC request - OF1.1 (ofp-print.at:1991): ok     (0m0.001s 0m0.004s)
254. OFPST_GROUP_DESC request - OF1.5 (ofp-print.at:1999): ok     (0m0.000s 0m0.005s)
255. OFPST_GROUP_DESC reply - OF1.1 (ofp-print.at:2008): ok     (0m0.000s 0m0.004s)
256. OFPST_GROUP_DESC reply - OF1.5 (ofp-print.at:2025): ok     (0m0.001s 0m0.004s)
257. OFPST_GROUP_FEATURES request (ofp-print.at:2050): ok     (0m0.000s 0m0.005s)
258. OFPST_GROUP_FEATURES reply (ofp-print.at:2058): ok     (0m0.002s 0m0.003s)
259. OFPST_PORT_DESC request - OF1.0 (ofp-print.at:2085): ok     (0m0.001s 0m0.004s)
260. OFPST_PORT_DESC request - OF1.5 (ofp-print.at:2092): ok     (0m0.000s 0m0.005s)
261. OFPST_PORT_DESC reply - OF1.0 (ofp-print.at:2101): ok     (0m0.000s 0m0.005s)
262. OFPST_PORT_DESC reply - OF1.4 (ofp-print.at:2120): ok     (0m0.000s 0m0.005s)
263. OFPT_METER_MOD request - OF1.3 (ofp-print.at:2141): ok     (0m0.000s 0m0.005s)
264. OFPT_METER_MOD request - bad band - OF1.3 (ofp-print.at:2152): ok     (0m0.000s 0m0.005s)
265. OFPT_METER_MOD request - bad command - OF1.3 (ofp-print.at:2162): ok     (0m0.001s 0m0.004s)
266. OFPT_METER_MOD request - bad flags - OF1.3 (ofp-print.at:2171): ok     (0m0.002s 0m0.004s)
267. OFPST_METER request - OF1.3 (ofp-print.at:2181): ok     (0m0.001s 0m0.005s)
268. OFPST_METER_CONFIG request - OF1.3 (ofp-print.at:2188): ok     (0m0.000s 0m0.005s)
269. OFPST_METER_FEATURES request - OF1.3 (ofp-print.at:2195): ok     (0m0.000s 0m0.005s)
270. OFPST_METER_FEATURES reply - OF1.3 (ofp-print.at:2202): ok     (0m0.001s 0m0.005s)
271. OFPST_METER_CONFIG reply - OF1.3 (ofp-print.at:2215): ok     (0m0.000s 0m0.005s)
272. OFPST_METER reply - OF1.3 (ofp-print.at:2235): ok     (0m0.002s 0m0.004s)
273. OFPST_TABLE_FEATURES request - OF1.3 (ofp-print.at:2259): ok     (0m0.002s 0m0.004s)
274. OFPT_BARRIER_REQUEST - OF1.0 (ofp-print.at:2478): ok     (0m0.000s 0m0.005s)
275. OFPT_BARRIER_REQUEST - OF1.1 (ofp-print.at:2485): ok     (0m0.000s 0m0.006s)
276. OFPT_BARRIER_REQUEST - OF1.2 (ofp-print.at:2492): ok     (0m0.000s 0m0.006s)
277. OFPT_BARRIER_REQUEST - OF1.3 (ofp-print.at:2499): ok     (0m0.002s 0m0.004s)
278. OFPT_BARRIER_REPLY - OF1.0 (ofp-print.at:2506): ok     (0m0.000s 0m0.005s)
279. OFPT_BARRIER_REPLY - OF1.1 (ofp-print.at:2513): ok     (0m0.002s 0m0.003s)
280. OFPT_BARRIER_REPLY - OF1.2 (ofp-print.at:2520): ok     (0m0.000s 0m0.005s)
281. OFPT_BARRIER_REPLY - OF1.3 (ofp-print.at:2527): ok     (0m0.002s 0m0.003s)
282. OFPT_QUEUE_GET_CONFIG_REQUEST - OF1.0 (ofp-print.at:2534): ok     (0m0.000s 0m0.005s)
283. OFPT_QUEUE_GET_CONFIG_REQUEST - OF1.2 (ofp-print.at:2541): ok     (0m0.000s 0m0.004s)
284. OFPST_QUEUE_DESC request - OF1.4 (ofp-print.at:2549): ok     (0m0.000s 0m0.004s)
285. OFPT_QUEUE_GET_CONFIG_REPLY - OF1.0 (ofp-print.at:2558): ok     (0m0.000s 0m0.006s)
286. OFPT_QUEUE_GET_CONFIG_REPLY - OF1.1 (ofp-print.at:2573): ok     (0m0.000s 0m0.005s)
287. OFPT_QUEUE_GET_CONFIG_REPLY - OF1.2 (ofp-print.at:2588): ok     (0m0.002s 0m0.003s)
288. OFPT_QUEUE_GET_CONFIG_REPLY - OF1.3 (ofp-print.at:2603): ok     (0m0.000s 0m0.005s)
289. OFPST_QUEUE_DESC reply - OF1.4 (ofp-print.at:2619): ok     (0m0.002s 0m0.003s)
290. OFPT_SET_ASYNC - OF1.3 (ofp-print.at:2638): ok     (0m0.000s 0m0.005s)
291. OFPT_ROLE_REQUEST - OF1.2 (ofp-print.at:2667): ok     (0m0.000s 0m0.005s)
292. OFPT_ROLE_REQUEST - nochange - OF1.2 (ofp-print.at:2677): ok     (0m0.000s 0m0.007s)
293. NXT_ROLE_REQUEST (ofp-print.at:2687): ok     (0m0.000s 0m0.005s)
294. OFPT_ROLE_REPLY - OF1.2 (ofp-print.at:2697): ok     (0m0.001s 0m0.004s)
295. NXT_ROLE_REPLY (ofp-print.at:2707): ok     (0m0.000s 0m0.004s)
296. OFP_ROLE_STATUS - master, experimenter - OF1.4 (ofp-print.at:2717): ok     (0m0.000s 0m0.004s)
297. OFP_ROLE_STATUS - master, config - OF1.4 (ofp-print.at:2727): ok     (0m0.000s 0m0.004s)
298. OFP_ROLE_STATUS - master, config,generation - OF1.4 (ofp-print.at:2737): ok     (0m0.002s 0m0.003s)
299. OFP_REQUESTFORWARD - OF1.4 (ofp-print.at:2747): ok     (0m0.000s 0m0.004s)
300. OFP_REQUESTFORWARD - OF1.4 (ofp-print.at:2759): ok     (0m0.000s 0m0.004s)
301. OFP_REQUESTFORWARD - OF1.4 (ofp-print.at:2771): ok     (0m0.001s 0m0.003s)
302. OFP_REQUESTFORWARD - OF1.4 (ofp-print.at:2782): ok     (0m0.000s 0m0.006s)
303. NXT_SET_PACKET_IN (ofp-print.at:2793): ok     (0m0.000s 0m0.005s)
304. NXT_PACKET_IN (ofp-print.at:2803): ok     (0m0.000s 0m0.005s)
305. NXT_PACKET_IN, with hex output of packet data (ofp-print.at:2824): ok     (0m0.003s 0m0.003s)
306. NX_PACKET_IN2 (ofp-print.at:2849): ok     (0m0.000s 0m0.005s)
307. NXT_SET_ASYNC_CONFIG (ofp-print.at:2872): ok     (0m0.000s 0m0.006s)
308. OFPT_SET_ASYNC_CONFIG (ofp-print.at:2900): ok     (0m0.000s 0m0.005s)
309. OFPT_SET_ASYNC_CONFIG - invalid mask - OF1.4 (ofp-print.at:2927): ok     (0m0.002s 0m0.007s)
310. OFPT_SET_ASYNC_CONFIG - unsupported configuration - OF1.4 (ofp-print.at:2942): ok     (0m0.000s 0m0.009s)
311. NXT_SET_CONTROLLER_ID (ofp-print.at:2957): ok     (0m0.002s 0m0.004s)
312. NXT_FLOW_MONITOR_CANCEL (ofp-print.at:2967): ok     (0m0.000s 0m0.006s)
313. NXT_FLOW_MONITOR_PAUSED (ofp-print.at:2977): ok     (0m0.000s 0m0.005s)
314. NXT_FLOW_MONITOR_RESUMED (ofp-print.at:2986): ok     (0m0.001s 0m0.004s)
315. NXT_SET_FLOW_FORMAT (ofp-print.at:2995): ok     (0m0.000s 0m0.005s)
316. NXT_FLOW_MOD, low verbosity (ofp-print.at:3006): ok     (0m0.000s 0m0.005s)
317. NXT_FLOW_MOD, high verbosity (ofp-print.at:3022): ok     (0m0.002s 0m0.003s)
318. OFPT_GROUP_MOD - OF1.1 (ofp-print.at:3036): ok     (0m0.001s 0m0.004s)
319. OFPT_GROUP_MOD add - OF1.5 (ofp-print.at:3052): ok     (0m0.000s 0m0.005s)
320. OFPT_GROUP_MOD insert bucket - OF1.5 (ofp-print.at:3073): ok     (0m0.000s 0m0.006s)
321. NXT_FLOW_REMOVED (ofp-print.at:3091): ok     (0m0.000s 0m0.005s)
322. NXT_FLOW_MOD_TABLE_ID (ofp-print.at:3107): ok     (0m0.001s 0m0.003s)
323. NXT_RESUME (ofp-print.at:3117): ok     (0m0.000s 0m0.006s)
324. NXST_FLOW request (ofp-print.at:3129): ok     (0m0.001s 0m0.005s)
325. NXST_FLOW reply (ofp-print.at:3139): ok     (0m0.000s 0m0.006s)
326. NXST_AGGREGATE request (ofp-print.at:3293): ok     (0m0.000s 0m0.005s)
327. NXST_AGGREGATE reply (ofp-print.at:3303): ok     (0m0.000s 0m0.004s)
328. NXST_FLOW_MONITOR request (ofp-print.at:3314): ok     (0m0.000s 0m0.005s)
329. NXST_FLOW_MONITOR reply (ofp-print.at:3327): ok     (0m0.001s 0m0.004s)
330. OFPT_BUNDLE_CONTROL - OPEN_REQUEST (ofp-print.at:3342): ok     (0m0.001s 0m0.003s)
331. OFPT_BUNDLE_CONTROL - OPEN_REQUEST (ofp-print.at:3353): ok     (0m0.000s 0m0.005s)
332. OFPT_BUNDLE_CONTROL - OPEN_REQUEST (ofp-print.at:3364): ok     (0m0.000s 0m0.006s)
333. OFPT_BUNDLE_CONTROL - OPEN_REPLY (ofp-print.at:3375): ok     (0m0.002s 0m0.003s)
334. OFPT_BUNDLE_CONTROL - CLOSE_REQUEST (ofp-print.at:3386): ok     (0m0.000s 0m0.006s)
335. OFPT_BUNDLE_CONTROL - CLOSE_REPLY (ofp-print.at:3397): ok     (0m0.000s 0m0.005s)
336. OFPT_BUNDLE_CONTROL - COMMIT_REQUEST (ofp-print.at:3408): ok     (0m0.000s 0m0.004s)
337. OFPT_BUNDLE_CONTROL - COMMIT_REPLY (ofp-print.at:3419): ok     (0m0.000s 0m0.005s)
338. OFPT_BUNDLE_CONTROL - DISCARD_REQUEST (ofp-print.at:3430): ok     (0m0.003s 0m0.002s)
339. OFPT_BUNDLE_CONTROL - DISCARD_REPLY (ofp-print.at:3441): ok     (0m0.000s 0m0.004s)
340. OFPT_BUNDLE_ADD_MESSAGE - verify xid (ofp-print.at:3452): ok     (0m0.001s 0m0.004s)
341. OFPT_BUNDLE_ADD_MESSAGE - reject OFPT_HELLO (ofp-print.at:3462): ok     (0m0.001s 0m0.006s)
342. OFPT_BUNDLE_ADD_MESSAGE - FLOW_MOD (ofp-print.at:3474): ok     (0m0.000s 0m0.005s)
343. OFPT_BUNDLE_ADD_MESSAGE - PORT_MOD (ofp-print.at:3494): ok     (0m0.000s 0m0.005s)
344. encoding hellos (ofp-util.at:3): ok     (0m0.003s 0m0.034s)
345. OFPT_ERROR with type OFPET_HELLO_FAILED - OF1.0 (ofp-errors.at:3): ok     (0m0.000s 0m0.005s)
346. OFPT_ERROR with type OFPET_HELLO_FAILED - OF1.1 (ofp-errors.at:11): ok     (0m0.001s 0m0.004s)
347. OFPT_ERROR with type OFPET_BAD_REQUEST - OF1.0 (ofp-errors.at:19): ok     (0m0.000s 0m0.004s)
348. OFPT_ERROR prints type of truncated inner messages (ofp-errors.at:29): ok     (0m0.001s 0m0.004s)
349. OFPT_ERROR with code OFPBMC_BAD_PREREQ - OF1.0 (ofp-errors.at:46): ok     (0m0.001s 0m0.005s)
350. OFPT_ERROR with code OFPBMC_BAD_PREREQ - OF1.1 (ofp-errors.at:54): ok     (0m0.001s 0m0.004s)
351. OFPT_ERROR with type OFPFMFC_OVERLAP - OF1.0 (ofp-errors.at:64): ok     (0m0.000s 0m0.006s)
352. OFPT_ERROR with type OFPBIC_UNSUP_INST - OF1.1 (ofp-errors.at:73): ok     (0m0.000s 0m0.005s)
353. OFPT_ERROR with type OFPBIC_DUP_INST - OF1.4 (ofp-errors.at:83): ok     (0m0.000s 0m0.005s)
354. encoding OFPBIC_* experimenter errors (ofp-errors.at:97): ok     (0m0.000s 0m0.009s)
355. encoding errors extension that became official (ofp-errors.at:117): ok     (0m0.000s 0m0.012s)
356. decoding OFPBIC_* experimenter errors (ofp-errors.at:136): ok     (0m0.001s 0m0.011s)
357. decoding experimenter errors (ofp-errors.at:152): ok     (0m0.004s 0m0.024s)
358. encoding experimenter errors (ofp-errors.at:184): ok     (0m0.008s 0m0.031s)
359. ovs-ofctl parse-flows choice of protocol (ovs-ofctl.at:3): ok     (0m0.048s 0m0.615s)
360. ovs-ofctl parse-flows (OpenFlow 1.0) (ovs-ofctl.at:148): ok     (0m0.003s 0m0.008s)
361. ovs-ofctl parse-flows (OpenFlow 1.1) (ovs-ofctl.at:207): ok     (0m0.003s 0m0.007s)
362. ovs-ofctl parse-flows (OpenFlow 1.2) (ovs-ofctl.at:244): ok     (0m0.002s 0m0.007s)
363. ovs-ofctl parse-flow with invalid mask (ovs-ofctl.at:289): ok     (0m0.010s 0m0.082s)
364. ovs-ofctl action inconsistency (OpenFlow 1.1) (ovs-ofctl.at:328): ok     (0m0.000s 0m0.007s)
365. ovs-ofctl parse-flows (skb_priority) (ovs-ofctl.at:334): ok     (0m0.002s 0m0.004s)
366. ovs-ofctl parse-flows (NXM) (ovs-ofctl.at:346): ok     (0m0.000s 0m0.010s)
367. ovs-ofctl -F nxm parse-flows (ovs-ofctl.at:429): ok     (0m0.000s 0m0.011s)
368. ovs-ofctl -F nxm -mmm parse-flows (ovs-ofctl.at:502): ok     (0m0.001s 0m0.010s)
369. ovs-ofctl parse-nx-match (ovs-ofctl.at:575): ok     (0m0.004s 0m0.010s)
370. ovs-ofctl parse-ofp10-match (ovs-ofctl.at:1195): ok     (0m0.001s 0m0.011s)
371. ovs-ofctl parse-ofp11-match (ovs-ofctl.at:1412): ok     (0m0.005s 0m0.009s)
372. ovs-ofctl parse-nx-match loose (ovs-ofctl.at:1738): ok     (0m0.000s 0m0.013s)
373. ovs-ofctl parse-oxm (OpenFlow 1.2) (ovs-ofctl.at:1759): ok     (0m0.000s 0m0.016s)
374. ovs-ofctl parse-oxm (OpenFlow 1.3) (ovs-ofctl.at:2253): ok     (0m0.000s 0m0.006s)
375. ovs-ofctl parse-oxm (OpenFlow 1.5) (ovs-ofctl.at:2276): ok     (0m0.000s 0m0.006s)
376. ovs-ofctl parse-oxm loose (ovs-ofctl.at:2341): ok     (0m0.000s 0m0.010s)
377. experimenter OXM encoding (ovs-ofctl.at:2362): ok     (0m0.001s 0m0.009s)
378. check TCP flags expression in OXM and NXM (ovs-ofctl.at:2409): ok     (0m0.002s 0m0.022s)
379. ovs-ofctl check-vlan (ovs-ofctl.at:2441): ok     (0m0.002s 0m0.041s)
380. ovs-ofctl -F option and NXM features (ovs-ofctl.at:2538): ok     (0m0.000s 0m0.010s)
381. ovs-ofctl -F option with flow_mods (ovs-ofctl.at:2551): ok     (0m0.008s 0m0.047s)
382. ovs-ofctl dump-flows honors -F option (ovs-ofctl.at:2563): ok     (0m0.014s 0m0.041s)
383. ovs-ofctl dump-flows rejects bad -F option (ovs-ofctl.at:2575): ok     (0m0.012s 0m0.038s)
384. ovs-ofctl add-flow reports non-normalized flows (ovs-ofctl.at:2584): ok     (0m0.015s 0m0.042s)
385. ovs-ofctl dump-flows with sorting (ovs-ofctl.at:2598): ok     (0m0.018s 0m0.085s)
386. ovs-ofctl diff-flows (ovs-ofctl.at:2685): ok     (0m0.679s 0m6.564s)
387. ovs-ofctl diff-flows - suppress false differences (ovs-ofctl.at:2717): ok     (0m0.006s 0m0.064s)
388. ovs-ofctl -F and -O interaction (ovs-ofctl.at:2734): ok     (0m0.000s 0m0.025s)
389. ovs-ofctl ofp-parse (ovs-ofctl.at:2755): ok     (0m0.001s 0m0.010s)
390. tcp flags - filtering (ovs-ofctl.at:2773): ok     (0m0.014s 0m0.088s)
391. ovs-ofctl rule with importance (ovs-ofctl.at:2842): ok     (0m0.007s 0m0.079s)
392. ovs-ofctl replace-flows with importance (ovs-ofctl.at:2869): ok     (0m0.009s 0m0.070s)
393. ovs-ofctl replace-flows with --bundle (ovs-ofctl.at:2888): ok     (0m0.026s 0m0.083s)
394. OVS datapath key parsing and formatting - valid forms (odp.at:3): ok     (0m0.008s 0m0.032s)
395. OVS datapath wildcarded key parsing and formatting - valid forms (odp.at:102): ok     (0m0.006s 0m0.027s)
396. OVS datapath wildcarded key filtering. (odp.at:180): ok     (0m0.005s 0m0.071s)
397. OVS datapath actions parsing and formatting - valid forms (odp.at:245): ok     (0m0.004s 0m0.005s)
398. MPLS xlate action (mpls-xlate.at:3): ok     (0m0.024s 0m0.087s)
399. modulo_n multipath link selection (multipath.at:10): ok     (0m0.888s 0m0.012s)
400. hash_threshold multipath link selection (multipath.at:78): ok     (0m0.882s 0m0.003s)
401. hrw multipath link selection (multipath.at:146): ok     (0m2.056s 0m0.012s)
402. iter_hash multipath link selection (multipath.at:214): ok     (0m0.998s 0m0.003s)
403. multipath action missing argument (multipath.at:282): ok     (0m0.000s 0m0.005s)
404. multipath action bad fields (multipath.at:288): ok     (0m0.001s 0m0.004s)
405. multipath action bad algorithm (multipath.at:294): ok     (0m0.000s 0m0.005s)
406. multipath action bad n_links (multipath.at:300): ok     (0m0.000s 0m0.004s)
407. multipath action destination too narrow (multipath.at:306): ok     (0m0.002s 0m0.003s)
408. learning action - parsing and formatting (learn.at:3): ok     (0m0.003s 0m0.005s)
409. learning action - parsing and formatting - illegal in_port_oxm (learn.at:24): ok     (0m0.002s 0m0.006s)
410. learning action - parsing and formatting - OXM (learn.at:33): ok     (0m0.002s 0m0.004s)
411. learning action - examples (learn.at:46): ok     (0m0.000s 0m0.007s)
412. learning action - satisfied prerequisites (learn.at:64): ok     (0m0.001s 0m0.006s)
413. learning action - invalid prerequisites (learn.at:79): ok     (0m0.004s 0m0.011s)
414. learning action - too-long immediate value (learn.at:94): ok     (0m0.000s 0m0.011s)
415. learning action - standard VLAN+MAC learning (learn.at:108): ok     (0m0.018s 0m0.099s)
416. learning action - learn refreshes hard_age (learn.at:177): ok     (0m0.101s 0m0.668s)
417. learning action - TCPv4 port learning (learn.at:245): ok     (0m0.012s 0m0.074s)
418. learning action - TCPv6 port learning (learn.at:271): ok     (0m0.013s 0m0.062s)
419. learning action - self-modifying flow (learn.at:303): ok     (0m0.046s 0m0.119s)
420. learning action - self-modifying flow with idle_timeout (learn.at:345): ok     (0m0.126s 0m0.283s)
421. learning action - self-modifying flow with hard_timeout (learn.at:403): ok     (0m0.141s 0m0.236s)
422. learning action - fin_timeout feature (learn.at:487): ok     (0m0.019s 0m0.077s)
423. learning action - delete_learned feature (learn.at:502): ok     (0m0.029s 0m0.155s)
424. unix vconn - refuse connection (vconn.at:20): ok     (0m0.006s 0m0.002s)
425. unix vconn - accept then close (vconn.at:20): ok     (0m0.002s 0m0.003s)
426. unix vconn - read hello (vconn.at:20): ok     (0m0.002s 0m0.003s)
427. unix vconn - send plain hello (vconn.at:20): ok     (0m0.000s 0m0.005s)
428. unix vconn - send long hello (vconn.at:20): ok     (0m0.002s 0m0.002s)
429. unix vconn - send echo hello (vconn.at:20): ok     (0m0.000s 0m0.005s)
430. unix vconn - send short hello (vconn.at:20): ok     (0m0.000s 0m0.005s)
431. unix vconn - send invalid version hello (vconn.at:20): ok     (0m0.002s 0m0.003s)
432. tcp vconn - refuse connection (vconn.at:21): ok     (0m0.002s 0m0.003s)
433. tcp vconn - accept then close (vconn.at:21): ok     (0m0.000s 0m0.005s)
434. tcp vconn - read hello (vconn.at:21): ok     (0m0.002s 0m0.003s)
435. tcp vconn - send plain hello (vconn.at:21): ok     (0m0.000s 0m0.005s)
436. tcp vconn - send long hello (vconn.at:21): ok     (0m0.000s 0m0.005s)
437. tcp vconn - send echo hello (vconn.at:21): ok     (0m0.000s 0m0.004s)
438. tcp vconn - send short hello (vconn.at:21): ok     (0m0.000s 0m0.005s)
439. tcp vconn - send invalid version hello (vconn.at:21): ok     (0m0.000s 0m0.005s)
440. ssl vconn - refuse connection (vconn.at:22): ok     (0m0.003s 0m0.010s)
441. ssl vconn - accept then close (vconn.at:22): ok     (0m0.003s 0m0.012s)
442. ssl vconn - read hello (vconn.at:22): ok     (0m0.018s 0m0.004s)
443. ssl vconn - send plain hello (vconn.at:22): ok     (0m0.013s 0m0.006s)
444. ssl vconn - send long hello (vconn.at:22): ok     (0m0.012s 0m0.006s)
445. ssl vconn - send echo hello (vconn.at:22): ok     (0m0.013s 0m0.005s)
446. ssl vconn - send short hello (vconn.at:22): ok     (0m0.011s 0m0.006s)
447. ssl vconn - send invalid version hello (vconn.at:22): ok     (0m0.011s 0m0.006s)
448. components of "/usr/lib" are "/usr", "lib" (file_name.at:13): ok     (0m0.000s 0m0.006s)
449. components of "/usr/" are "/", "usr" (file_name.at:14): ok     (0m0.000s 0m0.005s)
450. components of "usr" are ".", "usr" (file_name.at:15): ok     (0m0.000s 0m0.005s)
451. components of "/" are "/", "/" (file_name.at:16): ok     (0m0.000s 0m0.005s)
452. components of "." are ".", "." (file_name.at:17): ok     (0m0.002s 0m0.004s)
453. components of ".." are ".", ".." (file_name.at:18): ok     (0m0.000s 0m0.006s)
454. components of "//" are "//", "//" (file_name.at:19): ok     (0m0.000s 0m0.006s)
455. components of "//foo" are "//", "foo" (file_name.at:20): ok     (0m0.000s 0m0.005s)
456. components of "" are ".", "." (file_name.at:21): ok     (0m0.000s 0m0.005s)
457. components of "dir/file" are "dir", "file" (file_name.at:24): ok     (0m0.000s 0m0.005s)
458. components of "dir/file/" are "dir", "file" (file_name.at:25): ok     (0m0.002s 0m0.003s)
459. components of "dir/file//" are "dir", "file" (file_name.at:26): ok     (0m0.000s 0m0.005s)
460. components of "///foo" are "/", "foo" (file_name.at:27): ok     (0m0.000s 0m0.005s)
461. follow_symlinks - relative symlinks (file_name.at:37): ok     (0m0.005s 0m0.015s)
462. follow_symlinks - absolute symlinks (file_name.at:54): ok     (0m0.001s 0m0.025s)
463. follow_symlinks - symlinks to directories (file_name.at:71): ok     (0m0.001s 0m0.016s)
464. follow_symlinks - nonexistent targets (file_name.at:84): ok     (0m0.004s 0m0.009s)
465. follow_symlinks - regular files (file_name.at:92): ok     (0m0.002s 0m0.004s)
466. follow_symlinks - device targets (file_name.at:97): ok     (0m0.000s 0m0.012s)
467. follow_symlinks - nonexistent files (file_name.at:106): ok     (0m0.000s 0m0.016s)
468. follow_symlinks - symlink loop (file_name.at:114): ok     (0m0.001s 0m0.011s)
469. wikipedia test vector 1 (aes128.at:10): ok     (0m0.000s 0m0.005s)
470. wikipedia test vector 2 (aes128.at:16): ok     (0m0.000s 0m0.005s)
471. NIST KAT ECBKeySbox128e vector 0 (aes128.at:22): ok     (0m0.000s 0m0.005s)
472. NIST KAT ECBKeySbox128e vector 1 (aes128.at:28): ok     (0m0.000s 0m0.006s)
473. NIST KAT ECBKeySbox128e vector 2 (aes128.at:34): ok     (0m0.001s 0m0.003s)
474. NIST KAT ECBKeySbox128e vector 3 (aes128.at:40): ok     (0m0.000s 0m0.005s)
475. NIST KAT ECBKeySbox128e vector 4 (aes128.at:46): ok     (0m0.000s 0m0.006s)
476. NIST KAT ECBKeySbox128e vector 5 (aes128.at:52): ok     (0m0.000s 0m0.005s)
477. NIST KAT ECBKeySbox128e vector 6 (aes128.at:58): ok     (0m0.000s 0m0.005s)
478. NIST KAT ECBKeySbox128e vector 7 (aes128.at:64): ok     (0m0.001s 0m0.004s)
479. NIST KAT ECBKeySbox128e vector 8 (aes128.at:70): ok     (0m0.000s 0m0.005s)
480. NIST KAT ECBKeySbox128e vector 9 (aes128.at:76): ok     (0m0.000s 0m0.006s)
481. NIST KAT ECBKeySbox128e vector 10 (aes128.at:82): ok     (0m0.000s 0m0.005s)
482. NIST KAT ECBKeySbox128e vector 11 (aes128.at:88): ok     (0m0.000s 0m0.005s)
483. NIST KAT ECBKeySbox128e vector 12 (aes128.at:94): ok     (0m0.001s 0m0.003s)
484. NIST KAT ECBKeySbox128e vector 13 (aes128.at:100): ok     (0m0.000s 0m0.005s)
485. NIST KAT ECBKeySbox128e vector 14 (aes128.at:106): ok     (0m0.000s 0m0.005s)
486. NIST KAT ECBKeySbox128e vector 15 (aes128.at:112): ok     (0m0.001s 0m0.004s)
487. NIST KAT ECBKeySbox128e vector 16 (aes128.at:118): ok     (0m0.000s 0m0.005s)
488. NIST KAT ECBKeySbox128e vector 17 (aes128.at:124): ok     (0m0.001s 0m0.003s)
489. NIST KAT ECBKeySbox128e vector 18 (aes128.at:130): ok     (0m0.000s 0m0.005s)
490. NIST KAT ECBKeySbox128e vector 19 (aes128.at:136): ok     (0m0.000s 0m0.004s)
491. NIST KAT ECBKeySbox128e vector 20 (aes128.at:142): ok     (0m0.000s 0m0.006s)
492. unixctl ovs-vswitchd exit - Python2 (unixctl-py.at:20): ok     (0m0.094s 0m0.064s)
493. unixctl ovs-vswitchd exit - Python3 (unixctl-py.at:21): skipped (unixctl-py.at:21)
494. unixctl ovs-vswitchd list-commands - Python2 (unixctl-py.at:38): ok     (0m0.057s 0m0.104s)
495. unixctl ovs-vswitchd list-commands - Python3 (unixctl-py.at:39): skipped (unixctl-py.at:39)
496. unixctl ovs-vswitchd arguments - Python2 (unixctl-py.at:84): ok     (0m0.249s 0m0.169s)
497. unixctl ovs-vswitchd arguments - Python3 (unixctl-py.at:85): skipped (unixctl-py.at:85)
498. unixctl bad target - Python2 (unixctl-py.at:103): ok     (0m0.080s 0m0.054s)
499. unixctl bad target - Python3 (unixctl-py.at:104): skipped (unixctl-py.at:104)
500. unixctl server - Python2 (unixctl-py.at:177): ok     (0m0.411s 0m0.272s)
501. unixctl server - Python3 (unixctl-py.at:178): skipped (unixctl-py.at:178)
502. unixctl server errors - Python2 (unixctl-py.at:186): ok     (0m0.050s 0m0.018s)
503. unixctl server errors - Python3 (unixctl-py.at:187): skipped (unixctl-py.at:187)
504. UUID generation, parsing, serialization (uuid.at:15): ok     (0m0.088s 0m0.622s)
505. empty array - C (json.at:77): ok     (0m0.001s 0m0.008s)
506. empty array - Python2 (json.at:77): ok     (0m0.016s 0m0.012s)
507. empty array - Python3 (json.at:77): skipped (json.at:77)
508. single-element array - C (json.at:78): ok     (0m0.002s 0m0.006s)
509. single-element array - Python2 (json.at:78): ok     (0m0.016s 0m0.009s)
510. single-element array - Python3 (json.at:78): skipped (json.at:78)
511. 2-element array - C (json.at:79): ok     (0m0.000s 0m0.008s)
512. 2-element array - Python2 (json.at:79): ok     (0m0.015s 0m0.011s)
513. 2-element array - Python3 (json.at:79): skipped (json.at:79)
514. many-element array - C (json.at:80): ok     (0m0.000s 0m0.009s)
515. many-element array - Python2 (json.at:80): ok     (0m0.013s 0m0.014s)
516. many-element array - Python3 (json.at:80): skipped (json.at:80)
517. missing comma - C (json.at:83): ok     (0m0.000s 0m0.008s)
518. missing comma - Python2 (json.at:83): ok     (0m0.031s 0m0.022s)
519. missing comma - Python3 (json.at:83): skipped (json.at:83)
520. trailing comma not allowed - C (json.at:85): ok     (0m0.000s 0m0.012s)
521. trailing comma not allowed - Python2 (json.at:85): ok     (0m0.010s 0m0.020s)
522. trailing comma not allowed - Python3 (json.at:85): skipped (json.at:85)
523. doubled comma not allowed - C (json.at:87): ok     (0m0.003s 0m0.006s)
524. doubled comma not allowed - Python2 (json.at:87): ok     (0m0.019s 0m0.008s)
525. doubled comma not allowed - Python3 (json.at:87): skipped (json.at:87)
526. empty string - C (json.at:92): ok     (0m0.001s 0m0.010s)
527. empty string - Python2 (json.at:92): ok     (0m0.017s 0m0.010s)
528. empty string - Python3 (json.at:92): skipped (json.at:92)
529. 1-character strings - C (json.at:93): ok     (0m0.000s 0m0.009s)
530. 1-character strings - Python2 (json.at:93): ok     (0m0.007s 0m0.021s)
531. 1-character strings - Python3 (json.at:93): skipped (json.at:93)
532. escape sequences - C (json.at:96): ok     (0m0.002s 0m0.007s)
533. escape sequences - Python2 (json.at:96): ok     (0m0.022s 0m0.013s)
534. escape sequences - Python3 (json.at:96): skipped (json.at:96)
535. Unicode escape sequences - C (json.at:99): ok     (0m0.001s 0m0.009s)
536. Unicode escape sequences - Python2 (json.at:99): ok     (0m0.008s 0m0.019s)
537. Unicode escape sequences - Python3 (json.at:99): skipped (json.at:99)
538. surrogate pairs - C (json.at:102): ok     (0m0.000s 0m0.008s)
539. surrogate pairs - Python (json.at:105): ok     (0m0.007s 0m0.017s)
540. a string by itself is not valid JSON - C (json.at:108): ok     (0m0.001s 0m0.007s)
541. a string by itself is not valid JSON - Python2 (json.at:108): ok     (0m0.005s 0m0.021s)
542. a string by itself is not valid JSON - Python3 (json.at:108): skipped (json.at:108)
543. end of line in quoted string - C (json.at:110): ok     (0m0.000s 0m0.008s)
544. end of line in quoted string - Python2 (json.at:110): ok     (0m0.009s 0m0.017s)
545. end of line in quoted string - Python3 (json.at:110): skipped (json.at:110)
546. formfeed in quoted string - C (json.at:114): ok     (0m0.000s 0m0.009s)
547. formfeed in quoted string - Python2 (json.at:114): ok     (0m0.018s 0m0.007s)
548. formfeed in quoted string - Python3 (json.at:114): skipped (json.at:114)
549. bad escape in quoted string - C (json.at:117): ok     (0m0.002s 0m0.007s)
550. bad escape in quoted string - Python2 (json.at:117): ok     (0m0.009s 0m0.016s)
551. bad escape in quoted string - Python3 (json.at:117): skipped (json.at:117)
552. \u must be followed by 4 hex digits (1) - C (json.at:120): ok     (0m0.000s 0m0.008s)
553. \u must be followed by 4 hex digits (1) - Python2 (json.at:120): ok     (0m0.011s 0m0.015s)
554. \u must be followed by 4 hex digits (1) - Python3 (json.at:120): skipped (json.at:120)
555. \u must be followed by 4 hex digits (2) - C (json.at:123): ok     (0m0.000s 0m0.009s)
556. \u must be followed by 4 hex digits (2) - Python2 (json.at:123): ok     (0m0.020s 0m0.006s)
557. \u must be followed by 4 hex digits (2) - Python3 (json.at:123): skipped (json.at:123)
558. isolated leading surrogate not allowed - C (json.at:126): ok     (0m0.000s 0m0.009s)
559. isolated leading surrogate not allowed - Python2 (json.at:126): ok     (0m0.009s 0m0.016s)
560. isolated leading surrogate not allowed - Python3 (json.at:126): skipped (json.at:126)
561. surrogatess must paired properly - C (json.at:129): ok     (0m0.000s 0m0.009s)
562. surrogatess must paired properly - Python2 (json.at:129): ok     (0m0.008s 0m0.019s)
563. surrogatess must paired properly - Python3 (json.at:129): skipped (json.at:129)
564. null bytes not allowed - C (json.at:132): ok     (0m0.001s 0m0.008s)
565. null bytes not allowed - Python2 (json.at:132): ok     (0m0.009s 0m0.021s)
566. null bytes not allowed - Python3 (json.at:132): skipped (json.at:132)
567. properly quoted backslash at end of string - C (json.at:136): ok     (0m0.003s 0m0.006s)
568. properly quoted backslash at end of string - Python2 (json.at:136): ok     (0m0.001s 0m0.024s)
569. properly quoted backslash at end of string - Python3 (json.at:136): skipped (json.at:136)
570. stray backslash at end of string - C (json.at:139): ok     (0m0.000s 0m0.009s)
571. stray backslash at end of string - Python2 (json.at:139): ok     (0m0.019s 0m0.008s)
572. stray backslash at end of string - Python3 (json.at:139): skipped (json.at:139)
573. end of input in quoted string - C (json.at:143): ok     (0m0.000s 0m0.005s)
574. end of input in quoted string - Python (json.at:150): ok     (0m0.005s 0m0.025s)
575. empty object - C (json.at:161): ok     (0m0.001s 0m0.009s)
576. empty object - Python2 (json.at:161): ok     (0m0.013s 0m0.011s)
577. empty object - Python3 (json.at:161): skipped (json.at:161)
578. simple object - C (json.at:162): ok     (0m0.002s 0m0.006s)
579. simple object - Python2 (json.at:162): ok     (0m0.009s 0m0.016s)
580. simple object - Python3 (json.at:162): skipped (json.at:162)
581. bad value - C (json.at:165): ok     (0m0.001s 0m0.007s)
582. bad value - Python2 (json.at:165): ok     (0m0.021s 0m0.008s)
583. bad value - Python3 (json.at:165): skipped (json.at:165)
584. missing colon - C (json.at:167): ok     (0m0.001s 0m0.008s)
585. missing colon - Python2 (json.at:167): ok     (0m0.009s 0m0.016s)
586. missing colon - Python3 (json.at:167): skipped (json.at:167)
587. missing comma - C (json.at:169): ok     (0m0.002s 0m0.008s)
588. missing comma - Python2 (json.at:169): ok     (0m0.015s 0m0.011s)
589. missing comma - Python3 (json.at:169): skipped (json.at:169)
590. trailing comma not allowed - C (json.at:171): ok     (0m0.000s 0m0.008s)
591. trailing comma not allowed - Python2 (json.at:171): ok     (0m0.013s 0m0.015s)
592. trailing comma not allowed - Python3 (json.at:171): skipped (json.at:171)
593. doubled comma not allowed - C (json.at:174): ok     (0m0.000s 0m0.010s)
594. doubled comma not allowed - Python2 (json.at:174): ok     (0m0.007s 0m0.020s)
595. doubled comma not allowed - Python3 (json.at:174): skipped (json.at:174)
596. names must be strings - C (json.at:177): ok     (0m0.000s 0m0.008s)
597. names must be strings - Python2 (json.at:177): ok     (0m0.000s 0m0.026s)
598. names must be strings - Python3 (json.at:177): skipped (json.at:177)
599. null - C (json.at:183): ok     (0m0.000s 0m0.013s)
600. null - Python2 (json.at:183): ok     (0m0.010s 0m0.016s)
601. null - Python3 (json.at:183): skipped (json.at:183)
602. false - C (json.at:184): ok     (0m0.001s 0m0.009s)
603. false - Python2 (json.at:184): ok     (0m0.009s 0m0.016s)
604. false - Python3 (json.at:184): skipped (json.at:184)
605. true - C (json.at:185): ok     (0m0.000s 0m0.009s)
606. true - Python2 (json.at:185): ok     (0m0.005s 0m0.019s)
607. true - Python3 (json.at:185): skipped (json.at:185)
608. a literal by itself is not valid JSON - C (json.at:186): ok     (0m0.004s 0m0.005s)
609. a literal by itself is not valid JSON - Python2 (json.at:186): ok     (0m0.016s 0m0.010s)
610. a literal by itself is not valid JSON - Python3 (json.at:186): skipped (json.at:186)
611. nullify is invalid - C (json.at:188): ok     (0m0.000s 0m0.010s)
612. nullify is invalid - Python2 (json.at:188): ok     (0m0.014s 0m0.014s)
613. nullify is invalid - Python3 (json.at:188): skipped (json.at:188)
614. nubs is invalid - C (json.at:190): ok     (0m0.001s 0m0.008s)
615. nubs is invalid - Python2 (json.at:190): ok     (0m0.011s 0m0.015s)
616. nubs is invalid - Python3 (json.at:190): skipped (json.at:190)
617. xxx is invalid - C (json.at:192): ok     (0m0.000s 0m0.009s)
618. xxx is invalid - Python2 (json.at:192): ok     (0m0.010s 0m0.014s)
619. xxx is invalid - Python3 (json.at:192): skipped (json.at:192)
620. integers expressed as reals - C (json.at:197): ok     (0m0.000s 0m0.009s)
621. integers expressed as reals - Python2 (json.at:197): ok     (0m0.014s 0m0.011s)
622. integers expressed as reals - Python3 (json.at:197): skipped (json.at:197)
623. large integers - C (json.at:207): ok     (0m0.000s 0m0.008s)
624. large integers - Python2 (json.at:207): ok     (0m0.011s 0m0.015s)
625. large integers - Python3 (json.at:207): skipped (json.at:207)
626. large integers expressed as reals - C (json.at:211): ok     (0m0.000s 0m0.008s)
627. large integers expressed as reals - Python2 (json.at:211): ok     (0m0.016s 0m0.009s)
628. large integers expressed as reals - Python3 (json.at:211): skipped (json.at:211)
629. large integers that overflow to reals - C (json.at:219): ok     (0m0.000s 0m0.008s)
630. large integers that overflow to reals - Python2 (json.at:219): ok     (0m0.008s 0m0.018s)
631. large integers that overflow to reals - Python3 (json.at:219): skipped (json.at:219)
632. negative zero - C (json.at:224): ok     (0m0.000s 0m0.010s)
633. negative zero - Python2 (json.at:224): ok     (0m0.016s 0m0.010s)
634. negative zero - Python3 (json.at:224): skipped (json.at:224)
635. reals - C (json.at:229): ok     (0m0.003s 0m0.005s)
636. reals - Python2 (json.at:229): ok     (0m0.015s 0m0.010s)
637. reals - Python3 (json.at:229): skipped (json.at:229)
638. scientific notation - C (json.at:233): ok     (0m0.000s 0m0.010s)
639. scientific notation - Python2 (json.at:233): ok     (0m0.012s 0m0.014s)
640. scientific notation - Python3 (json.at:233): skipped (json.at:233)
641. +/- DBL_MAX - C (json.at:240): ok     (0m0.001s 0m0.007s)
642. +/- DBL_MAX - Python2 (json.at:240): ok     (0m0.015s 0m0.011s)
643. +/- DBL_MAX - Python3 (json.at:240): skipped (json.at:240)
644. negative reals - C (json.at:245): ok     (0m0.000s 0m0.008s)
645. negative reals - Python2 (json.at:245): ok     (0m0.012s 0m0.015s)
646. negative reals - Python3 (json.at:245): skipped (json.at:245)
647. negative scientific notation - C (json.at:249): ok     (0m0.000s 0m0.008s)
648. negative scientific notation - Python2 (json.at:249): ok     (0m0.006s 0m0.020s)
649. negative scientific notation - Python3 (json.at:249): skipped (json.at:249)
650. 1e-9999 underflows to 0 - C (json.at:253): ok     (0m0.000s 0m0.008s)
651. 1e-9999 underflows to 0 - Python2 (json.at:253): ok     (0m0.007s 0m0.017s)
652. 1e-9999 underflows to 0 - Python3 (json.at:253): skipped (json.at:253)
653. a number by itself is not valid JSON - C (json.at:257): ok     (0m0.000s 0m0.009s)
654. a number by itself is not valid JSON - Python2 (json.at:257): ok     (0m0.012s 0m0.013s)
655. a number by itself is not valid JSON - Python3 (json.at:257): skipped (json.at:257)
656. leading zeros not allowed - C (json.at:259): ok     (0m0.001s 0m0.007s)
657. leading zeros not allowed - Python2 (json.at:259): ok     (0m0.007s 0m0.018s)
658. leading zeros not allowed - Python3 (json.at:259): skipped (json.at:259)
659. 1e9999 is too big - C (json.at:263): ok     (0m0.004s 0m0.005s)
660. 1e9999 is too big - Python2 (json.at:263): ok     (0m0.015s 0m0.011s)
661. 1e9999 is too big - Python3 (json.at:263): skipped (json.at:263)
662. exponent bigger than INT_MAX - C (json.at:267): ok     (0m0.000s 0m0.010s)
663. exponent bigger than INT_MAX - Python2 (json.at:267): ok     (0m0.015s 0m0.011s)
664. exponent bigger than INT_MAX - Python3 (json.at:267): skipped (json.at:267)
665. decimal point must be followed by digit - C (json.at:271): ok     (0m0.000s 0m0.009s)
666. decimal point must be followed by digit - Python2 (json.at:271): ok     (0m0.003s 0m0.027s)
667. decimal point must be followed by digit - Python3 (json.at:271): skipped (json.at:271)
668. exponent must contain at least one digit (1) - C (json.at:275): ok     (0m0.004s 0m0.006s)
669. exponent must contain at least one digit (1) - Python2 (json.at:275): ok     (0m0.007s 0m0.018s)
670. exponent must contain at least one digit (1) - Python3 (json.at:275): skipped (json.at:275)
671. exponent must contain at least one digit (2) - C (json.at:279): ok     (0m0.000s 0m0.008s)
672. exponent must contain at least one digit (2) - Python2 (json.at:279): ok     (0m0.015s 0m0.011s)
673. exponent must contain at least one digit (2) - Python3 (json.at:279): skipped (json.at:279)
674. exponent must contain at least one digit (3) - C (json.at:283): ok     (0m0.001s 0m0.007s)
675. exponent must contain at least one digit (3) - Python2 (json.at:283): ok     (0m0.011s 0m0.021s)
676. exponent must contain at least one digit (3) - Python3 (json.at:283): skipped (json.at:283)
677. RFC 4267 object example - C (json.at:290): ok     (0m0.002s 0m0.008s)
678. RFC 4267 object example - Python2 (json.at:290): ok     (0m0.010s 0m0.015s)
679. RFC 4267 object example - Python3 (json.at:290): skipped (json.at:290)
680. RFC 4267 array example - C (json.at:306): ok     (0m0.001s 0m0.007s)
681. RFC 4267 array example - Python2 (json.at:306): ok     (0m0.011s 0m0.016s)
682. RFC 4267 array example - Python3 (json.at:306): skipped (json.at:306)
683. trailing garbage - C (json.at:333): ok     (0m0.000s 0m0.010s)
684. trailing garbage - Python2 (json.at:333): ok     (0m0.017s 0m0.011s)
685. trailing garbage - Python3 (json.at:333): skipped (json.at:333)
686. formfeeds are not valid white space - C (json.at:335): ok     (0m0.000s 0m0.008s)
687. formfeeds are not valid white space - Python2 (json.at:335): ok     (0m0.005s 0m0.021s)
688. formfeeds are not valid white space - Python3 (json.at:335): skipped (json.at:335)
689. ';' is not a valid token - C (json.at:337): ok     (0m0.001s 0m0.009s)
690. ';' is not a valid token - Python2 (json.at:337): ok     (0m0.012s 0m0.016s)
691. ';' is not a valid token - Python3 (json.at:337): skipped (json.at:337)
692. arrays nesting too deep - C (json.at:339): ok     (0m0.000s 0m0.008s)
693. arrays nesting too deep - Python2 (json.at:339): ok     (0m0.017s 0m0.014s)
694. arrays nesting too deep - Python3 (json.at:339): skipped (json.at:339)
695. objects nesting too deep - C (json.at:343): ok     (0m0.003s 0m0.006s)
696. objects nesting too deep - Python2 (json.at:343): ok     (0m0.017s 0m0.022s)
697. objects nesting too deep - Python3 (json.at:343): skipped (json.at:343)
698. input may not be empty (json.at:348): ok     (0m0.000s 0m0.005s)
699. multiple adjacent objects - C (json.at:356): ok     (0m0.000s 0m0.010s)
700. multiple adjacent objects - Python2 (json.at:356): ok     (0m0.007s 0m0.018s)
701. multiple adjacent objects - Python3 (json.at:356): skipped (json.at:356)
702. multiple space-separated objects - C (json.at:361): ok     (0m0.001s 0m0.008s)
703. multiple space-separated objects - Python2 (json.at:361): ok     (0m0.012s 0m0.013s)
704. multiple space-separated objects - Python3 (json.at:361): skipped (json.at:361)
705. multiple objects on separate lines - C (json.at:366): ok     (0m0.000s 0m0.008s)
706. multiple objects on separate lines - Python2 (json.at:366): ok     (0m0.015s 0m0.011s)
707. multiple objects on separate lines - Python3 (json.at:366): skipped (json.at:366)
708. multiple objects and arrays - C (json.at:373): ok     (0m0.002s 0m0.007s)
709. multiple objects and arrays - Python2 (json.at:373): ok     (0m0.020s 0m0.007s)
710. multiple objects and arrays - Python3 (json.at:373): skipped (json.at:373)
711. garbage between multiple objects - C (json.at:379): ok     (0m0.000s 0m0.008s)
712. garbage between multiple objects - Python2 (json.at:379): ok     (0m0.013s 0m0.014s)
713. garbage between multiple objects - Python3 (json.at:379): skipped (json.at:379)
714. garbage after multiple objects - C (json.at:383): ok     (0m0.000s 0m0.009s)
715. garbage after multiple objects - Python2 (json.at:383): ok     (0m0.009s 0m0.018s)
716. garbage after multiple objects - Python3 (json.at:383): skipped (json.at:383)
717. JSON-RPC request and successful reply (jsonrpc.at:3): ok     (0m0.003s 0m0.013s)
718. JSON-RPC request and error reply (jsonrpc.at:14): ok     (0m0.004s 0m0.013s)
719. JSON-RPC notification (jsonrpc.at:25): ok     (0m0.003s 0m0.029s)
720. JSON-RPC request and successful reply - Python2 (jsonrpc-py.at:17): ok     (0m0.137s 0m0.072s)
721. JSON-RPC request and successful reply - Python3 (jsonrpc-py.at:18): skipped (jsonrpc-py.at:18)
722. JSON-RPC request and error reply - Python2 (jsonrpc-py.at:34): ok     (0m0.122s 0m0.030s)
723. JSON-RPC request and error reply - Python3 (jsonrpc-py.at:35): skipped (jsonrpc-py.at:35)
724. JSON-RPC notification - Python2 (jsonrpc-py.at:62): ok     (0m0.086s 0m0.074s)
725. JSON-RPC notification - Python3 (jsonrpc-py.at:63): skipped (jsonrpc-py.at:63)
726. tunnel - input (tunnel.at:3): ok     (0m0.015s 0m0.088s)
727. tunnel - ECN decapsulation (tunnel.at:65): ok     (0m0.013s 0m0.069s)
728. tunnel - output (tunnel.at:112): ok     (0m0.028s 0m0.078s)
729. tunnel - ToS and TTL inheritance (tunnel.at:145): ok     (0m0.025s 0m0.064s)
730. tunnel - set_tunnel (tunnel.at:184): ok     (0m0.014s 0m0.053s)
731. tunnel - key (tunnel.at:219): ok     (0m0.015s 0m0.080s)
732. tunnel - key match (tunnel.at:269): ok     (0m0.011s 0m0.076s)
733. tunnel - Geneve (tunnel.at:319): ok     (0m0.018s 0m0.034s)
734. tunnel - VXLAN (tunnel.at:331): ok     (0m0.019s 0m0.044s)
735. tunnel - LISP (tunnel.at:343): ok     (0m0.005s 0m0.061s)
736. tunnel - different VXLAN UDP port (tunnel.at:355): ok     (0m0.023s 0m0.057s)
737. ofproto-dpif - set_field - tun_src/tun_dst/tun_id (tunnel.at:384): ok     (0m0.016s 0m0.049s)
738. tunnel - Geneve metadata (tunnel.at:415): ok     (0m0.037s 0m0.108s)
739. tunnel - Geneve option present (tunnel.at:489): ok     (0m0.015s 0m0.068s)
740. tunnel_push_pop - action (tunnel-push-pop.at:3): ok     (0m0.020s 0m0.204s)
741. tunnel_push_pop_ipv6 - action (tunnel-push-pop-ipv6.at:3): ok     (0m0.008s 0m0.052s)
742. lock and unlock (lockfile.at:15): ok     (0m0.000s 0m0.009s)
743. lock and unlock twice (lockfile.at:17): ok     (0m0.002s 0m0.006s)
744. lock blocks same process (lockfile.at:19): ok     (0m0.001s 0m0.008s)
745. lock blocks same process twice (lockfile.at:23): ok     (0m0.000s 0m0.009s)
746. lock blocks other process (lockfile.at:28): ok     (0m0.000s 0m0.011s)
747. lock twice blocks other process (lockfile.at:33): ok     (0m0.000s 0m0.011s)
748. lock and unlock allows other process (lockfile.at:39): ok     (0m0.000s 0m0.010s)
749. lock multiple (lockfile.at:41): ok     (0m0.000s 0m0.009s)
750. lock symlink (lockfile.at:45): ok     (0m0.000s 0m0.010s)
751. lock symlink to dir (lockfile.at:52): ok     (0m0.000s 0m0.010s)
752. nothing happens if not enabled - C (reconnect.at:32): ok     (0m0.002s 0m0.004s)
753. nothing happens if not enabled - Python2 (reconnect.at:32): ok     (0m0.012s 0m0.020s)
754. nothing happens if not enabled - Python3 (reconnect.at:32): skipped (reconnect.at:32)
755. quick connect, idle disconnect - C (reconnect.at:43): ok     (0m0.000s 0m0.005s)
756. quick connect, idle disconnect - Python2 (reconnect.at:43): ok     (0m0.021s 0m0.012s)
757. quick connect, idle disconnect - Python3 (reconnect.at:43): skipped (reconnect.at:43)
758. slow connect, idle disconnect - C (reconnect.at:99): ok     (0m0.002s 0m0.004s)
759. slow connect, idle disconnect - Python2 (reconnect.at:99): ok     (0m0.017s 0m0.015s)
760. slow connect, idle disconnect - Python3 (reconnect.at:99): skipped (reconnect.at:99)
761. connect backs off - C (reconnect.at:169): ok     (0m0.000s 0m0.006s)
762. connect backs off - Python2 (reconnect.at:169): ok     (0m0.015s 0m0.019s)
763. connect backs off - Python3 (reconnect.at:169): skipped (reconnect.at:169)
764. connections with no data preserve backoff - C (reconnect.at:368): ok     (0m0.000s 0m0.006s)
765. connections with no data preserve backoff - Python2 (reconnect.at:368): ok     (0m0.012s 0m0.023s)
766. connections with no data preserve backoff - Python3 (reconnect.at:368): skipped (reconnect.at:368)
767. brief connection preserves backoff - C (reconnect.at:532): ok     (0m0.000s 0m0.006s)
768. brief connection preserves backoff - Python2 (reconnect.at:532): ok     (0m0.028s 0m0.008s)
769. brief connection preserves backoff - Python3 (reconnect.at:532): skipped (reconnect.at:532)
770. brief connection with data preserves backoff - C (reconnect.at:663): ok     (0m0.000s 0m0.006s)
771. brief connection with data preserves backoff - Python2 (reconnect.at:663): ok     (0m0.008s 0m0.027s)
772. brief connection with data preserves backoff - Python3 (reconnect.at:663): skipped (reconnect.at:663)
773. long connection resets backoff - C (reconnect.at:824): ok     (0m0.000s 0m0.006s)
774. long connection resets backoff - Python2 (reconnect.at:824): ok     (0m0.022s 0m0.012s)
775. long connection resets backoff - Python3 (reconnect.at:824): skipped (reconnect.at:824)
776. connection attempt fails quickly - C (reconnect.at:985): ok     (0m0.002s 0m0.005s)
777. connection attempt fails quickly - Python2 (reconnect.at:985): ok     (0m0.019s 0m0.016s)
778. connection attempt fails quickly - Python3 (reconnect.at:985): skipped (reconnect.at:985)
779. max-tries of 1 honored - C (reconnect.at:1040): ok     (0m0.000s 0m0.006s)
780. max-tries of 1 honored - Python2 (reconnect.at:1040): ok     (0m0.025s 0m0.007s)
781. max-tries of 1 honored - Python3 (reconnect.at:1040): skipped (reconnect.at:1040)
782. max-tries of 0 honored - C (reconnect.at:1100): ok     (0m0.000s 0m0.006s)
783. max-tries of 0 honored - Python2 (reconnect.at:1100): ok     (0m0.030s 0m0.009s)
784. max-tries of 0 honored - Python3 (reconnect.at:1100): skipped (reconnect.at:1100)
785. passive mode - C (reconnect.at:1116): ok     (0m0.000s 0m0.006s)
786. passive mode - Python2 (reconnect.at:1116): ok     (0m0.013s 0m0.021s)
787. passive mode - Python3 (reconnect.at:1116): skipped (reconnect.at:1116)
788. ovs-vswitchd detaches correctly with empty db (ovs-vswitchd.at:7): ok     (0m0.004s 0m0.016s)
789. ovs-vswitchd -- stats-update-interval (ovs-vswitchd.at:34): ok     (0m0.079s 0m0.149s)
790. ovs-vswitchd -- start additional ovs-vswitchd process (ovs-vswitchd.at:67): ok     (0m0.044s 0m0.070s)
791. ovs-vswitchd -- switch over to another ovs-vswitchd process (ovs-vswitchd.at:91): ok     (0m0.033s 0m0.084s)
792. ovs-vswitchd -- invalid database path (ovs-vswitchd.at:130): ok     (0m0.008s 0m0.020s)
793. ovs-vswitchd -- set service controller (ovs-vswitchd.at:154): ok     (0m0.025s 0m0.070s)
794. ovs-vswitchd -- Compatible with OVSDB server - w/o monitor2 (ovs-vswitchd.at:171): ok     (0m0.027s 0m0.091s)
795. ovs-vswitchd - do not create sockets with unsafe names (ovs-vswitchd.at:192): ok     (0m0.031s 0m0.057s)
796. ofproto - echo request (ofproto.at:3): ok     (0m0.009s 0m0.046s)
797. ofproto - handling messages with bad version (ofproto.at:9): ok     (0m0.006s 0m0.055s)
798. ofproto - feature request, config request (ofproto.at:32): ok     (0m0.025s 0m0.065s)
799. ofproto - set OpenFlow port number (ofproto.at:49): ok     (0m0.028s 0m0.051s)
800. ofproto - port stats - (OpenFlow 1.0) (ofproto.at:82): ok     (0m0.013s 0m0.065s)
801. ofproto - port stats - (OpenFlow 1.2) (ofproto.at:93): ok     (0m0.007s 0m0.051s)
802. ofproto - port stats - (OpenFlow 1.4) (ofproto.at:104): ok     (0m0.010s 0m0.054s)
803. ofproto - port-desc stats (OpenFlow 1.0) (ofproto.at:119): ok     (0m0.021s 0m0.044s)
804. ofproto - port-desc stats (OpenFlow 1.2) (ofproto.at:134): ok     (0m0.020s 0m0.047s)
805. ofproto - port-desc stats (OpenFlow 1.5) (ofproto.at:147): ok     (0m0.019s 0m0.059s)
806. ofproto - queue stats - (OpenFlow 1.0) (ofproto.at:223): ok     (0m0.024s 0m0.079s)
807. ofproto - queue stats - (OpenFlow 1.1) (ofproto.at:224): ok     (0m0.011s 0m0.081s)
808. ofproto - queue stats - (OpenFlow 1.2) (ofproto.at:225): ok     (0m0.018s 0m0.084s)
809. ofproto - queue stats - (OpenFlow 1.3) (ofproto.at:226): ok     (0m0.027s 0m0.072s)
810. ofproto - queue stats - (OpenFlow 1.4) (ofproto.at:227): ok     (0m0.012s 0m0.083s)
811. ofproto - queue configuration - (OpenFlow 1.0) (ofproto.at:231): ok     (0m0.023s 0m0.059s)
812. ofproto - queue configuration - (OpenFlow 1.1) (ofproto.at:253): ok     (0m0.015s 0m0.053s)
813. ofproto - queue configuration - (OpenFlow 1.2) (ofproto.at:268): ok     (0m0.026s 0m0.058s)
814. ofproto - queue configuration - (OpenFlow 1.4) (ofproto.at:290): ok     (0m0.014s 0m0.068s)
815. ofproto - no group support (OpenFlow 1.0) (ofproto.at:323): ok     (0m0.017s 0m0.066s)
816. ofproto - del group (OpenFlow 1.1) (ofproto.at:342): ok     (0m0.025s 0m0.088s)
817. ofproto - add indirect group (ofproto.at:383): ok     (0m0.017s 0m0.049s)
818. ofproto - del group (OpenFlow 1.5) (ofproto.at:399): ok     (0m0.025s 0m0.082s)
819. ofproto - del group deletes flows (ofproto.at:436): ok     (0m0.013s 0m0.117s)
820. ofproto - insert buckets (ofproto.at:477): ok     (0m0.028s 0m0.157s)
821. ofproto - remove buckets (ofproto.at:573): ok     (0m0.023s 0m0.112s)
822. ofproto - flow mod checks group availability (ofproto.at:629): ok     (0m0.007s 0m0.064s)
823. ofproto - group description (ofproto.at:657): ok     (0m0.010s 0m0.055s)
824. ofproto - group description (ofproto.at:670): ok     (0m0.012s 0m0.048s)
825. ofproto - group features (ofproto.at:683): ok     (0m0.017s 0m0.055s)
826. ofproto - group stats (OpenFlow 1.1) (ofproto.at:709): ok     (0m0.023s 0m0.067s)
827. ofproto - group stats (OpenFlow 1.3) (ofproto.at:733): ok     (0m0.013s 0m0.070s)
828. ofproto - group stats (OpenFlow 1.5) (ofproto.at:757): ok     (0m0.007s 0m0.072s)
829. ofproto - group add then bridge delete (OpenFlow 1.3) (ofproto.at:781): ok     (0m0.018s 0m0.041s)
830. ofproto - mod-port (OpenFlow 1.0) (ofproto.at:792): ok     (0m0.020s 0m0.165s)
831. ofproto - mod-port (OpenFlow 1.2) (ofproto.at:826): ok     (0m0.026s 0m0.184s)
832. ofproto - mod-port (OpenFlow 1.4) (ofproto.at:857): ok     (0m0.035s 0m0.153s)
833. ofproto - basic flow_mod commands (NXM) (ofproto.at:889): ok     (0m0.026s 0m0.079s)
834. ofproto - basic flow_mod commands (OpenFlow 1.0) (ofproto.at:911): ok     (0m0.016s 0m0.081s)
835. ofproto - add-flow and flags (ofproto.at:936): ok     (0m0.024s 0m0.073s)
836. ofproto - basic flow_mod commands (OpenFlow 1.1) (ofproto.at:968): ok     (0m0.015s 0m0.081s)
837. ofproto - flow_mod negative test (OpenFlow 1.1) (ofproto.at:991): ok     (0m0.006s 0m0.048s)
838. ofproto - set-field flow_mod commands (NXM) (ofproto.at:1005): ok     (0m0.013s 0m0.055s)
839. ofproto - basic flow_mod commands (OpenFlow 1.2) (ofproto.at:1018): ok     (0m0.022s 0m0.080s)
840. ofproto - set-field flow_mod commands (OF1.2) (ofproto.at:1037): ok     (0m0.011s 0m0.071s)
841. ofproto - dump flows with cookie (ofproto.at:1050): ok     (0m0.017s 0m0.078s)
842. ofproto - mod flow with cookie change (OpenFlow 1.0) (ofproto.at:1074): ok     (0m0.015s 0m0.073s)
843. ofproto - mod flow with cookie change (NXM) (ofproto.at:1090): ok     (0m0.014s 0m0.063s)
844. ofproto - no mod flow with cookie change (OpenFlow 1.1) (ofproto.at:1106): ok     (0m0.011s 0m0.067s)
845. ofproto - no mod flow with cookie change (OpenFlow 1.2) (ofproto.at:1122): ok     (0m0.017s 0m0.067s)
846. ofproto - mod flows based on cookie mask (OpenFlow 1.0) (ofproto.at:1138): ok     (0m0.010s 0m0.071s)
847. ofproto - mod flows based on cookie mask (OpenFlow 1.1) (ofproto.at:1160): ok     (0m0.009s 0m0.072s)
848. ofproto - mod flows based on cookie mask (OpenFlow 1.2) (ofproto.at:1182): ok     (0m0.017s 0m0.077s)
849. ofproto - mod flows based on cookie mask with cookie change (ofproto.at:1205): ok     (0m0.021s 0m0.090s)
850. ofproto - mod flow with cookie miss (mask==0) - NXM (ofproto.at:1227): ok     (0m0.017s 0m0.046s)
851. ofproto - mod flow with cookie miss (mask==0) - OF1.1 (ofproto.at:1237): ok     (0m0.012s 0m0.053s)
852. ofproto - mod flow with cookie miss (mask==0) - OF1.2 (ofproto.at:1247): ok     (0m0.025s 0m0.062s)
853. ofproto - mod flow with cookie miss (mask!=0) - NXM (ofproto.at:1256): ok     (0m0.019s 0m0.076s)
854. ofproto - mod flow with cookie miss (mask!=0) - OF1.1 (ofproto.at:1265): ok     (0m0.018s 0m0.064s)
855. ofproto - mod flow with cookie miss (mask!=0) - OF1.2 (ofproto.at:1274): ok     (0m0.006s 0m0.054s)
856. ofproto - del flows with cookies (ofproto.at:1283): ok     (0m0.019s 0m0.071s)
857. ofproto - del flows based on cookie (ofproto.at:1302): ok     (0m0.014s 0m0.069s)
858. ofproto - del flows based on cookie mask (ofproto.at:1323): ok     (0m0.014s 0m0.071s)
859. ofproto - del flows based on table id (NXM) (ofproto.at:1342): ok     (0m0.012s 0m0.112s)
860. ofproto - del flows based on table id (OpenFlow 1.1) (ofproto.at:1374): ok     (0m0.032s 0m0.108s)
861. ofproto - del flows based on table id (OpenFlow 1.2) (ofproto.at:1407): ok     (0m0.045s 0m0.137s)
862. ofproto - flow_mod with out_port matching (OpenFlow 1.0) (ofproto.at:1439): ok     (0m0.019s 0m0.114s)
863. ofproto - flow_mod with out_port matching (OpenFlow 1.1) (ofproto.at:1475): ok     (0m0.032s 0m0.112s)
864. ofproto - flow_mod with out_group matching (OpenFlow 1.1) (ofproto.at:1511): ok     (0m0.029s 0m0.097s)
865. ofproto - flow table configuration (OpenFlow 1.0) (ofproto.at:1553): ok     (0m0.225s 0m1.050s)
866. ofproto - hidden rules not in table stats (ofproto.at:1612): ok     (0m0.064s 0m0.547s)
867. ofproto - flow table configuration (OpenFlow 1.2) (ofproto.at:1663): ok     (0m0.192s 0m0.971s)
868. ofproto - table features (OpenFlow 1.3) (ofproto.at:1767): ok     (0m0.726s 0m2.079s)
869. ofproto - table description (OpenFlow 1.4) (ofproto.at:1978): ok     (0m0.073s 0m0.623s)
870. ofproto - hard limits on flow table size (OpenFlow 1.0) (ofproto.at:2008): ok     (0m0.017s 0m0.099s)
871. ofproto - hard limits on flow table size (OpenFlow 1.2) (ofproto.at:2052): ok     (0m0.014s 0m0.089s)
872. ofproto - eviction upon table overflow (OpenFlow 1.0) (ofproto.at:2091): ok     (0m0.030s 0m0.103s)
873. ofproto - eviction upon table overflow (OpenFlow 1.2) (ofproto.at:2149): ok     (0m0.024s 0m0.113s)
874. ofproto - eviction using importance upon table overflow (OpenFlow 1.4) (ofproto.at:2208): ok     (0m0.033s 0m0.120s)
875. ofproto - eviction upon table overflow, with fairness (OpenFlow 1.0) (ofproto.at:2272): ok     (0m0.030s 0m0.101s)
876. ofproto - eviction upon table overflow, with fairness (OpenFlow 1.2) (ofproto.at:2354): ok     (0m0.037s 0m0.097s)
877. ofproto - eviction upon table overflow, with modified hard timeout (ofproto.at:2436): ok     (0m0.024s 0m0.074s)
878. ofproto - eviction upon table overflow, with modified idle timeout (ofproto.at:2480): ok     (0m0.022s 0m0.080s)
879. ofproto - asynchronous message control (OpenFlow 1.0) (ofproto.at:2524): ok     (0m0.076s 0m0.184s)
880. ofproto - asynchronous message control (OpenFlow 1.2) (ofproto.at:2627): ok     (0m0.232s 0m0.313s)
881. ofproto - asynchronous message control (OpenFlow 1.3) (ofproto.at:2730): ok     (0m0.067s 0m0.210s)
882. ofproto - asynchronous message control (OpenFlow 1.4) (ofproto.at:2839): ok     (0m0.091s 0m0.297s)
883. ofproto - asynchronous message control (OpenFlow 1.5) (ofproto.at:3039): ok     (0m0.036s 0m0.054s)
884. ofproto - controller role (OpenFlow 1.2) (ofproto.at:3114): ok     (0m0.014s 0m0.098s)
885. ofproto - controller role (OpenFlow 1.4) (ofproto.at:3179): ok     (0m0.017s 0m0.119s)
886. ofproto - requestforward (OpenFlow 1.4) (ofproto.at:3244): ok     (0m0.015s 0m0.088s)
887. ofproto - packet-out from controller (OpenFlow 1.0) (ofproto.at:3336): ok     (0m0.023s 0m0.054s)
888. ofproto - packet-out from controller (OpenFlow 1.2) (ofproto.at:3372): ok     (0m0.017s 0m0.052s)
889. ofproto - packet-out from controller (OpenFlow 1.1) (ofproto.at:3405): ok     (0m0.021s 0m0.075s)
890. ofproto - packet-out with metadata and userdata (NXT_PACKET_IN2) (ofproto.at:3435): ok     (0m0.011s 0m0.056s)
891. ofproto - packet-out with metadata (NXM) (ofproto.at:3464): ok     (0m0.011s 0m0.052s)
892. ofproto - packet-out with metadata (OpenFlow 1.2) (ofproto.at:3492): ok     (0m0.032s 0m0.054s)
893. ofproto - packet-out with metadata and dual set_field (OpenFlow 1.3) (ofproto.at:3520): ok     (0m0.008s 0m0.060s)
894. ofproto - packet-out with tunnel metadata (OpenFlow 1.2) (ofproto.at:3547): ok     (0m0.013s 0m0.051s)
895. ofproto - flow monitoring (ofproto.at:3595): ok     (0m0.021s 0m0.142s)
896. ofproto - flow monitoring with !own (ofproto.at:3732): ok     (0m0.010s 0m0.070s)
897. ofproto - flow monitoring with out_port (ofproto.at:3773): ok     (0m0.027s 0m0.064s)
898. ofproto - flow monitoring pause and resume (ofproto.at:3825): skipped (ofproto.at:3845)
899. ofproto - event filtering (OpenFlow 1.3) (ofproto.at:3931): ok     (0m0.021s 0m0.042s)
900. ofproto - ofport_request (ofproto.at:3971): ok     (0m1.224s 0m2.204s)
901. ofproto - bundle open (OpenFlow 1.4) (ofproto.at:4027): ok     (0m0.004s 0m0.055s)
902. ofproto - bundle double open (OpenFlow 1.4) (ofproto.at:4051): ok     (0m0.013s 0m0.068s)
903. ofproto - bundle close without open (OpenFlow 1.4) (ofproto.at:4083): ok     (0m0.015s 0m0.059s)
904. ofproto - bundle double close (OpenFlow 1.4) (ofproto.at:4107): ok     (0m0.009s 0m0.065s)
905. ofproto - bundle close, different flags (OpenFlow 1.4) (ofproto.at:4146): ok     (0m0.023s 0m0.042s)
906. ofproto - bundle commit without open (OpenFlow 1.4) (ofproto.at:4178): ok     (0m0.019s 0m0.039s)
907. ofproto - bundle commit, different flags (OpenFlow 1.4) (ofproto.at:4203): ok     (0m0.010s 0m0.059s)
908. ofproto - bundle discard without open (OpenFlow 1.4) (ofproto.at:4235): ok     (0m0.009s 0m0.054s)
909. ofproto - bundle with multiple flow mods (OpenFlow 1.4) (ofproto.at:4261): ok     (0m0.006s 0m0.125s)
910. ofproto - failing bundle commit (OpenFlow 1.4) (ofproto.at:4452): ok     (0m0.021s 0m0.064s)
911. ofproto - bundle open (OpenFlow 1.3) (ofproto.at:4506): ok     (0m0.021s 0m0.039s)
912. ofproto - bundle double open (OpenFlow 1.3) (ofproto.at:4533): ok     (0m0.011s 0m0.053s)
913. ofproto - bundle close without open (OpenFlow 1.3) (ofproto.at:4568): ok     (0m0.012s 0m0.063s)
914. ofproto - bundle double close (OpenFlow 1.3) (ofproto.at:4592): ok     (0m0.009s 0m0.057s)
915. ofproto - bundle close, different flags (OpenFlow 1.3) (ofproto.at:4631): ok     (0m0.011s 0m0.051s)
916. ofproto - bundle commit without open (OpenFlow 1.3) (ofproto.at:4663): ok     (0m0.023s 0m0.059s)
917. ofproto - bundle commit, different flags (OpenFlow 1.3) (ofproto.at:4688): ok     (0m0.010s 0m0.055s)
918. ofproto - bundle discard without open (OpenFlow 1.3) (ofproto.at:4720): ok     (0m0.016s 0m0.043s)
919. ofproto - bundle with multiple flow mods (OpenFlow 1.3) (ofproto.at:4746): ok     (0m0.018s 0m0.093s)
920. ofproto - failing bundle commit (OpenFlow 1.3) (ofproto.at:4937): ok     (0m0.023s 0m0.073s)
921. dpif-netdev - dummy interface (dpif-netdev.at:43): ok     (0m0.034s 0m0.088s)
922. dpif-netdev - miss upcall key matches flow_install (dpif-netdev.at:77): ok     (0m0.038s 0m0.154s)
923. dpif-netdev - miss upcall key matches flow_dump (dpif-netdev.at:112): ok     (0m0.042s 0m0.173s)
924. dpctl - add-dp del-dp (dpctl.at:3): ok     (0m0.019s 0m0.053s)
925. dpctl - add-if set-if del-if (dpctl.at:19): ok     (0m0.019s 0m0.109s)
926. ofproto-dpif - revalidator/wait (ofproto-dpif.at:3): ok     (0m0.029s 0m0.043s)
927. ofproto-dpif - active-backup bonding (ofproto-dpif.at:9): ok     (0m0.059s 0m0.157s)
928. ofproto-dpif - balance-slb bonding (ofproto-dpif.at:56): ok     (0m0.320s 0m0.612s)
929. ofproto-dpif - balance-tcp bonding (ofproto-dpif.at:99): ok     (0m0.975s 0m1.472s)
930. ofproto-dpif - balance-tcp bonding, different recirc flow  (ofproto-dpif.at:152): ok     (0m0.020s 0m0.073s)
931. ofproto-dpif - resubmit (ofproto-dpif.at:210): ok     (0m0.019s 0m0.052s)
932. ofproto-dpif - goto table (ofproto-dpif.at:229): ok     (0m0.010s 0m0.170s)
933. ofproto-dpif - write actions (ofproto-dpif.at:243): ok     (0m0.015s 0m0.050s)
934. ofproto-dpif - modify IPv6 Neighbor Solitication (ND) (ofproto-dpif.at:260): ok     (0m0.018s 0m0.045s)
935. ofproto-dpif - clear actions (ofproto-dpif.at:279): ok     (0m0.004s 0m0.057s)
936. ofproto-dpif - group chaining (ofproto-dpif.at:295): ok     (0m0.003s 0m0.065s)
937. ofproto-dpif - all group in action list (ofproto-dpif.at:308): ok     (0m0.009s 0m0.056s)
938. ofproto-dpif - indirect group in action list (ofproto-dpif.at:323): ok     (0m0.008s 0m0.057s)
939. ofproto-dpif - group actions have no effect afterwards (ofproto-dpif.at:335): ok     (0m0.011s 0m0.051s)
940. ofproto-dpif - all group in action set (ofproto-dpif.at:347): ok     (0m0.019s 0m0.044s)
941. ofproto-dpif - indirect group in action set (ofproto-dpif.at:362): ok     (0m0.020s 0m0.044s)
942. ofproto-dpif - select group (ofproto-dpif.at:374): ok     (0m0.033s 0m0.109s)
943. ofproto-dpif - select group with watch port (ofproto-dpif.at:394): ok     (0m0.024s 0m0.042s)
944. ofproto-dpif - select group with weight (ofproto-dpif.at:406): ok     (0m0.009s 0m0.055s)
945. ofproto-dpif - select group with hash selection method (ofproto-dpif.at:418): ok     (0m0.031s 0m0.202s)
946. ofproto-dpif - fast failover group (ofproto-dpif.at:451): ok     (0m0.009s 0m0.056s)
947. ofproto-dpif - group stats single bucket (ofproto-dpif.at:463): ok     (0m0.029s 0m0.077s)
948. ofproto-dpif - group stats all buckets (ofproto-dpif.at:484): ok     (0m0.027s 0m0.070s)
949. ofproto-dpif - registers (ofproto-dpif.at:505): ok     (0m0.015s 0m0.049s)
950. ofproto-dpif - extended registers (ofproto-dpif.at:542): ok     (0m0.031s 0m0.043s)
951. ofproto-dpif - load and move order (ofproto-dpif.at:561): ok     (0m0.021s 0m0.047s)
952. ofproto-dpif - copy-field into extended registers (ofproto-dpif.at:575): ok     (0m0.019s 0m0.044s)
953. ofproto-dpif - masked set-field into metadata (ofproto-dpif.at:595): ok     (0m0.023s 0m0.055s)
954. ofproto-dpif - actset_output (ofproto-dpif.at:617): ok     (0m0.012s 0m0.055s)
955. ofproto-dpif - push-pop (ofproto-dpif.at:657): ok     (0m0.026s 0m0.043s)
956. ofproto-dpif - output (ofproto-dpif.at:676): ok     (0m0.014s 0m0.052s)
957. ofproto-dpif - dec_ttl (ofproto-dpif.at:697): ok     (0m0.011s 0m0.080s)
958. ofproto-dpif - dec_ttl without arguments at offset 32 in ofpacts (ofproto-dpif.at:741): ok     (0m0.074s 0m0.506s)
959. ofproto-dpif - dec_ttl with arguments at offset 32 in ofpacts (ofproto-dpif.at:758): ok     (0m0.046s 0m0.579s)
960. ofproto-dpif - note at offset 24 in ofpacts (ofproto-dpif.at:775): ok     (0m0.091s 0m0.535s)
961. ofproto-dpif - output, OFPP_NONE ingress port (ofproto-dpif.at:785): ok     (0m0.022s 0m0.048s)
962. ofproto-dpif - DSCP (ofproto-dpif.at:803): ok     (0m0.022s 0m0.063s)
963. ofproto-dpif - output/flood flags (ofproto-dpif.at:830): ok     (0m0.022s 0m0.094s)
964. ofproto-dpif - Default Table Miss - OF1.0 (OFPTC_TABLE_MISS_CONTROLLER) (ofproto-dpif.at:888): ok     (0m0.009s 0m0.077s)
965. ofproto-dpif - Default Table Miss - OF1.3 (OFPTC_TABLE_MISS_DROP) (ofproto-dpif.at:922): ok     (0m0.009s 0m0.077s)
966. ofproto-dpif - Table Miss - goto table and OFPTC_TABLE_MISS_CONTROLLER (ofproto-dpif.at:950): ok     (0m0.019s 0m0.067s)
967. ofproto-dpif - Table Miss - resubmit and OFPTC_TABLE_MISS_CONTROLLER (ofproto-dpif.at:986): ok     (0m0.031s 0m0.072s)
968. ofproto-dpif - Table Miss - OFPTC_TABLE_MISS_CONTINUE (ofproto-dpif.at:1014): ok     (0m0.011s 0m0.093s)
969. ofproto-dpif - Table Miss - goto table and OFPTC_TABLE_MISS_CONTINUE (ofproto-dpif.at:1073): ok     (0m0.011s 0m0.092s)
970. ofproto-dpif - Table Miss - resubmit and OFPTC_TABLE_MISS_CONTINUE (ofproto-dpif.at:1137): ok     (0m0.023s 0m0.076s)
971. ofproto-dpif - Table Miss - OFPTC_TABLE_MISS_DROP (ofproto-dpif.at:1183): ok     (0m0.015s 0m0.082s)
972. ofproto-dpif - Table Miss - goto table and OFPTC_TABLE_MISS_DROP (ofproto-dpif.at:1211): ok     (0m0.014s 0m0.068s)
973. ofproto-dpif - Table Miss - resubmit and OFPTC_TABLE_MISS_DROP (ofproto-dpif.at:1242): ok     (0m0.022s 0m0.075s)
974. ofproto-dpif - controller (ofproto-dpif.at:1273): ok     (0m0.044s 0m0.164s)
975. ofproto-dpif - MPLS handling (ofproto-dpif.at:1543): ok     (0m0.117s 0m0.727s)
976. ofproto-dpif - MPLS handling with goto_table (ofproto-dpif.at:2593): ok     (0m0.025s 0m0.061s)
977. ofproto-dpif - MPLS handling with write_actions (ofproto-dpif.at:2641): ok     (0m0.016s 0m0.074s)
978. ofproto-dpif - table-miss flow (OpenFlow 1.0) (ofproto-dpif.at:2689): ok     (0m0.018s 0m0.065s)
979. ofproto-dpif - table-miss flow (OpenFlow 1.3) (ofproto-dpif.at:2729): ok     (0m0.017s 0m0.070s)
980. ofproto-dpif - table-miss flow with async config (OpenFlow 1.3) (ofproto-dpif.at:2770): ok     (0m0.044s 0m0.122s)
981. ofproto-dpif - table-miss flow (OpenFlow 1.4) (ofproto-dpif.at:2844): ok     (0m0.027s 0m0.084s)
982. ofproto-dpif - packet-in reasons (Openflow 1.3) (ofproto-dpif.at:2886): ok     (0m0.027s 0m0.084s)
983. ofproto-dpif - packet-in reasons (Openflow 1.4) (ofproto-dpif.at:2954): ok     (0m0.019s 0m0.082s)
984. ofproto-dpif - ARP modification slow-path (ofproto-dpif.at:3022): ok     (0m0.014s 0m0.066s)
985. ofproto-dpif - VLAN handling (ofproto-dpif.at:3051): ok     (0m0.129s 0m1.194s)
986. ofproto-dpif - MPLS handling (ofproto-dpif.at:3185): ok     (0m0.025s 0m0.113s)
987. ofproto-dpif - VLAN+MPLS handling (ofproto-dpif.at:3302): ok     (0m0.060s 0m0.231s)
988. ofproto-dpif - fragment handling - trace (ofproto-dpif.at:3693): ok     (0m0.021s 0m0.115s)
989. ofproto-dpif - fragment handling - upcall (ofproto-dpif.at:3742): ok     (0m0.015s 0m0.102s)
990. ofproto-dpif - fragment handling - actions (ofproto-dpif.at:3817): ok     (0m0.034s 0m0.151s)
991. ofproto-dpif - exit (ofproto-dpif.at:3919): ok     (0m0.017s 0m0.062s)
992. ofproto-dpif - mirroring, select_all (ofproto-dpif.at:3944): ok     (0m0.015s 0m0.063s)
993. ofproto-dpif - mirroring, select_src (ofproto-dpif.at:3975): ok     (0m0.012s 0m0.063s)
994. ofproto-dpif - mirroring, OFPP_NONE ingress port (ofproto-dpif.at:4004): ok     (0m0.018s 0m0.045s)
995. ofproto-dpif - mirroring, select_dst (ofproto-dpif.at:4026): ok     (0m0.009s 0m0.064s)
996. ofproto-dpif - mirroring, select_vlan (ofproto-dpif.at:4057): ok     (0m0.031s 0m0.068s)
997. ofproto-dpif - mirroring, output_port (ofproto-dpif.at:4093): ok     (0m0.021s 0m0.061s)
998. ofproto-dpif - mirroring, output_vlan (ofproto-dpif.at:4123): ok     (0m0.011s 0m0.081s)
999. ofproto-dpif - multiple VLAN output mirrors (ofproto-dpif.at:4160): ok     (0m0.025s 0m0.062s)
1000. ofproto-dpif - mirroring with recirculation (ofproto-dpif.at:4189): ok     (0m0.011s 0m0.068s)
1001. ofproto-dpif - resubmit with recirculation (ofproto-dpif.at:4217): ok     (0m0.016s 0m0.063s)
1002. ofproto-dpif - recirculation after resubmit (ofproto-dpif.at:4242): ok     (0m0.010s 0m0.065s)
1003. ofproto-dpif - continuation - pause at end of pipeline (ofproto-dpif.at:4369): ok     (0m0.024s 0m0.101s)
1004. ofproto-dpif - continuation - actions (ofproto-dpif.at:4372): ok     (0m0.041s 0m0.274s)
1005. ofproto-dpif - continuation - resubmit (ofproto-dpif.at:4380): ok     (0m0.096s 0m0.549s)
1006. ofproto-dpif - continuation - action set (ofproto-dpif.at:4388): ok     (0m0.013s 0m0.162s)
1007. ofproto-dpif - continuation - data stack (ofproto-dpif.at:4394): ok     (0m0.045s 0m0.269s)
1008. ofproto-dpif - continuation - mirroring (ofproto-dpif.at:4412): ok     (0m0.039s 0m0.213s)
1009. ofproto-dpif - continuation - patch ports (ofproto-dpif.at:4423): ok     (0m0.058s 0m0.339s)
1010. ofproto-dpif - ofproto/trace command 1 (ofproto-dpif.at:4439): ok     (0m0.016s 0m0.167s)
1011. ofproto-dpif - ofproto/trace command 2 (ofproto-dpif.at:4580): ok     (0m0.032s 0m0.171s)
1012. ofproto-dpif - ofproto/trace from dpctl output (ofproto-dpif.at:4697): ok     (0m0.040s 0m0.094s)
1013. ofproto-dpif - ofproto/trace-packet-out (ofproto-dpif.at:4744): ok     (0m0.025s 0m0.061s)
1014. ofproto-dpif - MAC learning (ofproto-dpif.at:4774): ok     (0m0.046s 0m0.136s)
1015. ofproto-dpif - MAC table overflow (ofproto-dpif.at:4863): ok     (0m0.031s 0m0.230s)
1016. ofproto-dpif - MAC table overflow fairness (ofproto-dpif.at:4923): ok     (0m0.058s 0m0.165s)
1017. ofproto-dpif - sFlow packet sampling - IPv4 collector (ofproto-dpif.at:5312): ok     (0m0.042s 0m0.103s)
1018. ofproto-dpif - sFlow packet sampling - IPv6 collector (ofproto-dpif.at:5316): skipped (ofproto-dpif.at:5317)
1019. ofproto-dpif - sFlow packet sampling - LACP structures (ofproto-dpif.at:5322): ok     (0m0.015s 0m0.085s)
1020. ofproto-dpif - sFlow packet sampling - tunnel set (ofproto-dpif.at:5379): ok     (0m0.042s 0m0.201s)
1021. ofproto-dpif - sFlow packet sampling - tunnel push (ofproto-dpif.at:5448): ok     (0m0.099s 0m0.179s)
1022. ofproto-dpif - sFlow packet sampling - MPLS (ofproto-dpif.at:5546): ok     (0m0.057s 0m0.203s)
1023. ofproto-dpif - NetFlow flow expiration - IPv4 collector (ofproto-dpif.at:5682): ok     (0m0.033s 0m0.137s)
1024. ofproto-dpif - NetFlow flow expiration - IPv6 collector (ofproto-dpif.at:5686): skipped (ofproto-dpif.at:5687)
1025. ofproto-dpif - NetFlow active expiration - IPv4 collector (ofproto-dpif.at:5766): ok     (0m0.105s 0m0.601s)
1026. ofproto-dpif - NetFlow active expiration - IPv6 collector (ofproto-dpif.at:5770): skipped (ofproto-dpif.at:5771)
1027. ofproto-dpif - Basic IPFIX sanity check (ofproto-dpif.at:5778): ok     (0m0.020s 0m0.092s)
1028. ofproto-dpif - flow stats (ofproto-dpif.at:5812): ok     (0m0.016s 0m0.119s)
1029. ofproto-dpif - flow stats, set-n-threads (ofproto-dpif.at:5833): ok     (0m0.014s 0m0.120s)
1030. ofproto-dpif - idle_age and hard_age increase over time (ofproto-dpif.at:5856): ok     (0m0.049s 0m0.161s)
1031. ofproto-dpif - fin_timeout (ofproto-dpif.at:5946): ok     (0m0.033s 0m0.079s)
1032. ofproto-dpif - ovs-appctl dpif/dump-dps (ofproto-dpif.at:5980): ok     (0m0.018s 0m0.052s)
1033. ofproto-dpif - ovs-appctl dpif/show (ofproto-dpif.at:5992): ok     (0m0.021s 0m0.041s)
1034. ofproto-dpif - ovs-appctl dpif/dump-flows (ofproto-dpif.at:6010): ok     (0m0.027s 0m0.116s)
1035. ofproto-dpif - ovs-appctl dpif/get-flow (ofproto-dpif.at:6043): ok     (0m0.030s 0m0.072s)
1036. ofproto-dpif - MPLS actions that result in a userspace action (ofproto-dpif.at:6062): ok     (0m0.037s 0m0.112s)
1037. ofproto-dpif - MPLS actions that result in a drop (ofproto-dpif.at:6098): ok     (0m0.027s 0m0.130s)
1038. ofproto-dpif - patch ports (ofproto-dpif.at:6136): ok     (0m0.067s 0m0.243s)
1039. ofproto-dpif - patch ports - stack (ofproto-dpif.at:6211): ok     (0m0.020s 0m0.095s)
1040. ofproto-dpif - port duration (ofproto-dpif.at:6260): ok     (0m0.016s 0m0.051s)
1041. ofproto-dpif megaflow - port classification (ofproto-dpif.at:6280): ok     (0m0.029s 0m0.112s)
1042. ofproto-dpif megaflow - L2 classification (ofproto-dpif.at:6298): ok     (0m0.048s 0m0.090s)
1043. ofproto-dpif megaflow - L3 classification (ofproto-dpif.at:6316): ok     (0m0.037s 0m0.095s)
1044. ofproto-dpif megaflow - IPv6 classification (ofproto-dpif.at:6335): ok     (0m0.041s 0m0.127s)
1045. ofproto-dpif megaflow - L4 classification (ofproto-dpif.at:6354): ok     (0m0.036s 0m0.116s)
1046. ofproto-dpif megaflow - normal (ofproto-dpif.at:6372): ok     (0m0.053s 0m0.120s)
1047. ofproto-dpif megaflow - mpls (ofproto-dpif.at:6387): ok     (0m0.035s 0m0.083s)
1048. ofproto-dpif megaflow - netflow - IPv4 collector (ofproto-dpif.at:6433): ok     (0m0.070s 0m0.096s)
1049. ofproto-dpif megaflow - netflow - IPv6 collector (ofproto-dpif.at:6437): skipped (ofproto-dpif.at:6438)
1050. ofproto-dpif megaflow - normal, active-backup bonding (ofproto-dpif.at:6442): ok     (0m0.040s 0m0.111s)
1051. ofproto-dpif megaflow - normal, balance-slb bonding (ofproto-dpif.at:6463): ok     (0m0.041s 0m0.090s)
1052. ofproto-dpif megaflow - normal, balance-tcp bonding (ofproto-dpif.at:6484): ok     (0m0.047s 0m0.080s)
1053. ofproto-dpif megaflow - resubmit port action (ofproto-dpif.at:6522): ok     (0m0.047s 0m0.082s)
1054. ofproto-dpif megaflow - resubmit table action (ofproto-dpif.at:6541): ok     (0m0.047s 0m0.124s)
1055. ofproto-dpif megaflow - goto_table action (ofproto-dpif.at:6561): ok     (0m0.038s 0m0.109s)
1056. ofproto-dpif megaflow - mirroring, select_all (ofproto-dpif.at:6580): ok     (0m0.038s 0m0.107s)
1057. ofproto-dpif megaflow - mirroring, select_vlan (ofproto-dpif.at:6604): ok     (0m0.017s 0m0.100s)
1058. ofproto-dpif megaflow - move action (ofproto-dpif.at:6627): ok     (0m0.043s 0m0.078s)
1059. ofproto-dpif megaflow - push action (ofproto-dpif.at:6647): ok     (0m0.019s 0m0.105s)
1060. ofproto-dpif megaflow - learning (ofproto-dpif.at:6665): ok     (0m0.037s 0m0.126s)
1061. ofproto-dpif megaflow - tunnels (ofproto-dpif.at:6692): ok     (0m0.054s 0m0.150s)
1062. ofproto-dpif megaflow - dec_ttl (ofproto-dpif.at:6725): ok     (0m0.026s 0m0.124s)
1063. ofproto-dpif megaflow - set dl_dst (ofproto-dpif.at:6744): ok     (0m0.032s 0m0.118s)
1064. ofproto-dpif megaflow - disabled (ofproto-dpif.at:6765): ok     (0m0.060s 0m0.181s)
1065. ofproto-dpif - datapath port number change (ofproto-dpif.at:6798): ok     (0m0.016s 0m0.068s)
1066. ofproto - bundle with variable bfd/cfm config (ofproto-dpif.at:6820): ok     (0m0.083s 0m0.144s)
1067. ofproto-dpif - ofproto-dpif-monitor 1 (ofproto-dpif.at:6898): ok     (0m0.040s 0m0.099s)
1068. ofproto-dpif - ofproto-dpif-monitor 2 (ofproto-dpif.at:6945): ok     (0m1.352s 0m1.015s)
1069. ofproto-dpif - infinite resubmit (ofproto-dpif.at:6958): ok     (0m0.006s 0m0.064s)
1070. ofproto-dpif - exponential resubmit chain (ofproto-dpif.at:6972): ok     (0m0.519s 0m0.444s)
1071. ofproto-dpif - too many output actions (ofproto-dpif.at:6990): ok     (0m0.378s 0m0.273s)
1072. ofproto-dpif - stack too deep (ofproto-dpif.at:7008): ok     (0m0.031s 0m0.139s)
1073. ofproto-dpif packet-out controller (ofproto-dpif.at:7028): ok     (0m0.078s 0m0.571s)
1074. ofproto-dpif packet-out controller (patch port) (ofproto-dpif.at:7073): ok     (0m0.173s 0m1.081s)
1075. ofproto-dpif packet-out goto_table (ofproto-dpif.at:7129): ok     (0m0.086s 0m0.600s)
1076. ofproto-dpif packet-out table-miss (continue) (ofproto-dpif.at:7183): ok     (0m0.085s 0m0.569s)
1077. ofproto-dpif - ICMPv6 (ofproto-dpif.at:7234): ok     (0m0.028s 0m0.059s)
1078. ofproto-dpif - Neighbor Discovery set-field with checksum update (ofproto-dpif.at:7254): ok     (0m0.017s 0m0.082s)
1079. ofproto-dpif - vlan matching (ofproto-dpif.at:7276): ok     (0m0.017s 0m0.065s)
1080. ofproto-dpif - in place modification (ofproto-dpif.at:7294): ok     (0m0.023s 0m0.114s)
1081. ofproto-dpif - in place modification (vlan) (ofproto-dpif.at:7334): ok     (0m0.040s 0m0.128s)
1082. bridge - ports that disappear get added back (bridge.at:7): ok     (0m0.017s 0m0.052s)
1083. VLAN splinters (vlan-splinters.at:3): ok     (0m0.022s 0m0.089s)
1084. create empty, reread (ovsdb-log.at:3): ok     (0m0.002s 0m0.012s)
1085. write one, reread (ovsdb-log.at:18): ok     (0m0.004s 0m0.008s)
1086. check that create fails if file exists (ovsdb-log.at:35): ok     (0m0.000s 0m0.014s)
1087. write one, reread (ovsdb-log.at:55): ok     (0m0.003s 0m0.008s)
1088. write one, reread, append (ovsdb-log.at:76): ok     (0m0.003s 0m0.015s)
1089. write, reread one, overwrite (ovsdb-log.at:106): ok     (0m0.004s 0m0.016s)
1090. write, add corrupted data, read (ovsdb-log.at:132): ok     (0m0.000s 0m0.012s)
1091. write, add corrupted data, read, overwrite (ovsdb-log.at:154): ok     (0m0.002s 0m0.014s)
1092. write, corrupt some data, read, overwrite (ovsdb-log.at:186): ok     (0m0.002s 0m0.021s)
1093. write, truncate file, read, overwrite (ovsdb-log.at:219): ok     (0m0.000s 0m0.023s)
1094. write bad JSON, read, overwrite (ovsdb-log.at:252): ok     (0m0.001s 0m0.017s)
1095. integer - C (ovsdb-types.at:3): ok     (0m0.001s 0m0.004s)
1096. integer - Python2 (ovsdb-types.at:3): ok     (0m0.096s 0m0.033s)
1097. integer - Python3 (ovsdb-types.at:3): ok     (0m0.054s 0m0.031s)
1098. real - C (ovsdb-types.at:5): ok     (0m0.002s 0m0.004s)
1099. real - Python2 (ovsdb-types.at:5): ok     (0m0.079s 0m0.034s)
1100. real - Python3 (ovsdb-types.at:5): ok     (0m0.108s 0m0.031s)
1101. boolean - C (ovsdb-types.at:7): ok     (0m0.000s 0m0.006s)
1102. boolean - Python2 (ovsdb-types.at:7): ok     (0m0.072s 0m0.026s)
1103. boolean - Python3 (ovsdb-types.at:7): ok     (0m0.059s 0m0.025s)
1104. string - C (ovsdb-types.at:9): ok     (0m0.000s 0m0.005s)
1105. string - Python2 (ovsdb-types.at:9): ok     (0m0.055s 0m0.029s)
1106. string - Python3 (ovsdb-types.at:9): ok     (0m0.087s 0m0.034s)
1107. uuid - C (ovsdb-types.at:11): ok     (0m0.000s 0m0.006s)
1108. uuid - Python2 (ovsdb-types.at:11): ok     (0m0.109s 0m0.042s)
1109. uuid - Python3 (ovsdb-types.at:11): ok     (0m0.079s 0m0.030s)
1110. void is not a valid atomic-type - C (ovsdb-types.at:13): ok     (0m0.000s 0m0.009s)
1111. void is not a valid atomic-type - Python2 (ovsdb-types.at:13): skipped (ovsdb-types.at:13)
1112. integer enum - C (ovsdb-types.at:18): ok     (0m0.001s 0m0.004s)
1113. integer enum - Python2 (ovsdb-types.at:18): ok     (0m0.107s 0m0.050s)
1114. integer enum - Python3 (ovsdb-types.at:18): ok     (0m0.109s 0m0.033s)
1115. integer >= 5 - C (ovsdb-types.at:21): ok     (0m0.002s 0m0.004s)
1116. integer >= 5 - Python2 (ovsdb-types.at:21): ok     (0m0.076s 0m0.031s)
1117. integer >= 5 - Python3 (ovsdb-types.at:21): ok     (0m0.065s 0m0.035s)
1118. integer <= 7 - C (ovsdb-types.at:24): ok     (0m0.000s 0m0.005s)
1119. integer <= 7 - Python2 (ovsdb-types.at:24): ok     (0m0.039s 0m0.053s)
1120. integer <= 7 - Python3 (ovsdb-types.at:24): ok     (0m0.059s 0m0.046s)
1121. integer between -5 and 10 - C (ovsdb-types.at:27): ok     (0m0.000s 0m0.006s)
1122. integer between -5 and 10 - Python2 (ovsdb-types.at:27): ok     (0m0.083s 0m0.061s)
1123. integer between -5 and 10 - Python3 (ovsdb-types.at:27): ok     (0m0.093s 0m0.046s)
1124. integer max may not be less than min - C (ovsdb-types.at:30): ok     (0m0.001s 0m0.009s)
1125. integer max may not be less than min - Python2 (ovsdb-types.at:30): skipped (ovsdb-types.at:30)
1126. real enum - C (ovsdb-types.at:34): ok     (0m0.000s 0m0.005s)
1127. real enum - Python2 (ovsdb-types.at:34): ok     (0m0.059s 0m0.026s)
1128. real enum - Python3 (ovsdb-types.at:34): ok     (0m0.069s 0m0.018s)
1129. real >= -1.5 - C (ovsdb-types.at:37): ok     (0m0.000s 0m0.005s)
1130. real >= -1.5 - Python2 (ovsdb-types.at:37): ok     (0m0.073s 0m0.051s)
1131. real >= -1.5 - Python3 (ovsdb-types.at:37): ok     (0m0.042s 0m0.041s)
1132. real <= 1e5 - C (ovsdb-types.at:40): ok     (0m0.000s 0m0.005s)
1133. real <= 1e5 - Python2 (ovsdb-types.at:40): ok     (0m0.070s 0m0.017s)
1134. real <= 1e5 - Python3 (ovsdb-types.at:40): ok     (0m0.100s 0m0.042s)
1135. real between -2.5 and 3.75 - C (ovsdb-types.at:43): ok     (0m0.000s 0m0.006s)
1136. real between -2.5 and 3.75 - Python2 (ovsdb-types.at:43): ok     (0m0.095s 0m0.061s)
1137. real between -2.5 and 3.75 - Python3 (ovsdb-types.at:43): ok     (0m0.056s 0m0.030s)
1138. real max may not be less than min - C (ovsdb-types.at:46): ok     (0m0.002s 0m0.011s)
1139. real max may not be less than min - Python2 (ovsdb-types.at:46): skipped (ovsdb-types.at:46)
1140. boolean - C (ovsdb-types.at:50): ok     (0m0.000s 0m0.005s)
1141. boolean - Python2 (ovsdb-types.at:50): ok     (0m0.052s 0m0.034s)
1142. boolean - Python3 (ovsdb-types.at:50): ok     (0m0.037s 0m0.047s)
1143. boolean enum - C (ovsdb-types.at:52): ok     (0m0.001s 0m0.003s)
1144. boolean enum - Python2 (ovsdb-types.at:52): ok     (0m0.054s 0m0.036s)
1145. boolean enum - Python3 (ovsdb-types.at:52): ok     (0m0.056s 0m0.036s)
1146. string enum - C (ovsdb-types.at:56): ok     (0m0.000s 0m0.005s)
1147. string enum - Python2 (ovsdb-types.at:56): ok     (0m0.044s 0m0.039s)
1148. string enum - Python3 (ovsdb-types.at:56): ok     (0m0.062s 0m0.021s)
1149. string minLength - C (ovsdb-types.at:59): ok     (0m0.000s 0m0.005s)
1150. string minLength - Python2 (ovsdb-types.at:59): ok     (0m0.065s 0m0.018s)
1151. string minLength - Python3 (ovsdb-types.at:59): ok     (0m0.043s 0m0.089s)
1152. string maxLength - C (ovsdb-types.at:62): ok     (0m0.000s 0m0.005s)
1153. string maxLength - Python2 (ovsdb-types.at:62): ok     (0m0.074s 0m0.037s)
1154. string maxLength - Python3 (ovsdb-types.at:62): ok     (0m0.105s 0m0.040s)
1155. string minLength and maxLength - C (ovsdb-types.at:65): ok     (0m0.001s 0m0.004s)
1156. string minLength and maxLength - Python2 (ovsdb-types.at:65): ok     (0m0.046s 0m0.036s)
1157. string minLength and maxLength - Python3 (ovsdb-types.at:65): ok     (0m0.066s 0m0.023s)
1158. maxLength must not be less than minLength - C (ovsdb-types.at:68): ok     (0m0.002s 0m0.006s)
1159. maxLength must not be less than minLength - Python2 (ovsdb-types.at:68): skipped (ovsdb-types.at:68)
1160. maxLength must not be negative - C (ovsdb-types.at:71): ok     (0m0.000s 0m0.008s)
1161. maxLength must not be negative - Python2 (ovsdb-types.at:71): skipped (ovsdb-types.at:71)
1162. uuid enum - C (ovsdb-types.at:75): ok     (0m0.002s 0m0.004s)
1163. uuid enum - Python2 (ovsdb-types.at:75): ok     (0m0.039s 0m0.043s)
1164. uuid enum - Python3 (ovsdb-types.at:75): ok     (0m0.044s 0m0.038s)
1165. uuid refTable - C (ovsdb-types.at:78): ok     (0m0.003s 0m0.003s)
1166. uuid refTable - Python2 (ovsdb-types.at:78): ok     (0m0.065s 0m0.019s)
1167. uuid refTable - Python3 (ovsdb-types.at:78): ok     (0m0.042s 0m0.047s)
1168. uuid refTable must be valid id - C (ovsdb-types.at:81): ok     (0m0.000s 0m0.008s)
1169. uuid refTable must be valid id - Python2 (ovsdb-types.at:81): skipped (ovsdb-types.at:81)
1170. void is not a valid base-type - C (ovsdb-types.at:85): ok     (0m0.001s 0m0.007s)
1171. void is not a valid base-type - Python2 (ovsdb-types.at:85): skipped (ovsdb-types.at:85)
1172. "type" member must be present - C (ovsdb-types.at:87): ok     (0m0.000s 0m0.008s)
1173. "type" member must be present - Python2 (ovsdb-types.at:87): skipped (ovsdb-types.at:87)
1174. simple integer - C (ovsdb-types.at:92): ok     (0m0.000s 0m0.005s)
1175. simple integer - Python2 (ovsdb-types.at:92): ok     (0m0.028s 0m0.057s)
1176. simple integer - Python3 (ovsdb-types.at:92): ok     (0m0.047s 0m0.036s)
1177. simple real - C (ovsdb-types.at:94): ok     (0m0.000s 0m0.005s)
1178. simple real - Python2 (ovsdb-types.at:94): ok     (0m0.063s 0m0.021s)
1179. simple real - Python3 (ovsdb-types.at:94): ok     (0m0.057s 0m0.030s)
1180. simple boolean - C (ovsdb-types.at:96): ok     (0m0.001s 0m0.004s)
1181. simple boolean - Python2 (ovsdb-types.at:96): ok     (0m0.048s 0m0.038s)
1182. simple boolean - Python3 (ovsdb-types.at:96): ok     (0m0.035s 0m0.049s)
1183. simple string - C (ovsdb-types.at:98): ok     (0m0.003s 0m0.003s)
1184. simple string - Python2 (ovsdb-types.at:98): ok     (0m0.064s 0m0.022s)
1185. simple string - Python3 (ovsdb-types.at:98): ok     (0m0.043s 0m0.043s)
1186. simple uuid - C (ovsdb-types.at:100): ok     (0m0.000s 0m0.007s)
1187. simple uuid - Python2 (ovsdb-types.at:100): ok     (0m0.060s 0m0.030s)
1188. simple uuid - Python3 (ovsdb-types.at:100): ok     (0m0.054s 0m0.029s)
1189. integer in object - C (ovsdb-types.at:102): ok     (0m0.000s 0m0.006s)
1190. integer in object - Python2 (ovsdb-types.at:102): ok     (0m0.054s 0m0.037s)
1191. integer in object - Python3 (ovsdb-types.at:102): ok     (0m0.027s 0m0.057s)
1192. real in object with explicit min and max - C (ovsdb-types.at:104): ok     (0m0.000s 0m0.005s)
1193. real in object with explicit min and max - Python2 (ovsdb-types.at:104): ok     (0m0.065s 0m0.018s)
1194. real in object with explicit min and max - Python3 (ovsdb-types.at:104): ok     (0m0.061s 0m0.025s)
1195. key type is required - C (ovsdb-types.at:107): ok     (0m0.003s 0m0.006s)
1196. key type is required - Python2 (ovsdb-types.at:107): skipped (ovsdb-types.at:107)
1197. void is not a valid type - C (ovsdb-types.at:109): ok     (0m0.001s 0m0.007s)
1198. void is not a valid type - Python2 (ovsdb-types.at:109): skipped (ovsdb-types.at:109)
1199. optional boolean - C (ovsdb-types.at:114): ok     (0m0.000s 0m0.005s)
1200. optional boolean - Python2 (ovsdb-types.at:114): ok     (0m0.067s 0m0.033s)
1201. optional boolean - Python3 (ovsdb-types.at:114): ok     (0m0.062s 0m0.034s)
1202. set of 1 to 3 uuids - C (ovsdb-types.at:118): ok     (0m0.001s 0m0.004s)
1203. set of 1 to 3 uuids - Python2 (ovsdb-types.at:118): ok     (0m0.061s 0m0.022s)
1204. set of 1 to 3 uuids - Python3 (ovsdb-types.at:118): ok     (0m0.079s 0m0.057s)
1205. set of 0 to 3 strings - C (ovsdb-types.at:121): ok     (0m0.002s 0m0.004s)
1206. set of 0 to 3 strings - Python2 (ovsdb-types.at:121): ok     (0m0.062s 0m0.021s)
1207. set of 0 to 3 strings - Python3 (ovsdb-types.at:121): ok     (0m0.098s 0m0.042s)
1208. set of 0 or more integers - C (ovsdb-types.at:124): ok     (0m0.002s 0m0.004s)
1209. set of 0 or more integers - Python2 (ovsdb-types.at:124): ok     (0m0.109s 0m0.036s)
1210. set of 0 or more integers - Python3 (ovsdb-types.at:124): ok     (0m0.111s 0m0.045s)
1211. set of 1 or more reals - C (ovsdb-types.at:127): ok     (0m0.000s 0m0.007s)
1212. set of 1 or more reals - Python2 (ovsdb-types.at:127): ok     (0m0.088s 0m0.063s)
1213. set of 1 or more reals - Python3 (ovsdb-types.at:127): ok     (0m0.066s 0m0.025s)
1214. set max cannot be less than min - C (ovsdb-types.at:131): ok     (0m0.002s 0m0.006s)
1215. set max cannot be less than min - Python2 (ovsdb-types.at:131): skipped (ovsdb-types.at:131)
1216. set max cannot be negative - C (ovsdb-types.at:134): ok     (0m0.002s 0m0.007s)
1217. set max cannot be negative - Python2 (ovsdb-types.at:134): skipped (ovsdb-types.at:134)
1218. set min cannot be negative - C (ovsdb-types.at:137): ok     (0m0.001s 0m0.007s)
1219. set min cannot be negative - Python2 (ovsdb-types.at:137): skipped (ovsdb-types.at:137)
1220. set min cannot be greater than one - C (ovsdb-types.at:140): ok     (0m0.001s 0m0.007s)
1221. set min cannot be greater than one - Python2 (ovsdb-types.at:140): skipped (ovsdb-types.at:140)
1222. map of 1 integer to boolean - C (ovsdb-types.at:146): ok     (0m0.000s 0m0.005s)
1223. map of 1 integer to boolean - Python2 (ovsdb-types.at:146): ok     (0m0.050s 0m0.034s)
1224. map of 1 integer to boolean - Python3 (ovsdb-types.at:146): ok     (0m0.100s 0m0.043s)
1225. map of 1 boolean to integer, explicit min and max - C (ovsdb-types.at:149): ok     (0m0.002s 0m0.004s)
1226. map of 1 boolean to integer, explicit min and max - Python2 (ovsdb-types.at:149): ok     (0m0.100s 0m0.044s)
1227. map of 1 boolean to integer, explicit min and max - Python3 (ovsdb-types.at:149): ok     (0m0.031s 0m0.060s)
1228. map of 1 to 5 uuid to real - C (ovsdb-types.at:152): ok     (0m0.003s 0m0.004s)
1229. map of 1 to 5 uuid to real - Python2 (ovsdb-types.at:152): ok     (0m0.096s 0m0.031s)
1230. map of 1 to 5 uuid to real - Python3 (ovsdb-types.at:152): ok     (0m0.058s 0m0.045s)
1231. map of 0 to 10 string to uuid - C (ovsdb-types.at:155): ok     (0m0.001s 0m0.005s)
1232. map of 0 to 10 string to uuid - Python2 (ovsdb-types.at:155): ok     (0m0.072s 0m0.016s)
1233. map of 0 to 10 string to uuid - Python3 (ovsdb-types.at:155): ok     (0m0.070s 0m0.035s)
1234. map of 1 to 20 real to string - C (ovsdb-types.at:158): ok     (0m0.001s 0m0.003s)
1235. map of 1 to 20 real to string - Python2 (ovsdb-types.at:158): ok     (0m0.060s 0m0.028s)
1236. map of 1 to 20 real to string - Python3 (ovsdb-types.at:158): ok     (0m0.053s 0m0.031s)
1237. map of 0 or more string to real - C (ovsdb-types.at:161): ok     (0m0.000s 0m0.005s)
1238. map of 0 or more string to real - Python2 (ovsdb-types.at:161): ok     (0m0.058s 0m0.025s)
1239. map of 0 or more string to real - Python3 (ovsdb-types.at:161): ok     (0m0.075s 0m0.036s)
1240. map key type is required - C (ovsdb-types.at:165): ok     (0m0.000s 0m0.010s)
1241. map key type is required - Python2 (ovsdb-types.at:165): skipped (ovsdb-types.at:165)
1242. default atoms - C (ovsdb-data.at:3): ok     (0m0.000s 0m0.005s)
1243. default atoms - Python2 (ovsdb-data.at:3): ok     (0m0.075s 0m0.040s)
1244. default atoms - Python3 (ovsdb-data.at:3): ok     (0m0.080s 0m0.043s)
1245. default data - C (ovsdb-data.at:11): ok     (0m0.000s 0m0.006s)
1246. default data - Python2 (ovsdb-data.at:11): ok     (0m0.055s 0m0.030s)
1247. default data - Python3 (ovsdb-data.at:11): ok     (0m0.098s 0m0.066s)
1248. integer atom from JSON - C (ovsdb-data.at:76): ok     (0m0.000s 0m0.008s)
1249. integer atom from JSON - Python2 (ovsdb-data.at:76): ok     (0m0.070s 0m0.019s)
1250. integer atom from JSON - Python3 (ovsdb-data.at:76): ok     (0m0.064s 0m0.047s)
1251. integer atom from string (ovsdb-data.at:89): ok     (0m0.000s 0m0.005s)
1252. real atom from JSON - C (ovsdb-data.at:102): ok     (0m0.001s 0m0.004s)
1253. real atom from JSON - Python2 (ovsdb-data.at:102): ok     (0m0.044s 0m0.039s)
1254. real atom from JSON - Python3 (ovsdb-data.at:102): ok     (0m0.033s 0m0.056s)
1255. real atom from string (ovsdb-data.at:119): ok     (0m0.003s 0m0.004s)
1256. boolean atom from JSON - C (ovsdb-data.at:136): ok     (0m0.000s 0m0.005s)
1257. boolean atom from JSON - Python2 (ovsdb-data.at:136): ok     (0m0.057s 0m0.045s)
1258. boolean atom from JSON - Python3 (ovsdb-data.at:136): ok     (0m0.069s 0m0.028s)
1259. boolean atom from string (ovsdb-data.at:141): ok     (0m0.000s 0m0.006s)
1260. string atom from JSON - C (ovsdb-data.at:146): ok     (0m0.002s 0m0.004s)
1261. string atom from JSON - Python2 (ovsdb-data.at:146): ok     (0m0.049s 0m0.039s)
1262. string atom from JSON - Python3 (ovsdb-data.at:146): ok     (0m0.083s 0m0.034s)
1263. string atom from string (ovsdb-data.at:152): ok     (0m0.001s 0m0.004s)
1264. uuid atom from JSON - C (ovsdb-data.at:167): ok     (0m0.000s 0m0.005s)
1265. uuid atom from JSON - Python2 (ovsdb-data.at:167): ok     (0m0.090s 0m0.040s)
1266. uuid atom from JSON - Python3 (ovsdb-data.at:167): ok     (0m0.088s 0m0.023s)
1267. uuid atom from string (ovsdb-data.at:171): ok     (0m0.001s 0m0.004s)
1268. integer atom sorting - C (ovsdb-data.at:175): ok     (0m0.000s 0m0.006s)
1269. integer atom sorting - Python2 (ovsdb-data.at:175): ok     (0m0.051s 0m0.048s)
1270. integer atom sorting - Python3 (ovsdb-data.at:175): ok     (0m0.095s 0m0.041s)
1271. real atom sorting - C (ovsdb-data.at:179): ok     (0m0.000s 0m0.005s)
1272. real atom sorting - Python2 (ovsdb-data.at:179): ok     (0m0.056s 0m0.028s)
1273. real atom sorting - Python3 (ovsdb-data.at:179): ok     (0m0.046s 0m0.038s)
1274. boolean atom sorting - C (ovsdb-data.at:183): ok     (0m0.002s 0m0.003s)
1275. boolean atom sorting - Python2 (ovsdb-data.at:183): ok     (0m0.075s 0m0.033s)
1276. boolean atom sorting - Python3 (ovsdb-data.at:183): ok     (0m0.085s 0m0.049s)
1277. string atom sorting - C (ovsdb-data.at:187): ok     (0m0.002s 0m0.005s)
1278. string atom sorting - Python2 (ovsdb-data.at:187): ok     (0m0.043s 0m0.050s)
1279. string atom sorting - Python3 (ovsdb-data.at:187): ok     (0m0.035s 0m0.054s)
1280. uuid atom sorting - C (ovsdb-data.at:191): ok     (0m0.002s 0m0.003s)
1281. uuid atom sorting - Python2 (ovsdb-data.at:191): ok     (0m0.034s 0m0.053s)
1282. uuid atom sorting - Python3 (ovsdb-data.at:191): ok     (0m0.121s 0m0.046s)
1283. real not acceptable integer JSON atom - C (ovsdb-data.at:228): ok     (0m0.003s 0m0.003s)
1284. real not acceptable integer JSON atom - Python2 (ovsdb-data.at:228): ok     (0m0.046s 0m0.039s)
1285. real not acceptable integer JSON atom - Python3 (ovsdb-data.at:228): ok     (0m0.040s 0m0.070s)
1286. no invalid UTF-8 sequences in strings (ovsdb-data.at:234): ok     (0m0.000s 0m0.006s)
1287. no invalid UTF-8 sequences in strings - Python (ovsdb-data.at:249): ok     (0m0.094s 0m0.018s)
1288. real not acceptable integer string atom (ovsdb-data.at:257): ok     (0m0.002s 0m0.007s)
1289. string "true" not acceptable boolean JSON atom - C (ovsdb-data.at:261): ok     (0m0.000s 0m0.006s)
1290. string "true" not acceptable boolean JSON atom - Python2 (ovsdb-data.at:261): ok     (0m0.046s 0m0.037s)
1291. string "true" not acceptable boolean JSON atom - Python3 (ovsdb-data.at:261): ok     (0m0.065s 0m0.022s)
1292. string "true" not acceptable boolean string atom (ovsdb-data.at:265): ok     (0m0.003s 0m0.012s)
1293. integer not acceptable string JSON atom - C (ovsdb-data.at:269): ok     (0m0.000s 0m0.005s)
1294. integer not acceptable string JSON atom - Python2 (ovsdb-data.at:269): ok     (0m0.057s 0m0.036s)
1295. integer not acceptable string JSON atom - Python3 (ovsdb-data.at:269): ok     (0m0.085s 0m0.037s)
1296. uuid atom must be expressed as JSON array - C (ovsdb-data.at:273): ok     (0m0.000s 0m0.007s)
1297. uuid atom must be expressed as JSON array - Python2 (ovsdb-data.at:273): ok     (0m0.079s 0m0.053s)
1298. uuid atom must be expressed as JSON array - Python3 (ovsdb-data.at:273): ok     (0m0.060s 0m0.041s)
1299. named-uuid requires symbol table - C (ovsdb-data.at:277): ok     (0m0.000s 0m0.005s)
1300. named-uuid requires symbol table - Python2 (ovsdb-data.at:277): ok     (0m0.050s 0m0.036s)
1301. named-uuid requires symbol table - Python3 (ovsdb-data.at:277): ok     (0m0.063s 0m0.028s)
1302. empty string atom must be quoted (ovsdb-data.at:281): ok     (0m0.001s 0m0.008s)
1303. quotes must be balanced (ovsdb-data.at:285): ok     (0m0.000s 0m0.009s)
1304. quoted string must not contain unescaped quote (ovsdb-data.at:289): ok     (0m0.003s 0m0.010s)
1305. quoted string must not end with backslash (ovsdb-data.at:293): ok     (0m0.003s 0m0.007s)
1306. uuids must be valid (ovsdb-data.at:297): ok     (0m0.002s 0m0.007s)
1307. integer atom enum - C (ovsdb-data.at:303): ok     (0m0.000s 0m0.005s)
1308. integer atom enum - Python2 (ovsdb-data.at:303): ok     (0m0.052s 0m0.041s)
1309. integer atom enum - Python3 (ovsdb-data.at:303): ok     (0m0.070s 0m0.019s)
1310. real atom enum - C (ovsdb-data.at:326): ok     (0m0.000s 0m0.005s)
1311. real atom enum - Python2 (ovsdb-data.at:326): ok     (0m0.070s 0m0.039s)
1312. real atom enum - Python3 (ovsdb-data.at:326): ok     (0m0.080s 0m0.035s)
1313. boolean atom enum - C (ovsdb-data.at:343): ok     (0m0.001s 0m0.005s)
1314. boolean atom enum - Python2 (ovsdb-data.at:343): ok     (0m0.080s 0m0.036s)
1315. boolean atom enum - Python3 (ovsdb-data.at:343): ok     (0m0.034s 0m0.055s)
1316. string atom enum - C (ovsdb-data.at:350): ok     (0m0.001s 0m0.004s)
1317. string atom enum - Python2 (ovsdb-data.at:350): ok     (0m0.058s 0m0.027s)
1318. string atom enum - Python3 (ovsdb-data.at:350): ok     (0m0.085s 0m0.025s)
1319. uuid atom enum - C (ovsdb-data.at:365): ok     (0m0.002s 0m0.004s)
1320. uuid atom enum - Python2 (ovsdb-data.at:365): ok     (0m0.063s 0m0.024s)
1321. uuid atom enum - Python3 (ovsdb-data.at:365): ok     (0m0.059s 0m0.027s)
1322. integers >= 5 - C (ovsdb-data.at:376): ok     (0m0.000s 0m0.005s)
1323. integers >= 5 - Python2 (ovsdb-data.at:376): ok     (0m0.063s 0m0.022s)
1324. integers >= 5 - Python3 (ovsdb-data.at:376): ok     (0m0.052s 0m0.036s)
1325. integers <= -1 - C (ovsdb-data.at:389): ok     (0m0.000s 0m0.005s)
1326. integers <= -1 - Python2 (ovsdb-data.at:389): ok     (0m0.029s 0m0.055s)
1327. integers <= -1 - Python3 (ovsdb-data.at:389): ok     (0m0.091s 0m0.015s)
1328. integers in range -10 to 10 - C (ovsdb-data.at:400): ok     (0m0.000s 0m0.008s)
1329. integers in range -10 to 10 - Python2 (ovsdb-data.at:400): ok     (0m0.106s 0m0.066s)
1330. integers in range -10 to 10 - Python3 (ovsdb-data.at:400): ok     (0m0.073s 0m0.030s)
1331. reals >= 5 - C (ovsdb-data.at:421): ok     (0m0.002s 0m0.004s)
1332. reals >= 5 - Python2 (ovsdb-data.at:421): ok     (0m0.053s 0m0.034s)
1333. reals >= 5 - Python3 (ovsdb-data.at:421): ok     (0m0.049s 0m0.049s)
1334. reals <= -1 - C (ovsdb-data.at:434): ok     (0m0.003s 0m0.004s)
1335. reals <= -1 - Python2 (ovsdb-data.at:434): ok     (0m0.101s 0m0.034s)
1336. reals <= -1 - Python3 (ovsdb-data.at:434): ok     (0m0.047s 0m0.044s)
1337. reals in range -10 to 10 - C (ovsdb-data.at:445): ok     (0m0.002s 0m0.003s)
1338. reals in range -10 to 10 - Python2 (ovsdb-data.at:445): ok     (0m0.064s 0m0.023s)
1339. reals in range -10 to 10 - Python3 (ovsdb-data.at:445): ok     (0m0.116s 0m0.039s)
1340. strings at least 2 characters long - C (ovsdb-data.at:466): ok     (0m0.000s 0m0.006s)
1341. strings at least 2 characters long - Python2 (ovsdb-data.at:466): ok     (0m0.069s 0m0.030s)
1342. strings at least 2 characters long - Python3 (ovsdb-data.at:466): ok     (0m0.049s 0m0.033s)
1343. strings no more than 2 characters long - C (ovsdb-data.at:484): ok     (0m0.002s 0m0.005s)
1344. strings no more than 2 characters long - Python2 (ovsdb-data.at:484): ok     (0m0.091s 0m0.051s)
1345. strings no more than 2 characters long - Python3 (ovsdb-data.at:484): ok     (0m0.055s 0m0.039s)
1346. integer JSON datum - C (ovsdb-data.at:499): ok     (0m0.000s 0m0.005s)
1347. integer JSON datum - Python2 (ovsdb-data.at:499): ok     (0m0.075s 0m0.022s)
1348. integer JSON datum - Python3 (ovsdb-data.at:499): ok     (0m0.041s 0m0.051s)
1349. integer string datum (ovsdb-data.at:505): ok     (0m0.000s 0m0.006s)
1350. real JSON datum - C (ovsdb-data.at:512): ok     (0m0.002s 0m0.003s)
1351. real JSON datum - Python2 (ovsdb-data.at:512): ok     (0m0.058s 0m0.026s)
1352. real JSON datum - Python3 (ovsdb-data.at:512): ok     (0m0.051s 0m0.033s)
1353. real string datum (ovsdb-data.at:518): ok     (0m0.000s 0m0.007s)
1354. boolean JSON datum - C (ovsdb-data.at:524): ok     (0m0.000s 0m0.005s)
1355. boolean JSON datum - Python2 (ovsdb-data.at:524): ok     (0m0.034s 0m0.050s)
1356. boolean JSON datum - Python3 (ovsdb-data.at:524): ok     (0m0.072s 0m0.018s)
1357. boolean string datum (ovsdb-data.at:529): ok     (0m0.000s 0m0.005s)
1358. string JSON datum - C (ovsdb-data.at:534): ok     (0m0.000s 0m0.005s)
1359. string JSON datum - Python2 (ovsdb-data.at:534): ok     (0m0.094s 0m0.022s)
1360. string JSON datum - Python3 (ovsdb-data.at:534): ok     (0m0.023s 0m0.062s)
1361. string string datum (ovsdb-data.at:540): ok     (0m0.000s 0m0.006s)
1362. JSON optional boolean - C (ovsdb-data.at:549): ok     (0m0.000s 0m0.008s)
1363. JSON optional boolean - Python2 (ovsdb-data.at:549): ok     (0m0.053s 0m0.033s)
1364. JSON optional boolean - Python3 (ovsdb-data.at:549): ok     (0m0.095s 0m0.053s)
1365. string optional boolean (ovsdb-data.at:559): ok     (0m0.000s 0m0.006s)
1366. JSON set of 0 or more integers - C (ovsdb-data.at:569): ok     (0m0.000s 0m0.006s)
1367. JSON set of 0 or more integers - Python2 (ovsdb-data.at:569): ok     (0m0.055s 0m0.057s)
1368. JSON set of 0 or more integers - Python3 (ovsdb-data.at:569): ok     (0m0.067s 0m0.043s)
1369. string set of 0 or more integers (ovsdb-data.at:586): ok     (0m0.000s 0m0.005s)
1370. JSON set of 1 to 3 uuids - C (ovsdb-data.at:601): ok     (0m0.000s 0m0.005s)
1371. JSON set of 1 to 3 uuids - Python2 (ovsdb-data.at:601): ok     (0m0.097s 0m0.027s)
1372. JSON set of 1 to 3 uuids - Python3 (ovsdb-data.at:601): ok     (0m0.121s 0m0.013s)
1373. string set of 1 to 3 uuids (ovsdb-data.at:612): ok     (0m0.000s 0m0.008s)
1374. JSON set of 0 to 3 strings - C (ovsdb-data.at:621): ok     (0m0.000s 0m0.006s)
1375. JSON set of 0 to 3 strings - Python2 (ovsdb-data.at:621): ok     (0m0.127s 0m0.023s)
1376. JSON set of 0 to 3 strings - Python3 (ovsdb-data.at:621): ok     (0m0.091s 0m0.051s)
1377. string set of 0 to 3 strings (ovsdb-data.at:634): ok     (0m0.001s 0m0.007s)
1378. duplicate boolean not allowed in JSON set - C (ovsdb-data.at:645): ok     (0m0.002s 0m0.008s)
1379. duplicate boolean not allowed in JSON set - Python2 (ovsdb-data.at:645): skipped (ovsdb-data.at:645)
1380. duplicate boolean not allowed in string set (ovsdb-data.at:649): ok     (0m0.002s 0m0.006s)
1381. duplicate integer not allowed in JSON set - C (ovsdb-data.at:653): ok     (0m0.001s 0m0.007s)
1382. duplicate integer not allowed in JSON set - Python2 (ovsdb-data.at:653): skipped (ovsdb-data.at:653)
1383. duplicate integer not allowed in string set (ovsdb-data.at:657): ok     (0m0.000s 0m0.008s)
1384. duplicate real not allowed in JSON set - C (ovsdb-data.at:661): ok     (0m0.001s 0m0.006s)
1385. duplicate real not allowed in JSON set - Python2 (ovsdb-data.at:661): skipped (ovsdb-data.at:661)
1386. duplicate real not allowed in string set (ovsdb-data.at:665): ok     (0m0.002s 0m0.006s)
1387. duplicate string not allowed in JSON set - C (ovsdb-data.at:669): ok     (0m0.002s 0m0.006s)
1388. duplicate string not allowed in JSON set - Python2 (ovsdb-data.at:669): skipped (ovsdb-data.at:669)
1389. duplicate string not allowed in string set (ovsdb-data.at:673): ok     (0m0.000s 0m0.008s)
1390. duplicate uuid not allowed in JSON set - C (ovsdb-data.at:677): ok     (0m0.000s 0m0.009s)
1391. duplicate uuid not allowed in JSON set - Python2 (ovsdb-data.at:677): skipped (ovsdb-data.at:677)
1392. duplicate uuid not allowed in string set (ovsdb-data.at:684): ok     (0m0.002s 0m0.007s)
1393. JSON map of 1 integer to boolean - C (ovsdb-data.at:693): ok     (0m0.002s 0m0.005s)
1394. JSON map of 1 integer to boolean - Python2 (ovsdb-data.at:693): ok     (0m0.070s 0m0.018s)
1395. JSON map of 1 integer to boolean - Python3 (ovsdb-data.at:693): ok     (0m0.043s 0m0.044s)
1396. string map of 1 integer to boolean (ovsdb-data.at:698): ok     (0m0.000s 0m0.005s)
1397. JSON map of at least 1 integer to boolean - C (ovsdb-data.at:703): ok     (0m0.000s 0m0.005s)
1398. JSON map of at least 1 integer to boolean - Python2 (ovsdb-data.at:703): ok     (0m0.063s 0m0.022s)
1399. JSON map of at least 1 integer to boolean - Python3 (ovsdb-data.at:703): ok     (0m0.068s 0m0.025s)
1400. string map of at least 1 integer to boolean (ovsdb-data.at:712): ok     (0m0.000s 0m0.005s)
1401. JSON map of 1 boolean to integer - C (ovsdb-data.at:721): ok     (0m0.000s 0m0.005s)
1402. JSON map of 1 boolean to integer - Python2 (ovsdb-data.at:721): ok     (0m0.058s 0m0.029s)
1403. JSON map of 1 boolean to integer - Python3 (ovsdb-data.at:721): ok     (0m0.049s 0m0.041s)
1404. string map of 1 boolean to integer (ovsdb-data.at:726): ok     (0m0.001s 0m0.005s)
1405. JSON map of 1 uuid to real - C (ovsdb-data.at:731): ok     (0m0.002s 0m0.003s)
1406. JSON map of 1 uuid to real - Python2 (ovsdb-data.at:731): ok     (0m0.093s 0m0.018s)
1407. JSON map of 1 uuid to real - Python3 (ovsdb-data.at:731): ok     (0m0.046s 0m0.042s)
1408. string map of 1 uuid to real (ovsdb-data.at:740): ok     (0m0.000s 0m0.005s)
1409. JSON map of 10 string to string - C (ovsdb-data.at:749): ok     (0m0.000s 0m0.005s)
1410. JSON map of 10 string to string - Python2 (ovsdb-data.at:749): ok     (0m0.040s 0m0.045s)
1411. JSON map of 10 string to string - Python3 (ovsdb-data.at:749): ok     (0m0.072s 0m0.037s)
1412. string map of 10 string to string (ovsdb-data.at:763): ok     (0m0.003s 0m0.003s)
1413. duplicate integer key not allowed in JSON map - C (ovsdb-data.at:777): ok     (0m0.000s 0m0.008s)
1414. duplicate integer key not allowed in JSON map - Python2 (ovsdb-data.at:777): skipped (ovsdb-data.at:777)
1415. duplicate integer key not allowed in string map (ovsdb-data.at:782): ok     (0m0.000s 0m0.009s)
1416. generate and apply diff -- integer (ovsdb-data.at:787): ok     (0m0.000s 0m0.005s)
1417. generate and apply diff -- boolean (ovsdb-data.at:793): ok     (0m0.000s 0m0.005s)
1418. generate and apply diff -- string (ovsdb-data.at:799): ok     (0m0.003s 0m0.003s)
1419. generate and apply diff -- set (ovsdb-data.at:806): ok     (0m0.000s 0m0.005s)
1420. generate and apply diff -- set -- size error (ovsdb-data.at:827): ok     (0m0.000s 0m0.010s)
1421. generate and apply diff -- map (ovsdb-data.at:833): ok     (0m0.000s 0m0.005s)
1422. generate and apply diff with map -- size error (ovsdb-data.at:857): ok     (0m0.000s 0m0.008s)
1423. ordinary column - C (ovsdb-column.at:3): ok     (0m0.000s 0m0.005s)
1424. ordinary column - Python2 (ovsdb-column.at:3): ok     (0m0.063s 0m0.026s)
1425. ordinary column - Python3 (ovsdb-column.at:3): ok     (0m0.069s 0m0.039s)
1426. immutable column - C (ovsdb-column.at:7): ok     (0m0.001s 0m0.004s)
1427. immutable column - Python2 (ovsdb-column.at:7): ok     (0m0.064s 0m0.020s)
1428. immutable column - Python3 (ovsdb-column.at:7): ok     (0m0.063s 0m0.022s)
1429. ephemeral column - C (ovsdb-column.at:11): ok     (0m0.003s 0m0.003s)
1430. ephemeral column - Python2 (ovsdb-column.at:11): ok     (0m0.068s 0m0.019s)
1431. ephemeral column - Python3 (ovsdb-column.at:11): ok     (0m0.069s 0m0.018s)
1432. non-root table with one column - C (ovsdb-table.at:3): ok     (0m0.000s 0m0.007s)
1433. non-root table with one column - Python2 (ovsdb-table.at:3): ok     (0m0.083s 0m0.018s)
1434. non-root table with one column - Python3 (ovsdb-table.at:3): ok     (0m0.062s 0m0.024s)
1435. immutable table with one column - C (ovsdb-table.at:7): ok     (0m0.000s 0m0.006s)
1436. immutable table with one column - Python2 (ovsdb-table.at:7): ok     (0m0.109s 0m0.035s)
1437. immutable table with one column - Python3 (ovsdb-table.at:7): ok     (0m0.061s 0m0.024s)
1438. root table with one column - C (ovsdb-table.at:13): ok     (0m0.002s 0m0.004s)
1439. root table with one column - Python2 (ovsdb-table.at:13): ok     (0m0.095s 0m0.035s)
1440. root table with one column - Python3 (ovsdb-table.at:13): ok     (0m0.067s 0m0.017s)
1441. non-root table with default_is_root=true - C (ovsdb-table.at:19): ok     (0m0.000s 0m0.005s)
1442. non-root table with default_is_root=true - Python2 (ovsdb-table.at:19): ok     (0m0.063s 0m0.026s)
1443. non-root table with default_is_root=true - Python3 (ovsdb-table.at:19): ok     (0m0.045s 0m0.047s)
1444. root table with default_is_root=true - C (ovsdb-table.at:23): ok     (0m0.000s 0m0.005s)
1445. root table with default_is_root=true - Python2 (ovsdb-table.at:23): ok     (0m0.120s 0m0.039s)
1446. root table with default_is_root=true - Python3 (ovsdb-table.at:23): ok     (0m0.057s 0m0.033s)
1447. table with maxRows of 2 - C (ovsdb-table.at:29): ok     (0m0.000s 0m0.005s)
1448. table with maxRows of 2 - Python2 (ovsdb-table.at:29): ok     (0m0.060s 0m0.027s)
1449. table with maxRows of 2 - Python3 (ovsdb-table.at:29): ok     (0m0.051s 0m0.036s)
1450. table with index - C (ovsdb-table.at:34): ok     (0m0.000s 0m0.005s)
1451. table with index - Python2 (ovsdb-table.at:34): ok     (0m0.069s 0m0.034s)
1452. table with index - Python3 (ovsdb-table.at:34): ok     (0m0.036s 0m0.049s)
1453. table with syntax error in index - C (ovsdb-table.at:40): ok     (0m0.000s 0m0.008s)
1454. table with syntax error in index - Python2 (ovsdb-table.at:40): skipped (ovsdb-table.at:40)
1455. table with empty index - C (ovsdb-table.at:46): ok     (0m0.002s 0m0.006s)
1456. table with empty index - Python2 (ovsdb-table.at:46): skipped (ovsdb-table.at:46)
1457. table with index of ephemeral column - C (ovsdb-table.at:52): ok     (0m0.000s 0m0.008s)
1458. table with index of ephemeral column - Python2 (ovsdb-table.at:52): skipped (ovsdb-table.at:52)
1459. column names may not begin with _ - C (ovsdb-table.at:59): ok     (0m0.000s 0m0.008s)
1460. column names may not begin with _ - Python2 (ovsdb-table.at:59): skipped (ovsdb-table.at:59)
1461. table must have at least one column (1) - C (ovsdb-table.at:65): ok     (0m0.000s 0m0.011s)
1462. table must have at least one column (1) - Python2 (ovsdb-table.at:65): skipped (ovsdb-table.at:65)
1463. table must have at least one column (2) - C (ovsdb-table.at:69): ok     (0m0.000s 0m0.010s)
1464. table must have at least one column (2) - Python2 (ovsdb-table.at:69): skipped (ovsdb-table.at:69)
1465. table maxRows must be positive - C (ovsdb-table.at:73): ok     (0m0.001s 0m0.008s)
1466. table maxRows must be positive - Python2 (ovsdb-table.at:73): skipped (ovsdb-table.at:73)
1467. row with one string column (ovsdb-row.at:3): ok     (0m0.001s 0m0.004s)
1468. row with one integer column (ovsdb-row.at:19): ok     (0m0.001s 0m0.004s)
1469. row with one real column (ovsdb-row.at:35): ok     (0m0.000s 0m0.006s)
1470. row with one boolean column (ovsdb-row.at:51): ok     (0m0.000s 0m0.006s)
1471. row with one uuid column (ovsdb-row.at:64): ok     (0m0.000s 0m0.005s)
1472. row with set of 1 to 2 elements (ovsdb-row.at:77): ok     (0m0.000s 0m0.005s)
1473. row with map of 1 to 2 elements (ovsdb-row.at:84): ok     (0m0.003s 0m0.003s)
1474. row with several columns (ovsdb-row.at:91): ok     (0m0.000s 0m0.005s)
1475. row hashing (scalars) (ovsdb-row.at:113): ok     (0m0.000s 0m0.007s)
1476. row hashing (sets) (ovsdb-row.at:182): ok     (0m0.002s 0m0.004s)
1477. row hashing (maps) (ovsdb-row.at:235): ok     (0m0.001s 0m0.004s)
1478. schema with valid refTables - C (ovsdb-schema.at:3): ok     (0m0.000s 0m0.005s)
1479. schema with valid refTables - Python2 (ovsdb-schema.at:3): ok     (0m0.036s 0m0.051s)
1480. schema with valid refTables - Python3 (ovsdb-schema.at:3): ok     (0m0.047s 0m0.042s)
1481. schema with ephemeral strong references - C (ovsdb-schema.at:30): ok     (0m0.000s 0m0.005s)
1482. schema with ephemeral strong references - Python2 (ovsdb-schema.at:30): ok     (0m0.058s 0m0.027s)
1483. schema with ephemeral strong references - Python3 (ovsdb-schema.at:30): ok     (0m0.080s 0m0.030s)
1484. schema without version number - C (ovsdb-schema.at:61): ok     (0m0.000s 0m0.006s)
1485. schema without version number - Python2 (ovsdb-schema.at:61): ok     (0m0.119s 0m0.023s)
1486. schema without version number - Python3 (ovsdb-schema.at:61): ok     (0m0.053s 0m0.032s)
1487. schema with invalid refTables - C (ovsdb-schema.at:71): ok     (0m0.000s 0m0.008s)
1488. schema with invalid refTables - Python2 (ovsdb-schema.at:71): skipped (ovsdb-schema.at:71)
1489. schema with invalid version number - C (ovsdb-schema.at:94): ok     (0m0.000s 0m0.012s)
1490. schema with invalid version number - Python2 (ovsdb-schema.at:94): skipped (ovsdb-schema.at:94)
1491. null condition (ovsdb-condition.at:3): ok     (0m0.000s 0m0.006s)
1492. conditions on scalars (ovsdb-condition.at:9): ok     (0m0.000s 0m0.005s)
1493. disallowed conditions on scalars (ovsdb-condition.at:75): ok     (0m0.000s 0m0.005s)
1494. conditions on sets (ovsdb-condition.at:112): ok     (0m0.001s 0m0.006s)
1495. condition sorting (ovsdb-condition.at:173): ok     (0m0.000s 0m0.005s)
1496. evaluating null condition (ovsdb-condition.at:187): ok     (0m0.000s 0m0.006s)
1497. evaluating conditions on integers (ovsdb-condition.at:196): ok     (0m0.000s 0m0.005s)
1498. evaluating conditions on reals (ovsdb-condition.at:221): ok     (0m0.000s 0m0.005s)
1499. evaluating conditions on booleans (ovsdb-condition.at:246): ok     (0m0.002s 0m0.004s)
1500. evaluating conditions on strings (ovsdb-condition.at:270): ok     (0m0.000s 0m0.005s)
1501. evaluating conditions on UUIDs (ovsdb-condition.at:295): ok     (0m0.001s 0m0.003s)
1502. evaluating conditions on sets (ovsdb-condition.at:321): ok     (0m0.000s 0m0.005s)
1503. evaluating conditions on maps (1) (ovsdb-condition.at:403): ok     (0m0.000s 0m0.006s)
1504. evaluating conditions on maps (2) (ovsdb-condition.at:488): ok     (0m0.003s 0m0.003s)
1505. evaluating conditions on optional integers (ovsdb-condition.at:580): ok     (0m0.000s 0m0.005s)
1506. evaluating conditions on optional strings (ovsdb-condition.at:607): ok     (0m0.000s 0m0.005s)
1507. evaluating conditions on optional reals (ovsdb-condition.at:634): ok     (0m0.000s 0m0.005s)
1508. null mutation (ovsdb-mutation.at:3): ok     (0m0.000s 0m0.007s)
1509. mutations on scalars (ovsdb-mutation.at:9): ok     (0m0.000s 0m0.006s)
1510. disallowed mutations on scalars (ovsdb-mutation.at:37): ok     (0m0.002s 0m0.004s)
1511. disallowed mutations on immutable columns (ovsdb-mutation.at:102): ok     (0m0.000s 0m0.006s)
1512. mutations on sets (ovsdb-mutation.at:114): ok     (0m0.000s 0m0.006s)
1513. executing null mutation (ovsdb-mutation.at:166): ok     (0m0.002s 0m0.003s)
1514. executing mutations on integers (ovsdb-mutation.at:179): ok     (0m0.000s 0m0.005s)
1515. integer overflow detection (ovsdb-mutation.at:216): ok     (0m0.000s 0m0.005s)
1516. executing mutations on integers with constraints (ovsdb-mutation.at:297): ok     (0m0.002s 0m0.004s)
1517. executing mutations on reals (ovsdb-mutation.at:336): ok     (0m0.000s 0m0.005s)
1518. real overflow detection (ovsdb-mutation.at:367): ok     (0m0.000s 0m0.006s)
1519. executing mutations on reals with constraints (ovsdb-mutation.at:410): ok     (0m0.000s 0m0.005s)
1520. executing mutations on integer sets (ovsdb-mutation.at:443): ok     (0m0.000s 0m0.007s)
1521. executing mutations on integer sets with constraints (ovsdb-mutation.at:517): ok     (0m0.000s 0m0.006s)
1522. executing mutations on real sets (ovsdb-mutation.at:556): ok     (0m0.000s 0m0.006s)
1523. executing mutations on boolean sets (ovsdb-mutation.at:629): ok     (0m0.003s 0m0.003s)
1524. executing mutations on string sets (ovsdb-mutation.at:679): ok     (0m0.000s 0m0.005s)
1525. executing mutations on uuid sets (ovsdb-mutation.at:729): ok     (0m0.000s 0m0.005s)
1526. executing mutations on integer maps (ovsdb-mutation.at:779): ok     (0m0.000s 0m0.005s)
1527. queries on scalars (ovsdb-query.at:3): ok     (0m0.000s 0m0.006s)
1528. queries on sets (ovsdb-query.at:95): ok     (0m0.000s 0m0.005s)
1529. queries on maps (1) (ovsdb-query.at:176): ok     (0m0.002s 0m0.003s)
1530. queries on maps (2) (ovsdb-query.at:260): ok     (0m0.000s 0m0.006s)
1531. UUID-distinct queries on scalars (ovsdb-query.at:351): ok     (0m0.000s 0m0.005s)
1532. Boolean-distinct queries on scalars (ovsdb-query.at:444): ok     (0m0.000s 0m0.005s)
1533. parse colunn set containing bad name (ovsdb-query.at:537): ok     (0m0.000s 0m0.009s)
1534. empty table, empty transaction (ovsdb-transaction.at:3): ok     (0m0.002s 0m0.004s)
1535. nonempty table, empty transaction (ovsdb-transaction.at:17): ok     (0m0.002s 0m0.004s)
1536. insert, commit (ovsdb-transaction.at:41): ok     (0m0.002s 0m0.004s)
1537. insert, abort (ovsdb-transaction.at:70): ok     (0m0.002s 0m0.004s)
1538. modify, commit (ovsdb-transaction.at:98): ok     (0m0.001s 0m0.003s)
1539. modify, abort (ovsdb-transaction.at:127): ok     (0m0.002s 0m0.004s)
1540. delete, commit (ovsdb-transaction.at:156): ok     (0m0.000s 0m0.006s)
1541. delete, abort (ovsdb-transaction.at:181): ok     (0m0.000s 0m0.006s)
1542. modify, delete, commit (ovsdb-transaction.at:207): ok     (0m0.002s 0m0.004s)
1543. modify, delete, abort (ovsdb-transaction.at:234): ok     (0m0.000s 0m0.006s)
1544. insert, delete, commit (ovsdb-transaction.at:262): ok     (0m0.000s 0m0.007s)
1545. insert, delete, abort (ovsdb-transaction.at:291): ok     (0m0.003s 0m0.002s)
1546. insert, modify, delete, commit (ovsdb-transaction.at:322): ok     (0m0.001s 0m0.004s)
1547. insert, modify, delete, abort (ovsdb-transaction.at:353): ok     (0m0.001s 0m0.004s)
1548. deletes are aborted cleanly (ovsdb-transaction.at:385): ok     (0m0.000s 0m0.006s)
1549. uuid-name must be <id> (ovsdb-execution.at:146): ok     (0m0.004s 0m0.013s)
1550. named-uuid must be <id> (ovsdb-execution.at:156): ok     (0m0.006s 0m0.010s)
1551. duplicate uuid-name not allowed (ovsdb-execution.at:165): ok     (0m0.000s 0m0.017s)
1552. insert default row, query table (ovsdb-execution.at:1101): ok     (0m0.004s 0m0.012s)
1553. insert row, query table (ovsdb-execution.at:1101): ok     (0m0.004s 0m0.011s)
1554. insert rows, query by value (ovsdb-execution.at:1101): ok     (0m0.002s 0m0.014s)
1555. insert rows, query by named-uuid (ovsdb-execution.at:1101): ok     (0m0.008s 0m0.008s)
1556. insert rows, update rows by value (ovsdb-execution.at:1101): ok     (0m0.005s 0m0.013s)
1557. insert rows, mutate rows (ovsdb-execution.at:1101): ok     (0m0.006s 0m0.011s)
1558. insert rows, delete by named-uuid (ovsdb-execution.at:1101): ok     (0m0.004s 0m0.012s)
1559. insert rows, delete rows by value (ovsdb-execution.at:1101): ok     (0m0.003s 0m0.013s)
1560. insert rows, delete by (non-matching) value (ovsdb-execution.at:1101): ok     (0m0.005s 0m0.013s)
1561. insert rows, delete all (ovsdb-execution.at:1101): ok     (0m0.005s 0m0.011s)
1562. insert row, query table, commit (ovsdb-execution.at:1101): ok     (0m0.007s 0m0.008s)
1563. insert row, query table, commit durably (ovsdb-execution.at:1101): ok     (0m0.002s 0m0.014s)
1564. equality wait with correct rows (ovsdb-execution.at:1101): ok     (0m0.004s 0m0.012s)
1565. equality wait with extra row (ovsdb-execution.at:1101): ok     (0m0.005s 0m0.012s)
1566. equality wait with missing row (ovsdb-execution.at:1101): ok     (0m0.006s 0m0.010s)
1567. inequality wait with correct rows (ovsdb-execution.at:1101): ok     (0m0.000s 0m0.015s)
1568. inequality wait with extra row (ovsdb-execution.at:1101): ok     (0m0.004s 0m0.012s)
1569. inequality wait with missing row (ovsdb-execution.at:1101): ok     (0m0.005s 0m0.014s)
1570. insert and update constraints (ovsdb-execution.at:1101): ok     (0m0.005s 0m0.013s)
1571. index uniqueness checking (ovsdb-execution.at:1101): ok     (0m0.009s 0m0.009s)
1572. referential integrity -- simple (ovsdb-execution.at:1101): ok     (0m0.000s 0m0.016s)
1573. referential integrity -- mutual references (ovsdb-execution.at:1101): ok     (0m0.007s 0m0.009s)
1574. weak references (ovsdb-execution.at:1101): ok     (0m0.007s 0m0.009s)
1575. immutable columns (ovsdb-execution.at:1101): ok     (0m0.005s 0m0.013s)
1576. garbage collection (ovsdb-execution.at:1101): ok     (0m0.008s 0m0.009s)
1577. trigger fires immediately (ovsdb-trigger.at:15): ok     (0m0.004s 0m0.011s)
1578. trigger times out (ovsdb-trigger.at:38): ok     (0m0.010s 0m0.019s)
1579. trigger fires after delay (ovsdb-trigger.at:61): ok     (0m0.008s 0m0.010s)
1580. delayed trigger modifies database (ovsdb-trigger.at:92): ok     (0m0.005s 0m0.014s)
1581. one delayed trigger wakes up another (ovsdb-trigger.at:132): ok     (0m0.005s 0m0.014s)
1582. insert default row, query table (ovsdb-tool.at:29): ok     (0m0.005s 0m0.020s)
1583. insert row, query table (ovsdb-tool.at:29): ok     (0m0.004s 0m0.021s)
1584. insert rows, query by value (ovsdb-tool.at:29): ok     (0m0.007s 0m0.038s)
1585. insert rows, query by named-uuid (ovsdb-tool.at:29): ok     (0m0.007s 0m0.012s)
1586. insert rows, update rows by value (ovsdb-tool.at:29): ok     (0m0.010s 0m0.029s)
1587. insert rows, mutate rows (ovsdb-tool.at:29): ok     (0m0.003s 0m0.033s)
1588. insert rows, delete by named-uuid (ovsdb-tool.at:29): ok     (0m0.005s 0m0.015s)
1589. insert rows, delete rows by value (ovsdb-tool.at:29): ok     (0m0.003s 0m0.032s)
1590. insert rows, delete by (non-matching) value (ovsdb-tool.at:29): ok     (0m0.002s 0m0.035s)
1591. insert rows, delete all (ovsdb-tool.at:29): ok     (0m0.006s 0m0.014s)
1592. insert row, query table, commit (ovsdb-tool.at:29): ok     (0m0.000s 0m0.019s)
1593. insert row, query table, commit durably (ovsdb-tool.at:29): ok     (0m0.006s 0m0.020s)
1594. equality wait with correct rows (ovsdb-tool.at:29): ok     (0m0.009s 0m0.016s)
1595. equality wait with extra row (ovsdb-tool.at:29): ok     (0m0.006s 0m0.013s)
1596. equality wait with missing row (ovsdb-tool.at:29): ok     (0m0.004s 0m0.014s)
1597. inequality wait with correct rows (ovsdb-tool.at:29): ok     (0m0.004s 0m0.014s)
1598. inequality wait with extra row (ovsdb-tool.at:29): ok     (0m0.005s 0m0.013s)
1599. inequality wait with missing row (ovsdb-tool.at:29): ok     (0m0.004s 0m0.014s)
1600. insert and update constraints (ovsdb-tool.at:29): ok     (0m0.011s 0m0.034s)
1601. index uniqueness checking (ovsdb-tool.at:29): ok     (0m0.007s 0m0.048s)
1602. referential integrity -- simple (ovsdb-tool.at:29): ok     (0m0.015s 0m0.050s)
1603. referential integrity -- mutual references (ovsdb-tool.at:29): ok     (0m0.008s 0m0.044s)
1604. weak references (ovsdb-tool.at:29): ok     (0m0.009s 0m0.091s)
1605. immutable columns (ovsdb-tool.at:29): ok     (0m0.006s 0m0.037s)
1606. garbage collection (ovsdb-tool.at:29): ok     (0m0.015s 0m0.098s)
1607. transaction comments (ovsdb-tool.at:31): ok     (0m0.009s 0m0.016s)
1608. ovsdb-tool compact (ovsdb-tool.at:49): ok     (0m0.032s 0m0.095s)
1609. ovsdb-tool convert -- removing a column (ovsdb-tool.at:156): ok     (0m0.018s 0m0.046s)
1610. ovsdb-tool convert -- adding a column (ovsdb-tool.at:223): ok     (0m0.021s 0m0.048s)
1611. ovsdb-tool schema-version (ovsdb-tool.at:289): ok     (0m0.005s 0m0.003s)
1612. ovsdb-tool db-version (ovsdb-tool.at:296): ok     (0m0.000s 0m0.012s)
1613. ovsdb-tool schema-cksum (ovsdb-tool.at:305): ok     (0m0.000s 0m0.006s)
1614. ovsdb-tool db-cksum (ovsdb-tool.at:312): ok     (0m0.000s 0m0.011s)
1615. ovsdb-tool needs-conversion (no conversion needed) (ovsdb-tool.at:321): ok     (0m0.000s 0m0.012s)
1616. ovsdb-tool needs-conversion (conversion needed) (ovsdb-tool.at:330): ok     (0m0.005s 0m0.011s)
1617. insert default row, query table (ovsdb-server.at:38): ok     (0m0.008s 0m0.030s)
1618. insert row, query table (ovsdb-server.at:38): ok     (0m0.005s 0m0.031s)
1619. insert rows, query by value (ovsdb-server.at:38): ok     (0m0.009s 0m0.039s)
1620. insert rows, query by named-uuid (ovsdb-server.at:38): ok     (0m0.008s 0m0.025s)
1621. insert rows, update rows by value (ovsdb-server.at:38): ok     (0m0.005s 0m0.043s)
1622. insert rows, mutate rows (ovsdb-server.at:38): ok     (0m0.010s 0m0.061s)
1623. insert rows, delete by named-uuid (ovsdb-server.at:38): ok     (0m0.014s 0m0.030s)
1624. insert rows, delete rows by value (ovsdb-server.at:38): ok     (0m0.004s 0m0.050s)
1625. insert rows, delete by (non-matching) value (ovsdb-server.at:38): ok     (0m0.008s 0m0.041s)
1626. insert rows, delete all (ovsdb-server.at:38): ok     (0m0.009s 0m0.035s)
1627. insert row, query table, commit (ovsdb-server.at:38): ok     (0m0.009s 0m0.028s)
1628. insert row, query table, commit durably (ovsdb-server.at:38): ok     (0m0.004s 0m0.027s)
1629. equality wait with correct rows (ovsdb-server.at:38): ok     (0m0.001s 0m0.031s)
1630. equality wait with extra row (ovsdb-server.at:38): ok     (0m0.003s 0m0.031s)
1631. equality wait with missing row (ovsdb-server.at:38): ok     (0m0.008s 0m0.039s)
1632. inequality wait with correct rows (ovsdb-server.at:38): ok     (0m0.003s 0m0.041s)
1633. inequality wait with extra row (ovsdb-server.at:38): ok     (0m0.005s 0m0.028s)
1634. inequality wait with missing row (ovsdb-server.at:38): ok     (0m0.012s 0m0.026s)
1635. insert and update constraints (ovsdb-server.at:38): ok     (0m0.017s 0m0.051s)
1636. index uniqueness checking (ovsdb-server.at:38): ok     (0m0.008s 0m0.075s)
1637. referential integrity -- simple (ovsdb-server.at:38): ok     (0m0.004s 0m0.073s)
1638. referential integrity -- mutual references (ovsdb-server.at:38): ok     (0m0.006s 0m0.063s)
1639. weak references (ovsdb-server.at:38): ok     (0m0.019s 0m0.094s)
1640. immutable columns (ovsdb-server.at:38): ok     (0m0.013s 0m0.071s)
1641. garbage collection (ovsdb-server.at:38): ok     (0m0.011s 0m0.113s)
1642. truncating corrupted database log (ovsdb-server.at:42): ok     (0m0.011s 0m0.044s)
1643. truncating database log with bad transaction (ovsdb-server.at:89): ok     (0m0.017s 0m0.039s)
1644. ovsdb-client get-schema-version (ovsdb-server.at:137): ok     (0m0.003s 0m0.021s)
1645. database multiplexing implementation (ovsdb-server.at:147): ok     (0m0.002s 0m0.032s)
1646. ovsdb-server/add-db and remove-db (ovsdb-server.at:166): ok     (0m0.014s 0m0.081s)
1647. ovsdb-server/add-db with --monitor (ovsdb-server.at:249): ok     (0m0.007s 0m0.035s)
1648. ovsdb-server/add-db and remove-db with --monitor (ovsdb-server.at:280): ok     (0m0.002s 0m0.042s)
1649. --remote=db: implementation (ovsdb-server.at:309): ok     (0m0.011s 0m0.026s)
1650. ovsdb-server/add-remote and remove-remote (ovsdb-server.at:372): ok     (0m0.004s 0m0.049s)
1651. ovsdb-server/add-remote with --monitor (ovsdb-server.at:424): ok     (0m0.003s 0m0.036s)
1652. ovsdb-server/add-remote and remove-remote with --monitor (ovsdb-server.at:453): ok     (0m0.003s 0m0.039s)
1653. SSL db: implementation (ovsdb-server.at:486): ok     (0m0.011s 0m0.037s)
1654. compacting online (ovsdb-server.at:542): ok     (0m0.029s 0m0.105s)
1655. ovsdb-server combines updates on backlogged connections (ovsdb-server.at:674): skipped (ovsdb-server.at:696)
1656. insert default row, query table (ovsdb-server.at:807): ok     (0m0.023s 0m0.044s)
1657. insert row, query table (ovsdb-server.at:807): ok     (0m0.029s 0m0.067s)
1658. insert rows, query by value (ovsdb-server.at:807): ok     (0m0.041s 0m0.056s)
1659. insert rows, query by named-uuid (ovsdb-server.at:807): ok     (0m0.010s 0m0.032s)
1660. insert rows, update rows by value (ovsdb-server.at:807): ok     (0m0.039s 0m0.046s)
1661. insert rows, mutate rows (ovsdb-server.at:807): ok     (0m0.030s 0m0.049s)
1662. insert rows, delete by named-uuid (ovsdb-server.at:807): ok     (0m0.012s 0m0.033s)
1663. insert rows, delete rows by value (ovsdb-server.at:807): ok     (0m0.031s 0m0.045s)
1664. insert rows, delete by (non-matching) value (ovsdb-server.at:807): ok     (0m0.029s 0m0.046s)
1665. insert rows, delete all (ovsdb-server.at:807): ok     (0m0.016s 0m0.026s)
1666. insert row, query table, commit (ovsdb-server.at:807): ok     (0m0.015s 0m0.028s)
1667. insert row, query table, commit durably (ovsdb-server.at:807): ok     (0m0.020s 0m0.035s)
1668. equality wait with correct rows (ovsdb-server.at:807): ok     (0m0.015s 0m0.056s)
1669. equality wait with extra row (ovsdb-server.at:807): ok     (0m0.020s 0m0.028s)
1670. equality wait with missing row (ovsdb-server.at:807): ok     (0m0.016s 0m0.037s)
1671. inequality wait with correct rows (ovsdb-server.at:807): ok     (0m0.014s 0m0.030s)
1672. inequality wait with extra row (ovsdb-server.at:807): ok     (0m0.015s 0m0.038s)
1673. inequality wait with missing row (ovsdb-server.at:807): ok     (0m0.010s 0m0.032s)
1674. insert and update constraints (ovsdb-server.at:807): ok     (0m0.061s 0m0.056s)
1675. index uniqueness checking (ovsdb-server.at:807): ok     (0m0.058s 0m0.075s)
1676. referential integrity -- simple (ovsdb-server.at:807): ok     (0m0.080s 0m0.117s)
1677. referential integrity -- mutual references (ovsdb-server.at:807): ok     (0m0.050s 0m0.079s)
1678. weak references (ovsdb-server.at:807): ok     (0m0.118s 0m0.136s)
1679. immutable columns (ovsdb-server.at:807): ok     (0m0.046s 0m0.059s)
1680. garbage collection (ovsdb-server.at:807): ok     (0m0.129s 0m0.093s)
1681. insert default row, query table (ovsdb-server.at:845): skipped (ovsdb-server.at:845)
1682. ovsdb-client get-schema-version - tcp socket (ovsdb-server.at:849): ok     (0m0.001s 0m0.027s)
1683. insert default row, query table (ovsdb-server.at:892): ok     (0m0.009s 0m0.033s)
1684. insert row, query table (ovsdb-server.at:892): ok     (0m0.006s 0m0.034s)
1685. insert rows, query by value (ovsdb-server.at:892): ok     (0m0.009s 0m0.049s)
1686. insert rows, query by named-uuid (ovsdb-server.at:892): ok     (0m0.004s 0m0.033s)
1687. insert rows, update rows by value (ovsdb-server.at:892): ok     (0m0.003s 0m0.053s)
1688. insert rows, mutate rows (ovsdb-server.at:892): ok     (0m0.006s 0m0.044s)
1689. insert rows, delete by named-uuid (ovsdb-server.at:892): ok     (0m0.003s 0m0.034s)
1690. insert rows, delete rows by value (ovsdb-server.at:892): ok     (0m0.011s 0m0.042s)
1691. insert rows, delete by (non-matching) value (ovsdb-server.at:892): ok     (0m0.008s 0m0.047s)
1692. insert rows, delete all (ovsdb-server.at:892): ok     (0m0.002s 0m0.032s)
1693. insert row, query table, commit (ovsdb-server.at:892): ok     (0m0.008s 0m0.026s)
1694. insert row, query table, commit durably (ovsdb-server.at:892): ok     (0m0.006s 0m0.029s)
1695. equality wait with correct rows (ovsdb-server.at:892): ok     (0m0.010s 0m0.028s)
1696. equality wait with extra row (ovsdb-server.at:892): ok     (0m0.007s 0m0.037s)
1697. equality wait with missing row (ovsdb-server.at:892): ok     (0m0.008s 0m0.027s)
1698. inequality wait with correct rows (ovsdb-server.at:892): ok     (0m0.002s 0m0.037s)
1699. inequality wait with extra row (ovsdb-server.at:892): ok     (0m0.005s 0m0.033s)
1700. inequality wait with missing row (ovsdb-server.at:892): ok     (0m0.006s 0m0.031s)
1701. insert and update constraints (ovsdb-server.at:892): ok     (0m0.016s 0m0.048s)
1702. index uniqueness checking (ovsdb-server.at:892): ok     (0m0.020s 0m0.077s)
1703. referential integrity -- simple (ovsdb-server.at:892): ok     (0m0.011s 0m0.095s)
1704. referential integrity -- mutual references (ovsdb-server.at:892): ok     (0m0.014s 0m0.062s)
1705. weak references (ovsdb-server.at:892): ok     (0m0.018s 0m0.108s)
1706. immutable columns (ovsdb-server.at:892): ok     (0m0.008s 0m0.061s)
1707. garbage collection (ovsdb-server.at:892): ok     (0m0.018s 0m0.119s)
1708. insert default row, query table (ovsdb-server.at:929): skipped (ovsdb-server.at:929)
1709. insert default row, query table (ovsdb-server.at:965): ok     (0m0.012s 0m0.029s)
1710. insert row, query table (ovsdb-server.at:965): ok     (0m0.002s 0m0.039s)
1711. insert rows, query by value (ovsdb-server.at:965): ok     (0m0.019s 0m0.050s)
1712. insert rows, query by named-uuid (ovsdb-server.at:965): ok     (0m0.010s 0m0.025s)
1713. insert rows, update rows by value (ovsdb-server.at:965): ok     (0m0.001s 0m0.069s)
1714. insert rows, mutate rows (ovsdb-server.at:965): ok     (0m0.019s 0m0.052s)
1715. insert rows, delete by named-uuid (ovsdb-server.at:965): ok     (0m0.016s 0m0.016s)
1716. insert rows, delete rows by value (ovsdb-server.at:965): ok     (0m0.024s 0m0.050s)
1717. insert rows, delete by (non-matching) value (ovsdb-server.at:965): ok     (0m0.023s 0m0.059s)
1718. insert rows, delete all (ovsdb-server.at:965): ok     (0m0.015s 0m0.028s)
1719. insert row, query table, commit (ovsdb-server.at:965): ok     (0m0.005s 0m0.027s)
1720. insert row, query table, commit durably (ovsdb-server.at:965): ok     (0m0.008s 0m0.022s)
1721. equality wait with correct rows (ovsdb-server.at:965): ok     (0m0.012s 0m0.017s)
1722. equality wait with extra row (ovsdb-server.at:965): ok     (0m0.006s 0m0.023s)
1723. equality wait with missing row (ovsdb-server.at:965): ok     (0m0.012s 0m0.026s)
1724. inequality wait with correct rows (ovsdb-server.at:965): ok     (0m0.006s 0m0.024s)
1725. inequality wait with extra row (ovsdb-server.at:965): ok     (0m0.006s 0m0.032s)
1726. inequality wait with missing row (ovsdb-server.at:965): ok     (0m0.010s 0m0.028s)
1727. insert and update constraints (ovsdb-server.at:965): ok     (0m0.018s 0m0.064s)
1728. index uniqueness checking (ovsdb-server.at:965): ok     (0m0.044s 0m0.112s)
1729. referential integrity -- simple (ovsdb-server.at:965): ok     (0m0.039s 0m0.111s)
1730. referential integrity -- mutual references (ovsdb-server.at:965): ok     (0m0.024s 0m0.097s)
1731. weak references (ovsdb-server.at:965): ok     (0m0.064s 0m0.202s)
1732. immutable columns (ovsdb-server.at:965): ok     (0m0.018s 0m0.065s)
1733. garbage collection (ovsdb-server.at:965): ok     (0m0.080s 0m0.202s)
1734. monitor insert into empty table (ovsdb-monitor.at:47): ok     (0m0.013s 0m0.042s)
1735. monitor insert into populated table (ovsdb-monitor.at:59): ok     (0m0.009s 0m0.044s)
1736. monitor delete (ovsdb-monitor.at:77): ok     (0m0.012s 0m0.036s)
1737. monitor row update (ovsdb-monitor.at:95): ok     (0m0.012s 0m0.039s)
1738. monitor no-op row updates (ovsdb-monitor.at:115): ok     (0m0.004s 0m0.051s)
1739. monitor insert-and-update transaction (ovsdb-monitor.at:138): ok     (0m0.009s 0m0.045s)
1740. monitor insert-update-and-delete transaction (ovsdb-monitor.at:161): ok     (0m0.005s 0m0.052s)
1741. monitor weak reference change (ovsdb-monitor.at:190): ok     (0m0.007s 0m0.040s)
1742. monitor insert-update-and-delete transaction (ovsdb-monitor.at:225): ok     (0m0.016s 0m0.036s)
1743. monitor all operations (ovsdb-monitor.at:276): ok     (0m0.009s 0m0.060s)
1744. monitor initial only (ovsdb-monitor.at:296): ok     (0m0.003s 0m0.057s)
1745. monitor insert only (ovsdb-monitor.at:303): ok     (0m0.021s 0m0.041s)
1746. monitor delete only (ovsdb-monitor.at:310): ok     (0m0.014s 0m0.041s)
1747. monitor modify only (ovsdb-monitor.at:318): ok     (0m0.009s 0m0.047s)
1748. simple idl, initially empty, no ops - C (ovsdb-idl.at:138): ok     (0m0.011s 0m0.023s)
1749. simple idl, initially empty, no ops - Python2 (ovsdb-idl.at:138): ok     (0m0.065s 0m0.056s)
1750. simple idl, initially empty, no ops - Python3 (ovsdb-idl.at:138): skipped (ovsdb-idl.at:138)
1751. simple idl, initially empty, no ops - Python2 - register_columns (ovsdb-idl.at:138): ok     (0m0.085s 0m0.045s)
1752. simple idl, initially empty, no ops - Python3 - register_columns (ovsdb-idl.at:138): skipped (ovsdb-idl.at:138)
1753. simple idl, initially empty, no ops - Python2 - tcp (ovsdb-idl.at:138): ok     (0m0.074s 0m0.047s)
1754. simple idl, initially empty, no ops - Python3 - tcp (ovsdb-idl.at:138): skipped (ovsdb-idl.at:138)
1755. simple idl, initially empty, no ops - Python2 - tcp6 (ovsdb-idl.at:138): skipped (ovsdb-idl.at:138)
1756. simple idl, initially empty, no ops - Python3 - tcp6 (ovsdb-idl.at:138): skipped (ovsdb-idl.at:138)
1757. simple idl, initially empty, various ops - C (ovsdb-idl.at:145): ok     (0m0.020s 0m0.054s)
1758. simple idl, initially empty, various ops - Python2 (ovsdb-idl.at:145): ok     (0m0.154s 0m0.093s)
1759. simple idl, initially empty, various ops - Python3 (ovsdb-idl.at:145): skipped (ovsdb-idl.at:145)
1760. simple idl, initially empty, various ops - Python2 - register_columns (ovsdb-idl.at:145): ok     (0m0.126s 0m0.068s)
1761. simple idl, initially empty, various ops - Python3 - register_columns (ovsdb-idl.at:145): skipped (ovsdb-idl.at:145)
1762. simple idl, initially empty, various ops - Python2 - tcp (ovsdb-idl.at:145): ok     (0m0.095s 0m0.083s)
1763. simple idl, initially empty, various ops - Python3 - tcp (ovsdb-idl.at:145): skipped (ovsdb-idl.at:145)
1764. simple idl, initially empty, various ops - Python2 - tcp6 (ovsdb-idl.at:145): skipped (ovsdb-idl.at:145)
1765. simple idl, initially empty, various ops - Python3 - tcp6 (ovsdb-idl.at:145): skipped (ovsdb-idl.at:145)
1766. simple idl, initially populated - C (ovsdb-idl.at:223): ok     (0m0.008s 0m0.035s)
1767. simple idl, initially populated - Python2 (ovsdb-idl.at:223): ok     (0m0.077s 0m0.052s)
1768. simple idl, initially populated - Python3 (ovsdb-idl.at:223): skipped (ovsdb-idl.at:223)
1769. simple idl, initially populated - Python2 - register_columns (ovsdb-idl.at:223): ok     (0m0.061s 0m0.074s)
1770. simple idl, initially populated - Python3 - register_columns (ovsdb-idl.at:223): skipped (ovsdb-idl.at:223)
1771. simple idl, initially populated - Python2 - tcp (ovsdb-idl.at:223): ok     (0m0.069s 0m0.069s)
1772. simple idl, initially populated - Python3 - tcp (ovsdb-idl.at:223): skipped (ovsdb-idl.at:223)
1773. simple idl, initially populated - Python2 - tcp6 (ovsdb-idl.at:223): skipped (ovsdb-idl.at:223)
1774. simple idl, initially populated - Python3 - tcp6 (ovsdb-idl.at:223): skipped (ovsdb-idl.at:223)
1775. simple idl, writing via IDL - C (ovsdb-idl.at:254): ok     (0m0.011s 0m0.026s)
1776. simple idl, writing via IDL - Python2 (ovsdb-idl.at:254): ok     (0m0.108s 0m0.056s)
1777. simple idl, writing via IDL - Python3 (ovsdb-idl.at:254): skipped (ovsdb-idl.at:254)
1778. simple idl, writing via IDL - Python2 - register_columns (ovsdb-idl.at:254): ok     (0m0.093s 0m0.056s)
1779. simple idl, writing via IDL - Python3 - register_columns (ovsdb-idl.at:254): skipped (ovsdb-idl.at:254)
1780. simple idl, writing via IDL - Python2 - tcp (ovsdb-idl.at:254): ok     (0m0.146s 0m0.066s)
1781. simple idl, writing via IDL - Python3 - tcp (ovsdb-idl.at:254): skipped (ovsdb-idl.at:254)
1782. simple idl, writing via IDL - Python2 - tcp6 (ovsdb-idl.at:254): skipped (ovsdb-idl.at:254)
1783. simple idl, writing via IDL - Python3 - tcp6 (ovsdb-idl.at:254): skipped (ovsdb-idl.at:254)
1784. simple idl, handling verification failure - C (ovsdb-idl.at:285): ok     (0m0.009s 0m0.032s)
1785. simple idl, handling verification failure - Python2 (ovsdb-idl.at:285): ok     (0m0.098s 0m0.063s)
1786. simple idl, handling verification failure - Python3 (ovsdb-idl.at:285): skipped (ovsdb-idl.at:285)
1787. simple idl, handling verification failure - Python2 - register_columns (ovsdb-idl.at:285): ok     (0m0.056s 0m0.079s)
1788. simple idl, handling verification failure - Python3 - register_columns (ovsdb-idl.at:285): skipped (ovsdb-idl.at:285)
1789. simple idl, handling verification failure - Python2 - tcp (ovsdb-idl.at:285): ok     (0m0.096s 0m0.063s)
1790. simple idl, handling verification failure - Python3 - tcp (ovsdb-idl.at:285): skipped (ovsdb-idl.at:285)
1791. simple idl, handling verification failure - Python2 - tcp6 (ovsdb-idl.at:285): skipped (ovsdb-idl.at:285)
1792. simple idl, handling verification failure - Python3 - tcp6 (ovsdb-idl.at:285): skipped (ovsdb-idl.at:285)
1793. simple idl, increment operation - C (ovsdb-idl.at:316): ok     (0m0.009s 0m0.032s)
1794. simple idl, increment operation - Python2 (ovsdb-idl.at:316): ok     (0m0.063s 0m0.081s)
1795. simple idl, increment operation - Python3 (ovsdb-idl.at:316): skipped (ovsdb-idl.at:316)
1796. simple idl, increment operation - Python2 - register_columns (ovsdb-idl.at:316): ok     (0m0.088s 0m0.050s)
1797. simple idl, increment operation - Python3 - register_columns (ovsdb-idl.at:316): skipped (ovsdb-idl.at:316)
1798. simple idl, increment operation - Python2 - tcp (ovsdb-idl.at:316): ok     (0m0.090s 0m0.052s)
1799. simple idl, increment operation - Python3 - tcp (ovsdb-idl.at:316): skipped (ovsdb-idl.at:316)
1800. simple idl, increment operation - Python2 - tcp6 (ovsdb-idl.at:316): skipped (ovsdb-idl.at:316)
1801. simple idl, increment operation - Python3 - tcp6 (ovsdb-idl.at:316): skipped (ovsdb-idl.at:316)
1802. simple idl, aborting - C (ovsdb-idl.at:328): ok     (0m0.006s 0m0.039s)
1803. simple idl, aborting - Python2 (ovsdb-idl.at:328): ok     (0m0.081s 0m0.098s)
1804. simple idl, aborting - Python3 (ovsdb-idl.at:328): skipped (ovsdb-idl.at:328)
1805. simple idl, aborting - Python2 - register_columns (ovsdb-idl.at:328): ok     (0m0.118s 0m0.074s)
1806. simple idl, aborting - Python3 - register_columns (ovsdb-idl.at:328): skipped (ovsdb-idl.at:328)
1807. simple idl, aborting - Python2 - tcp (ovsdb-idl.at:328): ok     (0m0.116s 0m0.089s)
1808. simple idl, aborting - Python3 - tcp (ovsdb-idl.at:328): skipped (ovsdb-idl.at:328)
1809. simple idl, aborting - Python2 - tcp6 (ovsdb-idl.at:328): skipped (ovsdb-idl.at:328)
1810. simple idl, aborting - Python3 - tcp6 (ovsdb-idl.at:328): skipped (ovsdb-idl.at:328)
1811. simple idl, destroy without commit or abort - C (ovsdb-idl.at:342): ok     (0m0.005s 0m0.038s)
1812. simple idl, destroy without commit or abort - Python2 (ovsdb-idl.at:342): ok     (0m0.070s 0m0.063s)
1813. simple idl, destroy without commit or abort - Python3 (ovsdb-idl.at:342): skipped (ovsdb-idl.at:342)
1814. simple idl, destroy without commit or abort - Python2 - register_columns (ovsdb-idl.at:342): ok     (0m0.154s 0m0.076s)
1815. simple idl, destroy without commit or abort - Python3 - register_columns (ovsdb-idl.at:342): skipped (ovsdb-idl.at:342)
1816. simple idl, destroy without commit or abort - Python2 - tcp (ovsdb-idl.at:342): ok     (0m0.094s 0m0.086s)
1817. simple idl, destroy without commit or abort - Python3 - tcp (ovsdb-idl.at:342): skipped (ovsdb-idl.at:342)
1818. simple idl, destroy without commit or abort - Python2 - tcp6 (ovsdb-idl.at:342): skipped (ovsdb-idl.at:342)
1819. simple idl, destroy without commit or abort - Python3 - tcp6 (ovsdb-idl.at:342): skipped (ovsdb-idl.at:342)
1820. self-linking idl, consistent ops - C (ovsdb-idl.at:356): ok     (0m0.004s 0m0.034s)
1821. self-linking idl, consistent ops - Python2 (ovsdb-idl.at:356): ok     (0m0.080s 0m0.078s)
1822. self-linking idl, consistent ops - Python3 (ovsdb-idl.at:356): skipped (ovsdb-idl.at:356)
1823. self-linking idl, consistent ops - Python2 - register_columns (ovsdb-idl.at:356): ok     (0m0.107s 0m0.067s)
1824. self-linking idl, consistent ops - Python3 - register_columns (ovsdb-idl.at:356): skipped (ovsdb-idl.at:356)
1825. self-linking idl, consistent ops - Python2 - tcp (ovsdb-idl.at:356): ok     (0m0.102s 0m0.087s)
1826. self-linking idl, consistent ops - Python3 - tcp (ovsdb-idl.at:356): skipped (ovsdb-idl.at:356)
1827. self-linking idl, consistent ops - Python2 - tcp6 (ovsdb-idl.at:356): skipped (ovsdb-idl.at:356)
1828. self-linking idl, consistent ops - Python3 - tcp6 (ovsdb-idl.at:356): skipped (ovsdb-idl.at:356)
1829. self-linking idl, inconsistent ops - C (ovsdb-idl.at:400): ok     (0m0.006s 0m0.031s)
1830. self-linking idl, inconsistent ops - Python2 (ovsdb-idl.at:400): ok     (0m0.076s 0m0.065s)
1831. self-linking idl, inconsistent ops - Python3 (ovsdb-idl.at:400): skipped (ovsdb-idl.at:400)
1832. self-linking idl, inconsistent ops - Python2 - register_columns (ovsdb-idl.at:400): ok     (0m0.078s 0m0.068s)
1833. self-linking idl, inconsistent ops - Python3 - register_columns (ovsdb-idl.at:400): skipped (ovsdb-idl.at:400)
1834. self-linking idl, inconsistent ops - Python2 - tcp (ovsdb-idl.at:400): ok     (0m0.084s 0m0.051s)
1835. self-linking idl, inconsistent ops - Python3 - tcp (ovsdb-idl.at:400): skipped (ovsdb-idl.at:400)
1836. self-linking idl, inconsistent ops - Python2 - tcp6 (ovsdb-idl.at:400): skipped (ovsdb-idl.at:400)
1837. self-linking idl, inconsistent ops - Python3 - tcp6 (ovsdb-idl.at:400): skipped (ovsdb-idl.at:400)
1838. self-linking idl, sets - C (ovsdb-idl.at:448): ok     (0m0.002s 0m0.035s)
1839. self-linking idl, sets - Python2 (ovsdb-idl.at:448): ok     (0m0.083s 0m0.062s)
1840. self-linking idl, sets - Python3 (ovsdb-idl.at:448): skipped (ovsdb-idl.at:448)
1841. self-linking idl, sets - Python2 - register_columns (ovsdb-idl.at:448): ok     (0m0.113s 0m0.077s)
1842. self-linking idl, sets - Python3 - register_columns (ovsdb-idl.at:448): skipped (ovsdb-idl.at:448)
1843. self-linking idl, sets - Python2 - tcp (ovsdb-idl.at:448): ok     (0m0.056s 0m0.091s)
1844. self-linking idl, sets - Python3 - tcp (ovsdb-idl.at:448): skipped (ovsdb-idl.at:448)
1845. self-linking idl, sets - Python2 - tcp6 (ovsdb-idl.at:448): skipped (ovsdb-idl.at:448)
1846. self-linking idl, sets - Python3 - tcp6 (ovsdb-idl.at:448): skipped (ovsdb-idl.at:448)
1847. external-linking idl, consistent ops - C (ovsdb-idl.at:498): ok     (0m0.002s 0m0.031s)
1848. external-linking idl, consistent ops - Python2 (ovsdb-idl.at:498): ok     (0m0.070s 0m0.054s)
1849. external-linking idl, consistent ops - Python3 (ovsdb-idl.at:498): skipped (ovsdb-idl.at:498)
1850. external-linking idl, consistent ops - Python2 - register_columns (ovsdb-idl.at:498): ok     (0m0.089s 0m0.082s)
1851. external-linking idl, consistent ops - Python3 - register_columns (ovsdb-idl.at:498): skipped (ovsdb-idl.at:498)
1852. external-linking idl, consistent ops - Python2 - tcp (ovsdb-idl.at:498): ok     (0m0.092s 0m0.044s)
1853. external-linking idl, consistent ops - Python3 - tcp (ovsdb-idl.at:498): skipped (ovsdb-idl.at:498)
1854. external-linking idl, consistent ops - Python2 - tcp6 (ovsdb-idl.at:498): skipped (ovsdb-idl.at:498)
1855. external-linking idl, consistent ops - Python3 - tcp6 (ovsdb-idl.at:498): skipped (ovsdb-idl.at:498)
1856. external-linking idl, insert ops - Python2 (ovsdb-idl.at:516): ok     (0m0.061s 0m0.069s)
1857. external-linking idl, insert ops - Python3 (ovsdb-idl.at:516): skipped (ovsdb-idl.at:516)
1858. getattr idl, insert ops - Python2 (ovsdb-idl.at:526): ok     (0m0.068s 0m0.089s)
1859. getattr idl, insert ops - Python3 (ovsdb-idl.at:526): skipped (ovsdb-idl.at:526)
1860. row-from-json idl, whats this - Python2 (ovsdb-idl.at:535): ok     (0m0.098s 0m0.065s)
1861. row-from-json idl, whats this - Python3 (ovsdb-idl.at:535): skipped (ovsdb-idl.at:535)
1862. idl handling of missing tables and columns - C (ovsdb-idl.at:552): ok     (0m0.015s 0m0.064s)
1863. simple idl, initially populated - Python fetch (ovsdb-idl.at:645): ok     (0m0.094s 0m0.051s)
1864. track, simple idl, initially populated - C (ovsdb-idl.at:691): ok     (0m0.013s 0m0.041s)
1865. track, simple idl, initially empty, various ops - C (ovsdb-idl.at:723): ok     (0m0.021s 0m0.046s)
1866. ovs-vsctl connection retry (ovs-vsctl.at:145): ok     (0m0.022s 0m0.043s)
1867. add-br a (ovs-vsctl.at:189): ok     (0m0.024s 0m0.090s)
1868. add-br a, add-br a (ovs-vsctl.at:199): ok     (0m0.022s 0m0.038s)
1869. add-br a, add-br b (ovs-vsctl.at:209): ok     (0m0.058s 0m0.122s)
1870. add-br a, add-br b, del-br a (ovs-vsctl.at:226): ok     (0m0.047s 0m0.082s)
1871. add-br a, del-br a, add-br a (ovs-vsctl.at:237): ok     (0m0.027s 0m0.085s)
1872. add-br a, add-port a a1, add-port a a2 (ovs-vsctl.at:257): ok     (0m0.048s 0m0.090s)
1873. add-br a, add-port a a1, add-port a a1 (ovs-vsctl.at:271): ok     (0m0.006s 0m0.038s)
1874. add-br a b, add-port a a1, add-port b b1, del-br a (ovs-vsctl.at:283): ok     (0m0.051s 0m0.075s)
1875. add-br a, add-bond a bond0 a1 a2 a3 (ovs-vsctl.at:305): ok     (0m0.060s 0m0.105s)
1876. add-br a b, add-port a a1, add-port b b1, del-port a a1 (ovs-vsctl.at:323): ok     (0m0.061s 0m0.156s)
1877. add-br a, add-bond a bond0 a1 a2 a3, del-port bond0 (ovs-vsctl.at:354): ok     (0m0.016s 0m0.084s)
1878. external IDs (ovs-vsctl.at:371): ok     (0m0.079s 0m0.172s)
1879. controllers (ovs-vsctl.at:427): ok     (0m0.003s 0m0.032s)
1880. simple fake bridge (VLAN 9) (ovs-vsctl.at:557): ok     (0m0.101s 0m0.153s)
1881. list bridges -- real and fake (VLAN 9) (ovs-vsctl.at:557): ok     (0m0.038s 0m0.034s)
1882. simple fake bridge + del-br fake bridge (VLAN 9) (ovs-vsctl.at:557): ok     (0m0.060s 0m0.093s)
1883. simple fake bridge + del-br real bridge (VLAN 9) (ovs-vsctl.at:557): ok     (0m0.026s 0m0.070s)
1884. simple fake bridge + external IDs (VLAN 9) (ovs-vsctl.at:557): ok     (0m0.066s 0m0.187s)
1885. simple fake bridge (VLAN 0) (ovs-vsctl.at:558): ok     (0m0.079s 0m0.194s)
1886. list bridges -- real and fake (VLAN 0) (ovs-vsctl.at:558): ok     (0m0.023s 0m0.057s)
1887. simple fake bridge + del-br fake bridge (VLAN 0) (ovs-vsctl.at:558): ok     (0m0.058s 0m0.102s)
1888. simple fake bridge + del-br real bridge (VLAN 0) (ovs-vsctl.at:558): ok     (0m0.025s 0m0.057s)
1889. simple fake bridge + external IDs (VLAN 0) (ovs-vsctl.at:558): ok     (0m0.059s 0m0.174s)
1890. fake bridge on bond (ovs-vsctl.at:570): ok     (0m0.103s 0m0.153s)
1891. fake bridge on bond + del-br fake bridge (ovs-vsctl.at:582): ok     (0m0.036s 0m0.127s)
1892. fake bridge on bond + del-br real bridge (ovs-vsctl.at:594): ok     (0m0.027s 0m0.042s)
1893. managers (ovs-vsctl.at:606): ok     (0m0.002s 0m0.035s)
1894. database commands -- positive checks (ovs-vsctl.at:632): ok     (0m0.031s 0m0.124s)
1895. database commands -- negative checks (ovs-vsctl.at:745): ok     (0m0.087s 0m0.203s)
1896. database commands -- conditions (ovs-vsctl.at:870): ok     (0m0.260s 0m0.717s)
1897. database commands -- wait-until immediately true (ovs-vsctl.at:1005): ok     (0m0.033s 0m0.045s)
1898. database commands -- wait-until must wait (ovs-vsctl.at:1024): ok     (0m0.021s 0m0.059s)
1899. --id option on create, get commands (ovs-vsctl.at:1058): ok     (0m0.017s 0m0.064s)
1900. unreferenced record warnings (ovs-vsctl.at:1107): ok     (0m0.021s 0m0.047s)
1901. created row UUID is wrong in same execution (ovs-vsctl.at:1141): ok     (0m0.021s 0m0.024s)
1902. --all option on destroy command (ovs-vsctl.at:1178): ok     (0m0.062s 0m0.146s)
1903. add-port -- reserved names 1 (ovs-vsctl.at:1227): ok     (0m0.053s 0m0.123s)
1904. add-port -- reserved names 2 (ovs-vsctl.at:1257): ok     (0m0.039s 0m0.095s)
1905. naming in db commands (ovs-vsctl.at:1293): ok     (0m0.015s 0m0.040s)
1906. bootstrap ca cert (ovs-vsctl.at:1311): ok     (0m0.167s 0m0.158s)
1907. peer ca cert (ovs-vsctl.at:1338): ok     (0m0.173s 0m0.157s)
1908. ovs-monitor-ipsec (ovs-monitor-ipsec.at:3): ok     (0m0.113s 0m0.310s)
1909. ovs-xapi-sync (ovs-xapi-sync.at:3): ok     (0m0.077s 0m0.121s)
1910. non-VLAN, non-bond (interface-reconfigure.at:697): ok     (0m0.109s 0m0.229s)
1911. VLAN, non-bond (interface-reconfigure.at:774): ok     (0m0.076s 0m0.150s)
1912. Bond, non-VLAN (interface-reconfigure.at:849): ok     (0m0.056s 0m0.203s)
1913. VLAN on bond (interface-reconfigure.at:939): ok     (0m0.079s 0m0.144s)
1914. Re-create port with different types (interface-reconfigure.at:1040): ok     (0m0.016s 0m0.043s)
1915. STP example from IEEE 802.1D-1998 (stp.at:3): ok     (0m0.004s 0m0.005s)
1916. STP example from IEEE 802.1D-2004 figures 17.4 and 17.5 (stp.at:27): ok     (0m0.006s 0m0.008s)
1917. STP example from IEEE 802.1D-2004 figure 17.6 (stp.at:70): ok     (0m0.002s 0m0.006s)
1918. STP example from IEEE 802.1D-2004 figure 17.7 (stp.at:96): ok     (0m0.005s 0m0.004s)
1919. STP.io.1.1: Link Failure (stp.at:125): ok     (0m0.000s 0m0.009s)
1920. STP.io.1.2: Repeated Network (stp.at:164): ok     (0m0.000s 0m0.010s)
1921. STP.io.1.4: Network Initialization (stp.at:188): ok     (0m0.004s 0m0.005s)
1922. STP.io.1.5: Topology Change (stp.at:214): ok     (0m0.008s 0m0.004s)
1923. STP.op.1.1 and STP.op.1.2 (stp.at:267): ok     (0m0.000s 0m0.006s)
1924. STP.op.1.4: All Ports Initialized to Designated Ports (stp.at:281): ok     (0m0.000s 0m0.006s)
1925. STP.op.3.1: Root Bridge Selection: Root ID Values (stp.at:302): ok     (0m0.000s 0m0.006s)
1926. STP.op.3.3: Root Bridge Selection: Bridge ID Values (stp.at:322): ok     (0m0.006s 0m0.003s)
1927. STP.op.3.3: Root Bridge Selection: Bridge ID Values (stp.at:345): ok     (0m0.000s 0m0.008s)
1928. STP - dummy interface (stp.at:380): ok     (0m0.040s 0m0.108s)
1929. RSTP Single bridge (rstp.at:3): ok     (0m0.001s 0m0.002s)
1930. RSTP Link failure (rstp.at:13): ok     (0m0.004s 0m0.003s)
1931. RSTP Double link Failure (rstp.at:32): ok     (0m0.012s 0m0.004s)
1932. RSTP example from IEEE 802.1D-2004 figures 17.4 and 17.5 (rstp.at:74): ok     (0m0.019s 0m0.004s)
1933. RSTP example from IEEE 802.1D-2004 figure 17.6 (rstp.at:111): ok     (0m0.006s 0m0.003s)
1934. RSTP example from IEEE 802.1D-2004 figure 17.7 (rstp.at:131): ok     (0m0.006s 0m0.002s)
1935. RSTP - dummy interface (rstp.at:156): ok     (0m0.058s 0m0.151s)
1936. vlog - Python2 (vlog.at:105): ok     (0m0.043s 0m0.058s)
1937. vlog - Python3 (vlog.at:106): skipped (vlog.at:106)
1938. vlog - vlog/reopen - C (vlog.at:115): ok     (0m0.004s 0m0.047s)
1939. vlog - vlog/reopen - Python2 (vlog.at:175): ok     (0m0.035s 0m0.062s)
1940. vlog - vlog/reopen - Python3 (vlog.at:176): skipped (vlog.at:176)
1941. vlog - vlog/reopen without log file - C (vlog.at:178): ok     (0m0.002s 0m0.011s)
1942. vlog - vlog/reopen without log file - Python2 (vlog.at:201): ok     (0m0.039s 0m0.038s)
1943. vlog - vlog/reopen without log file - Python3 (vlog.at:202): skipped (vlog.at:202)
1944. vlog - vlog/reopen can't reopen log file - C (vlog.at:206): ok     (0m0.010s 0m0.047s)
1945. vlog - vlog/reopen can't reopen log file - Python2 (vlog.at:271): ok     (0m0.065s 0m0.045s)
1946. vlog - vlog/reopen can't reopen log file - Python3 (vlog.at:272): skipped (vlog.at:272)
1947. vlog - vlog/close - C (vlog.at:274): ok     (0m0.004s 0m0.048s)
1948. vlog - vlog/close - Python2 (vlog.at:349): ok     (0m0.035s 0m0.068s)
1949. vlog - vlog/close - Python3 (vlog.at:350): skipped (vlog.at:350)
1950. vlog - vlog/set and vlog/list - C (vlog.at:352): ok     (0m0.009s 0m0.045s)
1951. vlog - vlog/set and vlog/list - Python2 (vlog.at:448): ok     (0m0.041s 0m0.068s)
1952. vlog - vlog/set and vlog/list - Python3 (vlog.at:449): skipped (vlog.at:449)
1953. vlog - RFC5424 facility (vlog.at:451): ok     (0m0.005s 0m0.046s)
1954. vlog - RFC5424 facility - Python2 (vlog.at:507): ok     (0m0.096s 0m0.059s)
1955. vlog - RFC5424 facility - Python3 (vlog.at:508): skipped (vlog.at:508)
1956. add-ps a (vtep-ctl.at:135): ok     (0m0.010s 0m0.038s)
1957. add-ps a, add-ps a (vtep-ctl.at:143): ok     (0m0.011s 0m0.026s)
1958. add-ps a, add-ps b (vtep-ctl.at:153): ok     (0m0.015s 0m0.041s)
1959. add-ps a, add-ps b, del-ps a (vtep-ctl.at:162): ok     (0m0.007s 0m0.050s)
1960. add-ps a, del-ps a, add-ps a (vtep-ctl.at:171): ok     (0m0.008s 0m0.042s)
1961. add-ps a, add-port a a1, add-port a a2 (vtep-ctl.at:185): ok     (0m0.027s 0m0.042s)
1962. add-ps a, add-port a a1, add-port a a1 (vtep-ctl.at:198): ok     (0m0.007s 0m0.032s)
1963. add-ps a b, add-port a a1, add-port b b1, del-ps a (vtep-ctl.at:210): ok     (0m0.015s 0m0.043s)
1964. add-ps a b, add-port a a1, add-port b b1, del-port a a1 (vtep-ctl.at:231): ok     (0m0.011s 0m0.080s)
1965. add-ps a b, add-port a p1, add-port b p1, del-port a p1 (vtep-ctl.at:248): ok     (0m0.025s 0m0.098s)
1966. add-ls a (vtep-ctl.at:271): ok     (0m0.001s 0m0.044s)
1967. add-ls a, add-ls a (vtep-ctl.at:279): ok     (0m0.013s 0m0.022s)
1968. add-ls a, add-ls b (vtep-ctl.at:289): ok     (0m0.014s 0m0.047s)
1969. add-ls a, add-ls b, del-ls a (vtep-ctl.at:298): ok     (0m0.015s 0m0.039s)
1970. add-ls a, del-ls a, add-ls a (vtep-ctl.at:307): ok     (0m0.011s 0m0.038s)
1971. bind-ls ps1 pp1 300 ls1 (vtep-ctl.at:325): ok     (0m0.027s 0m0.063s)
1972. bind-ls ps1 pp1 300 ls1, bind-ls ps1 pp1 400 ls2 (vtep-ctl.at:343): ok     (0m0.034s 0m0.079s)
1973. bind-ls ps1 pp1 300, bind-ls ps2 pp2 300 ls2 (vtep-ctl.at:365): ok     (0m0.030s 0m0.106s)
1974. add-ucast-local ls1 (vtep-ctl.at:396): ok     (0m0.009s 0m0.055s)
1975. add-ucast-local ls1, overwrite (vtep-ctl.at:423): ok     (0m0.023s 0m0.042s)
1976. add-ucast-local ls1, del-ucast-local ls1 (vtep-ctl.at:443): ok     (0m0.008s 0m0.072s)
1977. add-ucast-remote ls1 (vtep-ctl.at:474): ok     (0m0.024s 0m0.047s)
1978. add-ucast-remote ls1, overwrite (vtep-ctl.at:501): ok     (0m0.016s 0m0.045s)
1979. add-ucast-remote ls1, del-ucast-remote ls1 (vtep-ctl.at:521): ok     (0m0.021s 0m0.058s)
1980. add-ucast-local ls1, add-ucast-remote ls1 (vtep-ctl.at:552): ok     (0m0.034s 0m0.058s)
1981. add-mcast-local ls1 (vtep-ctl.at:583): ok     (0m0.013s 0m0.058s)
1982. add-mcast-local ls1, del-mcast-local ls1 (vtep-ctl.at:612): ok     (0m0.026s 0m0.059s)
1983. add-mcast-remote ls1 (vtep-ctl.at:649): ok     (0m0.029s 0m0.043s)
1984. add-mcast-remote ls1, del-mcast-remote ls1 (vtep-ctl.at:678): ok     (0m0.019s 0m0.060s)
1985. add-mcast-local ls1, add-mcast-remote ls1 (vtep-ctl.at:715): ok     (0m0.031s 0m0.070s)
1986. add local and remote macs, clear-local-macs (vtep-ctl.at:750): ok     (0m0.032s 0m0.089s)
1987. add local and remote macs, clear-remote-macs (vtep-ctl.at:807): ok     (0m0.045s 0m0.070s)
1988. managers (vtep-ctl.at:867): ok     (0m0.006s 0m0.040s)
1989. show command (vtep-ctl.at:890): ok     (0m0.015s 0m0.045s)
1990. auto-attach - packet tests (auto-attach.at:3): ok     (0m0.000s 0m0.008s)
1991. ovn -- lexer (ovn.at:3): ok     (0m0.002s 0m0.007s)
1992. ovn -- expression parser (ovn.at:98): ok     (0m0.003s 0m0.009s)
1993. ovn -- expression annotation (ovn.at:268): ok     (0m0.001s 0m0.007s)
1994. ovn -- 1-term expression conversion (ovn.at:305): ok     (0m0.000s 0m0.006s)
1995. ovn -- 2-term expression conversion (ovn.at:311): ok     (0m0.015s 0m0.009s)
1996. ovn -- 3-term expression conversion (ovn.at:317): ok     (0m0.939s 0m0.008s)
1997. ovn -- 3-term numeric expression simplification (ovn.at:323): ok     (0m3.671s 0m0.010s)
1998. ovn -- 4-term string expression simplification (ovn.at:329): ok     (0m0.064s 0m0.013s)
1999. ovn -- 3-term mixed expression simplification (ovn.at:335): ok     (0m0.354s 0m0.011s)
2000. ovn -- 4-term numeric expression normalization (ovn.at:341): ok     (0m3.511s 0m0.015s)
2001. ovn -- 4-term string expression normalization (ovn.at:347): ok     (0m0.024s 0m0.014s)
2002. ovn -- 4-term mixed expression normalization (ovn.at:353): ok     (0m0.347s 0m0.020s)
2003. ovn -- 5-term numeric expression normalization (ovn.at:359): ok     (0m0.959s 0m0.014s)
2004. ovn -- 5-term string expression normalization (ovn.at:365): ok     (0m1.251s 0m0.008s)
2005. ovn -- 5-term mixed expression normalization (ovn.at:371): ok     (0m0.263s 0m0.013s)
2006. ovn -- 4-term numeric expressions to flows (ovn.at:377): ok     (0m1.081s 0m0.011s)
2007. ovn -- 4-term string expressions to flows (ovn.at:383): ok     (0m0.210s 0m0.008s)
2008. ovn -- 4-term mixed expressions to flows (ovn.at:389): ok     (0m0.251s 0m0.013s)
2009. ovn -- 3-term numeric expressions to flows (ovn.at:395): ok     (0m2.837s 0m0.015s)
2010. ovn -- converting expressions to flows -- string fields (ovn.at:401): ok     (0m0.031s 0m0.067s)
2011. ovn -- action parsing (ovn.at:437): ok     (0m0.000s 0m0.008s)
2012. ovn -- 3 HVs, 1 LS, 3 lports/HV (ovn.at:529): ok     (0m1.456s 0m7.505s)
2013. ovn -- 2 HVs, 4 lports/HV, localnet ports (ovn.at:793): ok     (0m0.328s 0m0.545s)
2014. ovn -- 3 HVs, 1 VIFs/HV, 1 GW, 1 LS (ovn.at:942): ok     (0m0.356s 0m0.577s)
2015. ovn -- 3 HVs, 3 LS, 3 lports/LS, 1 LR (ovn.at:1104): ok     (0m2.323s 0m13.178s)
2016. ovn-nbctl - basic lswitch commands (ovn-nbctl.at:32): ok     (0m0.012s 0m0.052s)
2017. ovn-nbctl - basic lport commands (ovn-nbctl.at:56): ok     (0m0.024s 0m0.056s)
2018. ovn-nbctl - addresses (ovn-nbctl.at:81): ok     (0m0.015s 0m0.036s)
2019. ovn-nbctl - port security (ovn-nbctl.at:104): ok     (0m0.008s 0m0.042s)
2020. ovn-nbctl - ACLs (ovn-nbctl.at:127): ok     (0m0.030s 0m0.061s)
2021. ovn-sbctl - chassis commands (ovn-sbctl.at:43): ok     (0m0.011s 0m0.082s)
2022. ovn-sbctl - test (ovn-sbctl.at:75): ok     (0m0.022s 0m0.105s)
2023. ovn-controller - ovn-bridge-mappings (ovn-controller.at:3): ok     (0m0.105s 0m0.230s)
2024. ovn-controller-vtep - test chassis (ovn-controller-vtep.at:113): ok     (0m0.089s 0m0.248s)
2025. ovn-controller-vtep - test binding 1 (ovn-controller-vtep.at:180): ok     (0m0.109s 0m0.232s)
2026. ovn-controller-vtep - test binding 2 (ovn-controller-vtep.at:244): ok     (0m0.092s 0m0.204s)
2027. ovn-controller-vtep - test vtep-lswitch (ovn-controller-vtep.at:283): ok     (0m0.108s 0m0.244s)
2028. ovn-controller-vtep - test vtep-macs 1 (ovn-controller-vtep.at:335): ok     (0m0.104s 0m0.258s)
2029. ovn-controller-vtep - test vtep-macs 2 (ovn-controller-vtep.at:406): ok     (0m0.097s 0m0.235s)
testsuite: ending at: Wed Mar  2 15:19:19 CET 2016
testsuite: test suite duration: 0h 10m 26s

## ------------- ##
## Test results. ##
## ------------- ##

1819 tests were successful.
210 tests were skipped.
